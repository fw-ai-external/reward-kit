name: Python Package Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*' # Trigger on version tags like v1.2.3, v1.2.3-alpha

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create GitHub releases
      id-token: write # Needed for PyPI trusted publishing

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Changes in this release:
          - TODO: Add release notes here or link to CHANGELOG.md
        draft: false
        prerelease: ${{ contains(github.ref_name, '-') }} # Mark as prerelease if tag contains '-' (e.g., v1.0.0-alpha)

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # with:
      #   user: __token__
      #   password: ${{ secrets.PYPI_API_TOKEN }} # Requires a PYPI_API_TOKEN secret in repository

    # If using trusted publishing (recommended), the above `with` block for user/password is not needed.
    # Ensure PyPI project settings are configured for trusted publishing from this GitHub repository and workflow.

    - name: Upload release assets (package files) to GitHub Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ./dist/*

    # Consider adding another asset upload for the .whl file if desired
    # - name: Upload Wheel to GitHub Release
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./dist/*.whl
    #     asset_name: ${{ github.event.repository.name }}-${{ github.ref_name }}.whl
    #     asset_content_type: application/wheel
