swagger: '2.0'
info:
  title: Gateway REST API
  version: 0.0.0
tags:
- name: Gateway
consumes:
- application/json
produces:
- application/json
paths:
  /v1/accounts:
    get:
      summary: List Accounts
      operationId: Gateway_ListAccounts
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListAccountsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of accounts to return. The maximum page_size
          is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListAccounts call. Provide
          this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListAccounts must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only accounts satisfying the provided filter (if specified)
          will be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'Not supported.

          Accounts will be returned ordered by `name`.'
        in: query
        required: false
        type: string
      tags:
      - Gateway
  /v1/validateModelConfig:
    post:
      summary: Validate Model Config
      operationId: Gateway_ValidateModelConfig
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/gatewayValidateModelConfigRequest'
      tags:
      - Gateway
  /v1/accounts/{account_id}:
    get:
      summary: Get Account
      operationId: Gateway_GetAccount
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayAccount'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/PeftMergeJobs:
    get:
      summary: List Peft-Merge Jobs
      operationId: Gateway_ListPeftMergeJobs
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListPeftMergeJobsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of peft merge jobs to return. The maximum
          page_size is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListPeftMergeJobs call.
          Provide this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListPeftMergeJobs must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only jobs satisfying the provided filter (if specified) will
          be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "created_time".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Peft-Merge Job
      operationId: Gateway_CreatePeftMergeJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayPeftMergeJob'
      parameters:
      - name: peftMergeJob
        in: body
        required: true
        schema:
          $ref: '#/definitions/gatewayPeftMergeJob'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/PeftMergeJobs/{peft_merge_job_id}:
    get:
      summary: Get Peft-Merge Job
      operationId: Gateway_GetPeftMergeJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayPeftMergeJob'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: peft_merge_job_id
        in: path
        required: true
        type: string
        description: The Peft Merge Job Id
      tags:
      - Gateway
    delete:
      summary: Delete Peft-Merge Job
      operationId: Gateway_DeletePeftMergeJob
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: peft_merge_job_id
        in: path
        required: true
        type: string
        description: The Peft Merge Job Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/apiKeys:
    get:
      summary: List API Keys
      operationId: Gateway_ListApiKeys
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListApiKeysResponse'
      parameters:
      - name: pageSize
        description: Number of API keys to return in the response. Pagination support
          to be added.
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: Token for fetching the next page of results. Pagination support
          to be added.
        in: query
        required: false
        type: string
      - name: filter
        description: Field for filtering results.
        in: query
        required: false
        type: string
      - name: orderBy
        description: Field for ordering results.
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create API Key
      operationId: Gateway_CreateApiKey
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayApiKey'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayCreateApiKeyBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/apiKeys:delete:
    post:
      summary: Delete API Key
      operationId: Gateway_DeleteApiKey
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayDeleteApiKeyBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/auditLogs:
    get:
      summary: List User Audit Logs
      operationId: Gateway_ListAuditLogs
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListAuditLogsResponse'
      parameters:
      - name: startTime
        description: 'Start time of the audit logs to retrieve.

          If unspecified, the default is 30 days before now.'
        in: query
        required: false
        type: string
        format: date-time
      - name: endTime
        description: 'End time of the audit logs to retrieve.

          If unspecified, the default is the current time.'
        in: query
        required: false
        type: string
        format: date-time
      - name: email
        description: 'Optional.

          Filter audit logs for user email associated with the account.'
        in: query
        required: false
        type: string
      - name: pageSize
        description: 'The maximum number of audit logs to return. The maximum page_size
          is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 10.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListAuditLogs call. Provide
          this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListAuditLogs must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: Unused but required to use existing ListRequest functionality.
        in: query
        required: false
        type: string
      - name: orderBy
        description: Unused but required to use existing ListRequest functionality.
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/awsIamRoleBindings:
    get:
      summary: List Aws Iam Role Bindings
      operationId: Gateway_ListAwsIamRoleBindings
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListAwsIamRoleBindingsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of bindings to return. The maximum page_size
          is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListAwsIamRoleBindings
          call.

          Provide this to retrieve the subsequent page. When paginating, all other

          parameters provided to ListAwsIamRoleBindings must match the call that

          provided the page token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only bindings satisfying the provided filter (if specified)
          will be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "name".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Aws Iam Role Binding
      operationId: Gateway_CreateAwsIamRoleBinding
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayAwsIamRoleBinding'
      parameters:
      - name: awsIamRoleBinding
        description: The properties of the AWS IAM role binding being created.
        in: body
        required: true
        schema:
          $ref: '#/definitions/gatewayAwsIamRoleBinding'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/awsIamRoleBindings:delete:
    post:
      summary: Delete Aws Iam Role Binding
      operationId: Gateway_DeleteAwsIamRoleBinding
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: awsIamRoleBinding
        description: 'The AWS IAM role binding being deleted.

          Must specify account_id, principal, and role.'
        in: body
        required: true
        schema:
          type: object
          properties:
            createTime:
              type: string
              format: date-time
              description: The creation time of the AWS IAM role binding.
              readOnly: true
            principal:
              type: string
              description: 'The principal that is allowed to assume the AWS IAM role.
                This must be

                the email address of the user.'
            role:
              type: string
              description: The AWS IAM role ARN that is allowed to be assumed by the
                principal.
          title: 'The AWS IAM role binding being deleted.

            Must specify account_id, principal, and role.'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/batchJobs:
    get:
      summary: List Batch Jobs
      operationId: Gateway_ListBatchJobs
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListBatchJobsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of batch jobs to return. The maximum page_size
          is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListBatchJobs call. Provide
          this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListBatchJobs must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only batch jobs satisfying the provided filter (if specified)
          will be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "create_time desc".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Batch Job
      operationId: Gateway_CreateBatchJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayBatchJob'
      parameters:
      - name: batchJob
        description: The properties of the batch job being created.
        in: body
        required: true
        schema:
          $ref: '#/definitions/gatewayBatchJob'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/batchJobs/{batch_job_id}:
    get:
      summary: Get Batch Job
      operationId: Gateway_GetBatchJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayBatchJob'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: batch_job_id
        in: path
        required: true
        type: string
        description: The Batch Job Id
      tags:
      - Gateway
    patch:
      summary: Update Batch Job
      operationId: Gateway_UpdateBatchJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayBatchJob'
      parameters:
      - name: batchJob
        description: 'The properties of the batch job being updated. `batch_job.name`
          must

          be populated with the updated resource''s name.'
        in: body
        required: true
        schema:
          type: object
          properties:
            displayName:
              type: string
              description: 'Human-readable display name of the batch job. e.g. "My
                Batch Job"

                Must be fewer than 64 characters long.'
            createTime:
              type: string
              format: date-time
              description: The creation time of the batch job.
              readOnly: true
            startTime:
              type: string
              format: date-time
              description: The time when the batch job started running.
              readOnly: true
            endTime:
              type: string
              format: date-time
              description: The time when the batch job completed, failed, or was cancelled.
              readOnly: true
            createdBy:
              type: string
              description: The email address of the user who created this batch job.
              readOnly: true
            nodePoolId:
              type: string
              title: The ID of the node pool that this batch job should use. e.g.
                my-node-pool
            environmentId:
              type: string
              description: 'The ID of the environment that this batch job should use.
                e.g. my-env

                If specified, image_ref must not be specified.'
            snapshotId:
              type: string
              description: 'The ID of the snapshot used by this batch job.

                If specified, environment_id must be specified and image_ref must
                not be

                specified.'
            numRanks:
              type: integer
              format: int32
              description: 'For GPU node pools: one GPU per rank w/ host packing,

                for CPU node pools: one host per rank.'
            envVars:
              type: object
              additionalProperties:
                type: string
              description: Environment variables to be passed during this job's execution.
            role:
              type: string
              description: 'The ARN of the AWS IAM role that the batch job should
                assume.

                If not specified, the connection will fall back to the node

                pool''s node_role.'
            pythonExecutor:
              $ref: '#/definitions/gatewayPythonExecutor'
            notebookExecutor:
              $ref: '#/definitions/gatewayNotebookExecutor'
            shellExecutor:
              $ref: '#/definitions/gatewayShellExecutor'
            imageRef:
              type: string
              description: 'The container image used by this job. If specified, environment_id
                and

                snapshot_id must not be specified.'
            annotations:
              type: object
              additionalProperties:
                type: string
              description: 'Arbitrary, user-specified metadata.

                Keys and values must adhere to Kubernetes constraints: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set

                Additionally, the "fireworks.ai/" prefix is reserved.'
            state:
              $ref: '#/definitions/gatewayBatchJobState'
              description: The current state of the batch job.
              readOnly: true
            status:
              type: string
              description: Detailed information about the current status of the batch
                job.
              readOnly: true
            shared:
              type: boolean
              description: 'Whether the batch job is shared with all users in the
                account.

                This allows all users to update, delete, clone, and create environments

                using the batch job.'
            updateTime:
              type: string
              format: date-time
              description: The update time for the batch job.
              readOnly: true
          title: 'The properties of the batch job being updated. `batch_job.name`
            must

            be populated with the updated resource''s name.'
          required:
          - nodePoolId
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: batch_job_id
        in: path
        required: true
        type: string
        description: The Batch Job Id
      tags:
      - Gateway
    delete:
      summary: Delete Batch Job
      operationId: Gateway_DeleteBatchJob
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: batch_job_id
        in: path
        required: true
        type: string
        description: The Batch Job Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/batchJobs/{batch_job_id}:cancel:
    post:
      summary: Cancel Batch Job
      description: Cancels an existing batch job if it is queued, pending, or running.
      operationId: Gateway_CancelBatchJob
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayCancelBatchJobBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: batch_job_id
        in: path
        required: true
        type: string
        description: The Batch Job Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/batchJobs/{batch_job_id}:getLogs:
    get:
      summary: Get Batch Job Logs
      operationId: Gateway_GetBatchJobLogs
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetBatchJobLogsResponse'
      parameters:
      - name: ranks
        description: Ranks, for which to fetch logs.
        in: query
        required: false
        type: array
        items:
          type: integer
          format: int32
        collectionFormat: multi
      - name: pageSize
        description: 'The maximum number of log entries to return. The maximum page_size
          is 10,000,

          values above 10,000 will be coerced to 10,000.

          If unspecified, the default is 100.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous GetBatchJobLogsRequest
          call. Provide this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to GetBatchJobLogsRequest must match the call that provided the
          page

          token.'
        in: query
        required: false
        type: string
      - name: startTime
        description: 'Entries before this timestamp won''t be returned.

          If not specified, up to page_size last records will be returned.'
        in: query
        required: false
        type: string
        format: date-time
      - name: filter
        description: 'Only entries matching this filter will be returned.

          Currently only basic substring match is performed.'
        in: query
        required: false
        type: string
      - name: startFromHead
        description: Pagination direction, time-wise reverse direction by default
          (false).
        in: query
        required: false
        type: boolean
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: batch_job_id
        in: path
        required: true
        type: string
        description: The Batch Job Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/batchJobs:batchDelete:
    post:
      summary: Batch Delete Batch Jobs
      operationId: Gateway_BatchDeleteBatchJobs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayBatchDeleteBatchJobsBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/clusters:
    get:
      summary: List Clusters
      operationId: Gateway_ListClusters
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListClustersResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of clusters to return. The maximum page_size
          is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListClusters call. Provide
          this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListClusters must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only clusters satisfying the provided filter (if specified)
          will be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "name".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Cluster
      operationId: Gateway_CreateCluster
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayCluster'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayCreateClusterBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/clusters/{cluster_id}:
    get:
      summary: Get Cluster
      operationId: Gateway_GetCluster
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayCluster'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: cluster_id
        in: path
        required: true
        type: string
        description: The Cluster Id
      tags:
      - Gateway
    patch:
      summary: Update Cluster
      operationId: Gateway_UpdateCluster
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayCluster'
      parameters:
      - name: cluster
        description: 'The properties of the cluster being updated. `cluster.name`
          must

          be populated with the updated resource''s name.'
        in: body
        required: true
        schema:
          type: object
          properties:
            displayName:
              type: string
              description: 'Human-readable display name of the cluster. e.g. "My Cluster"

                Must be fewer than 64 characters long.'
            createTime:
              type: string
              format: date-time
              description: The creation time of the cluster.
              readOnly: true
            eksCluster:
              $ref: '#/definitions/gatewayEksCluster'
            fakeCluster:
              $ref: '#/definitions/gatewayFakeCluster'
            state:
              $ref: '#/definitions/gatewayClusterState'
              description: The current state of the cluster.
              readOnly: true
            status:
              $ref: '#/definitions/gatewayStatus'
              description: Detailed information about the current status of the cluster.
              readOnly: true
            updateTime:
              type: string
              format: date-time
              description: The update time for the cluster.
              readOnly: true
          title: 'The properties of the cluster being updated. `cluster.name` must

            be populated with the updated resource''s name.'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: cluster_id
        in: path
        required: true
        type: string
        description: The Cluster Id
      tags:
      - Gateway
    delete:
      summary: Delete Cluster
      operationId: Gateway_DeleteCluster
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: cluster_id
        in: path
        required: true
        type: string
        description: The Cluster Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/clusters/{cluster_id}:getConnectionInfo:
    get:
      summary: Get Cluster Connection Info
      description: Retrieve connection settings for the cluster to be put in kubeconfig
      operationId: Gateway_GetClusterConnectionInfo
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayClusterConnectionInfo'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: cluster_id
        in: path
        required: true
        type: string
        description: The Cluster Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/datasets:
    get:
      summary: List Datasets
      operationId: Gateway_ListDatasets
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListDatasetsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of datasets to return. The maximum page_size
          is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListDatasets call. Provide
          this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListDatasets must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only model satisfying the provided filter (if specified) will
          be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "name".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Dataset
      operationId: Gateway_CreateDataset
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayDataset'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayCreateDatasetBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/datasets/{dataset_id}:
    get:
      summary: Get Dataset
      operationId: Gateway_GetDataset
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayDataset'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: dataset_id
        in: path
        required: true
        type: string
        description: The Dataset Id
      tags:
      - Gateway
    patch:
      summary: Update Dataset
      operationId: Gateway_UpdateDataset
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayDataset'
      parameters:
      - name: dataset
        description: 'The properties of the Dataset being updated. `dataset.name`
          must

          be populated with the updated resource''s name.'
        in: body
        required: true
        schema:
          type: object
          properties:
            displayName:
              type: string
            createTime:
              type: string
              format: date-time
              readOnly: true
            state:
              $ref: '#/definitions/gatewayDatasetState'
              readOnly: true
            status:
              $ref: '#/definitions/gatewayStatus'
              readOnly: true
            exampleCount:
              type: string
              format: int64
            userUploaded:
              $ref: '#/definitions/gatewayUserUploaded'
            evaluationResult:
              $ref: '#/definitions/gatewayEvaluationResult'
            transformed:
              $ref: '#/definitions/gatewayTransformed'
            externalUrl:
              type: string
              title: The external URI of the dataset. e.g. gs://foo/bar/baz.jsonl
            format:
              $ref: '#/definitions/DatasetFormat'
            createdBy:
              type: string
              description: The email address of the user who initiated this fine-tuning
                job.
              readOnly: true
            updateTime:
              type: string
              format: date-time
              description: The update time for the dataset.
              readOnly: true
          title: 'The properties of the Dataset being updated. `dataset.name` must

            be populated with the updated resource''s name.'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: dataset_id
        in: path
        required: true
        type: string
        description: The Dataset Id
      tags:
      - Gateway
    delete:
      summary: Delete Dataset
      operationId: Gateway_DeleteDataset
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: dataset_id
        in: path
        required: true
        type: string
        description: The Dataset Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/datasets/{dataset_id}:getDownloadEndpoint:
    get:
      summary: Get Dataset Download Endpoint
      operationId: Gateway_GetDatasetDownloadEndpoint
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetDatasetDownloadEndpointResponse'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: dataset_id
        in: path
        required: true
        type: string
        description: The Dataset Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/datasets/{dataset_id}:getUploadEndpoint:
    post:
      summary: Get Dataset Upload Endpoint
      operationId: Gateway_GetDatasetUploadEndpoint
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetDatasetUploadEndpointResponse'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayGetDatasetUploadEndpointBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: dataset_id
        in: path
        required: true
        type: string
        description: The Dataset Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/datasets/{dataset_id}:validateUpload:
    post:
      summary: Validate Dataset Upload
      operationId: Gateway_ValidateDatasetUpload
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayValidateDatasetUploadBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: dataset_id
        in: path
        required: true
        type: string
        description: The Dataset Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/deployedModels:
    get:
      summary: List LoRAs
      operationId: Gateway_ListDeployedModels
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListDeployedModelsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of deployed models to return. The maximum
          page_size is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListDeployedModels call.
          Provide this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListDeployedModels must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only depoyed models satisfying the provided filter (if specified)
          will be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "name".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Load LoRA
      operationId: Gateway_CreateDeployedModel
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayDeployedModel'
      parameters:
      - name: deployedModel
        in: body
        required: true
        schema:
          $ref: '#/definitions/gatewayDeployedModel'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/deployedModels/{deployed_model_id}:
    get:
      summary: Get LoRA
      operationId: Gateway_GetDeployedModel
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayDeployedModel'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: deployed_model_id
        in: path
        required: true
        type: string
        description: The Deployed Model Id
      tags:
      - Gateway
    patch:
      summary: Update LoRA
      operationId: Gateway_UpdateDeployedModel
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayDeployedModel'
      parameters:
      - name: deployedModel
        description: 'The properties of the deployed model being updated. `deployed_model.name`
          must

          be populated with the updated resource''s name.'
        in: body
        required: true
        schema:
          type: object
          properties:
            displayName:
              type: string
            description:
              type: string
              description: Description of the resource.
            createTime:
              type: string
              format: date-time
              description: The creation time of the resource.
              readOnly: true
            createdBy:
              type: string
              description: The email address of the user who created this deployed
                model.
              readOnly: true
            model:
              type: string
              title: 'The resource name of the model to be deployed.

                e.g. accounts/my-account/models/my-model'
            deployment:
              type: string
              description: The resource name of the base deployment the model is deployed
                to.
            default:
              type: boolean
              description: 'If true, this is the default target when querying this
                model without

                the `#<deployment>` suffix.

                The first deployment a model is deployed to will have this field set
                to true.'
            state:
              $ref: '#/definitions/gatewayDeployedModelState'
              description: The state of the deployed model.
              readOnly: true
            serverless:
              type: boolean
              title: True if the underlying deployment is managed by Fireworks
            status:
              $ref: '#/definitions/gatewayStatus'
              description: Contains model deploy/undeploy details.
              readOnly: true
            public:
              type: boolean
              description: If true, the deployed model will be publicly reachable.
            updateTime:
              type: string
              format: date-time
              description: The update time for the deployed model.
              readOnly: true
          title: 'The properties of the deployed model being updated. `deployed_model.name`
            must

            be populated with the updated resource''s name.'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: deployed_model_id
        in: path
        required: true
        type: string
        description: The Deployed Model Id
      tags:
      - Gateway
    delete:
      summary: Unload LoRA
      operationId: Gateway_DeleteDeployedModel
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: deployed_model_id
        in: path
        required: true
        type: string
        description: The Deployed Model Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/deployments:
    get:
      summary: List Deployments
      operationId: Gateway_ListDeployments
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListDeploymentsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of deployments to return. The maximum page_size
          is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListDeployments call.
          Provide this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListDeployments must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only deployment satisfying the provided filter (if specified)
          will be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "create_time".'
        in: query
        required: false
        type: string
      - name: showDeleted
        description: If set, DELETED deployments will be included.
        in: query
        required: false
        type: boolean
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Deployment
      operationId: Gateway_CreateDeployment
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayDeployment'
      parameters:
      - name: deployment
        description: The properties of the deployment being created.
        in: body
        required: true
        schema:
          $ref: '#/definitions/gatewayDeployment'
      - name: disableAutoDeploy
        description: 'By default, a deployment created with a currently undeployed
          base model

          will be deployed to this deployment. If true, this auto-deploy function

          is disabled.'
        in: query
        required: false
        type: boolean
      - name: disableSpeculativeDecoding
        description: 'By default, a deployment will use the speculative decoding settings
          from

          the base model. If true, this will disable speculative decoding.'
        in: query
        required: false
        type: boolean
      - name: deploymentId
        description: The ID of the deployment. If not specified, a random ID will
          be generated.
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/deployments/{deployment_id}:
    get:
      summary: Get Deployment
      operationId: Gateway_GetDeployment
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayDeployment'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: deployment_id
        in: path
        required: true
        type: string
        description: The Deployment Id
      tags:
      - Gateway
    patch:
      summary: Update Deployment
      operationId: Gateway_UpdateDeployment
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayDeployment'
      parameters:
      - name: deployment
        description: 'The properties of the deployment being updated. `deployment.name`
          must

          be populated with the updated resource''s name.'
        in: body
        required: true
        schema:
          type: object
          properties:
            displayName:
              type: string
              description: 'Human-readable display name of the deployment. e.g. "My
                Deployment"

                Must be fewer than 64 characters long.'
            description:
              type: string
              description: Description of the deployment.
            createTime:
              type: string
              format: date-time
              description: The creation time of the deployment.
              readOnly: true
            expireTime:
              type: string
              format: date-time
              description: The time at which this deployment will automatically be
                deleted.
            purgeTime:
              type: string
              format: date-time
              description: The time at which the resource will be hard deleted.
              readOnly: true
            deleteTime:
              type: string
              format: date-time
              description: The time at which the resource will be soft deleted.
              readOnly: true
            createdBy:
              type: string
              description: The email address of the user who created this deployment.
              readOnly: true
            state:
              $ref: '#/definitions/gatewayDeploymentState'
              description: The state of the deployment.
              readOnly: true
            status:
              $ref: '#/definitions/gatewayStatus'
              description: Detailed status information regarding the most recent operation.
              readOnly: true
            annotations:
              type: object
              additionalProperties:
                type: string
              description: 'Annotations to identify deployment properties.

                Key/value pairs may be used by external tools or other services.'
            minReplicaCount:
              type: integer
              format: int32
              description: 'The minimum number of replicas.

                If not specified, the default is 0.'
            maxReplicaCount:
              type: integer
              format: int32
              description: 'The maximum number of replicas.

                If not specified, the default is max(min_replica_count, 1).

                May be set to 0 to downscale the deployment to 0.'
            replicaCount:
              type: integer
              format: int32
              readOnly: true
            autoscalingPolicy:
              $ref: '#/definitions/gatewayAutoscalingPolicy'
            baseModel:
              type: string
              title: The base model name. e.g. accounts/fireworks/models/falcon-7b
            acceleratorCount:
              type: integer
              format: int32
              description: 'The number of accelerators used per replica.

                If not specified, the default is the estimated minimum required by
                the

                base model.'
            acceleratorType:
              $ref: '#/definitions/gatewayAcceleratorType'
              description: 'The type of accelerator to use.

                If not specified, the default is NVIDIA_A100_80GB.'
            precision:
              $ref: '#/definitions/DeploymentPrecision'
              description: The precision with which the model should be served.
            cluster:
              type: string
              description: If set, this deployment is deployed to a cloud-premise
                cluster.
              readOnly: true
            enableAddons:
              type: boolean
              description: If true, PEFT addons are enabled for this deployment.
            draftTokenCount:
              type: integer
              format: int32
              description: 'The number of candidate tokens to generate per step for
                speculative

                decoding.

                Default is the base model''s draft_token_count. Set

                CreateDeploymentRequest.disable_speculative_decoding to false to disable

                this behavior.'
            draftModel:
              type: string
              description: 'The draft model name for speculative decoding. e.g. accounts/fireworks/models/my-draft-model

                If empty, speculative decoding using a draft model is disabled.

                Default is the base model''s default_draft_model. Set

                CreateDeploymentRequest.disable_speculative_decoding to false to disable

                this behavior.'
            ngramSpeculationLength:
              type: integer
              format: int32
              description: The length of previous input sequence to be considered
                for N-gram speculation.
            numPeftDeviceCached:
              type: integer
              format: int32
              title: How many peft adapters to keep on gpu side for caching
              readOnly: true
            deploymentTemplate:
              type: string
              description: 'The name of the deployment template to use for this deployment.
                Only

                available to enterprise accounts.'
            autoTune:
              $ref: '#/definitions/gatewayAutoTune'
              description: The performance profile to use for this deployment.
            region:
              $ref: '#/definitions/gatewayRegion'
              description: The geographic region where the deployment is located.
              readOnly: true
            isNim:
              type: boolean
              description: Whether this deployment should be created with NIM.
            updateTime:
              type: string
              format: date-time
              description: The update time for the deployment.
              readOnly: true
          title: 'The properties of the deployment being updated. `deployment.name`
            must

            be populated with the updated resource''s name.'
          required:
          - baseModel
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: deployment_id
        in: path
        required: true
        type: string
        description: The Deployment Id
      tags:
      - Gateway
    delete:
      summary: Delete Deployment
      operationId: Gateway_DeleteDeployment
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: hard
        description: If true, this will perform a hard deletion.
        in: query
        required: false
        type: boolean
      - name: ignoreChecks
        description: 'If true, this will ignore checks and force the deletion of a
          deployment that is currently

          deployed and is in use.'
        in: query
        required: false
        type: boolean
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: deployment_id
        in: path
        required: true
        type: string
        description: The Deployment Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/deployments/{deployment_id}:metrics:
    get:
      summary: Get Deployment Metrics
      operationId: Gateway_GetDeploymentMetrics
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetDeploymentMetricsResponse'
      parameters:
      - name: timeRange
        description: The time range to fetch metrics for (e.g. "1m", "10m", "2h").
          Defaults to 10m.
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: deployment_id
        in: path
        required: true
        type: string
        description: The Deployment Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/deployments/{deployment_id}:scale:
    patch:
      summary: Scale Deployment to a specific number of replicas or to zero
      operationId: Gateway_ScaleDeployment
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayScaleDeploymentBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: deployment_id
        in: path
        required: true
        type: string
        description: The Deployment Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/environments:
    get:
      summary: List Environments
      operationId: Gateway_ListEnvironments
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListEnvironmentsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of environments to return. The maximum page_size
          is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListEnvironments call.
          Provide this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListEnvironments must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only environments satisfying the provided filter (if specified)
          will be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "name".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Environment
      operationId: Gateway_CreateEnvironment
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayEnvironment'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayCreateEnvironmentBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/environments/{environment_id}:
    get:
      summary: Get Environment
      operationId: Gateway_GetEnvironment
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayEnvironment'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: environment_id
        in: path
        required: true
        type: string
        description: The Environment Id
      tags:
      - Gateway
    patch:
      summary: Update Environment
      operationId: Gateway_UpdateEnvironment
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayEnvironment'
      parameters:
      - name: environment
        description: 'The properties of the Environment being updated. `environment.name`
          must

          be populated with the updated resource''s name.'
        in: body
        required: true
        schema:
          type: object
          properties:
            displayName:
              type: string
              title: Human-readable display name of the environment. e.g. "My Environment"
            createTime:
              type: string
              format: date-time
              description: The creation time of the environment.
              readOnly: true
            createdBy:
              type: string
              description: The email address of the user who created this environment.
              readOnly: true
            state:
              $ref: '#/definitions/gatewayEnvironmentState'
              description: The current state of the environment.
              readOnly: true
            status:
              $ref: '#/definitions/gatewayStatus'
              description: The current error status of the environment.
              readOnly: true
            connection:
              $ref: '#/definitions/gatewayEnvironmentConnection'
              description: Information about the current environment connection.
              readOnly: true
            baseImageRef:
              type: string
              description: The URI of the base container image used for this environment.
            imageRef:
              type: string
              description: 'The URI of the container image used for this environment.
                This is a

                image is an immutable snapshot of the base_image_ref when the environment

                was created.'
              readOnly: true
            snapshotImageRef:
              type: string
              description: The URI of the latest container image snapshot for this
                environment.
              readOnly: true
            shared:
              type: boolean
              description: 'Whether the environment is shared with all users in the
                account.

                This allows all users to connect, disconnect, update, delete, clone,
                and

                create batch jobs using the environment.'
            annotations:
              type: object
              additionalProperties:
                type: string
              description: 'Arbitrary, user-specified metadata.

                Keys and values must adhere to Kubernetes constraints: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set

                Additionally, the "fireworks.ai/" prefix is reserved.'
            updateTime:
              type: string
              format: date-time
              description: The update time for the environment.
              readOnly: true
          title: 'The properties of the Environment being updated. `environment.name`
            must

            be populated with the updated resource''s name.'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: environment_id
        in: path
        required: true
        type: string
        description: The Environment Id
      tags:
      - Gateway
    delete:
      summary: Delete Environment
      operationId: Gateway_DeleteEnvironment
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: environment_id
        in: path
        required: true
        type: string
        description: The Environment Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/environments/{environment_id}:connect:
    post:
      summary: Connect Environment
      description: 'Connects the environment to a node pool.

        Returns an error if there is an existing pending connection.'
      operationId: Gateway_ConnectEnvironment
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayConnectEnvironmentBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: environment_id
        in: path
        required: true
        type: string
        description: The Environment Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/environments/{environment_id}:disconnect:
    post:
      summary: Disconnect Environment
      description: 'Disconnects the environment from the node pool. Returns an error

        if the environment is not connected to a node pool.'
      operationId: Gateway_DisconnectEnvironment
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayDisconnectEnvironmentBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: environment_id
        in: path
        required: true
        type: string
        description: The Environment Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/environments:batchDelete:
    post:
      summary: Batch Delete Environments
      operationId: Gateway_BatchDeleteEnvironments
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayBatchDeleteEnvironmentsBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/evaluationJobs:
    get:
      summary: List Evaluation Jobs
      operationId: Gateway_ListEvaluationJobs
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListEvaluationJobsResponse'
      parameters:
      - name: pageSize
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        in: query
        required: false
        type: string
      - name: filter
        in: query
        required: false
        type: string
      - name: orderBy
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Evaluation Job
      operationId: Gateway_CreateEvaluationJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayEvaluationJob'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayCreateEvaluationJobBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/evaluationJobs/{evaluation_job_id}:
    get:
      summary: Get Evaluation Job
      operationId: Gateway_GetEvaluationJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayEvaluationJob'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: evaluation_job_id
        in: path
        required: true
        type: string
        description: The Evaluation Job Id
      tags:
      - Gateway
    delete:
      summary: Delete Evaluation Job
      operationId: Gateway_DeleteEvaluationJob
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: evaluation_job_id
        in: path
        required: true
        type: string
        description: The Evaluation Job Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/evaluations:
    get:
      summary: List Evaluations
      operationId: Gateway_ListEvaluations
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListEvaluationsResponse'
      parameters:
      - name: pageSize
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        in: query
        required: false
        type: string
      - name: filter
        in: query
        required: false
        type: string
      - name: orderBy
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Evaluation
      operationId: Gateway_CreateEvaluation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayEvaluation'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayCreateEvaluationBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/evaluations/{evaluation_id}:
    get:
      summary: Get Evaluation
      operationId: Gateway_GetEvaluation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayEvaluation'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: evaluation_id
        in: path
        required: true
        type: string
        description: The Evaluation Id
      tags:
      - Gateway
    delete:
      summary: "TODO: Add Update Evaluation\nUpdate Evaluation\nrpc UpdateEvaluation(UpdateEvaluationRequest)\
        \ returns (Evaluation) {\n  option (google.api.http) = {\n    patch: \"/v1/{evaluation.name=accounts/*/evaluations/*}\"\
        \n    body: \"evaluation\"\n  };\n}\nDelete Evaluation"
      operationId: Gateway_DeleteEvaluation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: evaluation_id
        in: path
        required: true
        type: string
        description: The Evaluation Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/evaluations/{evaluation_id}:preview:
    post:
      summary: Preview an evaluation with sample data
      operationId: Gateway_PreviewEvaluation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayPreviewEvaluationResponse'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayPreviewEvaluationBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: evaluation_id
        in: path
        required: true
        type: string
        description: The Evaluation Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/evaluations:validateAssertions:
    post:
      summary: Validate evaluation assertions
      operationId: Gateway_ValidateAssertions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayValidateAssertionsResponse'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayValidateAssertionsBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/evaluators:
    get:
      operationId: Gateway_ListEvaluators
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListEvaluatorsResponse'
      parameters:
      - name: pageSize
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        in: query
        required: false
        type: string
      - name: filter
        in: query
        required: false
        type: string
      - name: orderBy
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      operationId: Gateway_CreateEvaluator
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayEvaluator'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayCreateEvaluatorBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/evaluators/{evaluator_id}:
    get:
      operationId: Gateway_GetEvaluator
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayEvaluator'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: evaluator_id
        in: path
        required: true
        type: string
        description: The Evaluator Id
      tags:
      - Gateway
    delete:
      operationId: Gateway_DeleteEvaluator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: evaluator_id
        in: path
        required: true
        type: string
        description: The Evaluator Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/evaluators:previewEvaluator:
    post:
      operationId: Gateway_PreviewEvaluator
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayPreviewEvaluatorResponse'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayPreviewEvaluatorBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/fineTuningJobs:
    get:
      summary: List Fine-tuning Jobs
      operationId: Gateway_ListFineTuningJobs
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListFineTuningJobsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of fine-tuning jobs to return. The maximum
          page_size is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListFineTuningJobs call.
          Provide this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListFineTuningJobs must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only model satisfying the provided filter (if specified) will
          be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "name".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Fine-tuning Job
      operationId: Gateway_CreateFineTuningJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayFineTuningJob'
      parameters:
      - name: fineTuningJob
        in: body
        required: true
        schema:
          $ref: '#/definitions/gatewayFineTuningJob'
      - name: debug
        in: query
        required: false
        type: boolean
      - name: fineTuningJobId
        description: ID of the fine-tuning job.
        in: query
        required: false
        type: string
      - name: updateTime
        description: The update time for the fine-tuning job.
        in: query
        required: false
        type: string
        format: date-time
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/fineTuningJobs/{fine_tuning_job_id}:
    get:
      summary: Get Fine-tuning Job
      operationId: Gateway_GetFineTuningJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayFineTuningJob'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: fine_tuning_job_id
        in: path
        required: true
        type: string
        description: The Fine-tuning Job Id
      tags:
      - Gateway
    patch:
      summary: Update Fine-tuning Job
      operationId: Gateway_UpdateFineTuningJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayFineTuningJob'
      parameters:
      - name: fineTuningJob
        description: 'The properties of the fine-tuning job being updated. `fine_tuning_job.name`
          must

          be populated with the updated resource''s name.'
        in: body
        required: true
        schema:
          type: object
          properties:
            displayName:
              type: string
            createTime:
              type: string
              format: date-time
              readOnly: true
            state:
              $ref: '#/definitions/gatewayFineTuningJobState'
              readOnly: true
            dataset:
              type: string
              description: 'The name of the dataset used for training. A dataset ID
                may also be supplied, in

                which case the ID will be normalized into the fully qualified dataset
                name using

                the parent of the job.'
            datasets:
              type: array
              items:
                type: object
                $ref: '#/definitions/gatewayFineTuningJobDataset'
            status:
              $ref: '#/definitions/gatewayStatus'
              readOnly: true
            createdBy:
              type: string
              description: The email address of the user who created this fine tuning
                job.
              readOnly: true
            containerVersion:
              type: string
            modelId:
              type: string
              description: the model id to generate for training jobs.
            legacyJob:
              $ref: '#/definitions/FineTuningJobLegacyJob'
            textCompletion:
              $ref: '#/definitions/FineTuningJobTextCompletion'
            textClassification:
              $ref: '#/definitions/FineTuningJobTextClassification'
            conversation:
              $ref: '#/definitions/FineTuningJobConversation'
            draftModelData:
              $ref: '#/definitions/FineTuningJobDraftModelData'
            draftModel:
              $ref: '#/definitions/FineTuningJobDraftModel'
            genie:
              $ref: '#/definitions/FineTuningJobGenie'
            baseModel:
              type: string
              description: The name of the base model.
            warmStartFrom:
              type: string
              description: peft addon model in fireworks format to warm start a fine-tuning
                job from.
              readOnly: true
            epochs:
              type: number
              format: double
              description: The number of epochs to train for.
            learningRate:
              type: number
              format: double
              description: The learning rate used for training.
            loraRank:
              type: integer
              format: int32
              description: The lora rank used for training.
            loraTargetModules:
              type: array
              items:
                type: string
              description: The lora target modules used for training.
            batchSize:
              type: integer
              format: int32
              description: The batch size of dataset used for training.
            microBatchSize:
              type: integer
              format: int32
              description: The batch size of dataset used for training per accelerator.
            maskToken:
              type: string
              description: The token to mask out prompts, used by draft model data
                generation.
            padToken:
              type: string
              description: The token for padding, used by draft model data generation.
            wandbUrl:
              type: string
              description: The Weights & Biases url to see training progress.
              readOnly: true
            wandbEntity:
              type: string
              description: 'The Weights & Biases entity where training progress should
                be reported.

                If unspecified, then progress will not be reported to W&B.'
            wandbApiKey:
              type: string
              description: 'The Weights & Biases API key associated with the entity.

                Required if and only if wandb_entity is specified.'
            wandbProject:
              type: string
              description: 'The Weights & Biases project where training progress should
                be reported.

                Required if and only if wandb_entity is specified.'
            evaluation:
              type: boolean
            evaluationSplit:
              type: number
              format: double
              description: the split flag to take from training dataset for evaluation.
            evaluationDataset:
              type: string
              description: the dataset to use for evaluation.
            dependentJobs:
              type: array
              items:
                type: string
          title: 'The properties of the fine-tuning job being updated. `fine_tuning_job.name`
            must

            be populated with the updated resource''s name.'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: fine_tuning_job_id
        in: path
        required: true
        type: string
        description: The Fine-tuning Job Id
      tags:
      - Gateway
    delete:
      summary: Delete Fine-tuning Job
      operationId: Gateway_DeleteFineTuningJob
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: fine_tuning_job_id
        in: path
        required: true
        type: string
        description: The Fine-tuning Job Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/models:
    get:
      summary: List Models
      operationId: Gateway_ListModels
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListModelsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of models to return. The maximum page_size
          is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListModels call. Provide
          this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListModels must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only model satisfying the provided filter (if specified) will
          be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "name".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Model
      operationId: Gateway_CreateModel
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayModel'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayCreateModelBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/models/{model_id}:
    get:
      summary: Get Model
      operationId: Gateway_GetModel
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayModel'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: model_id
        in: path
        required: true
        type: string
        description: The Model Id
      tags:
      - Gateway
    patch:
      summary: Update Model
      operationId: Gateway_UpdateModel
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayModel'
      parameters:
      - name: model
        description: 'The properties of the model being updated. `model.name` must

          be populated with the updated resource''s name.'
        in: body
        required: true
        schema:
          type: object
          properties:
            displayName:
              type: string
              description: 'Human-readable display name of the model. e.g. "My Model"

                Must be fewer than 64 characters long.'
            description:
              type: string
              description: The description of the model. Must be fewer than 1000 characters
                long.
            createTime:
              type: string
              format: date-time
              description: The creation time of the model.
              readOnly: true
            createdBy:
              type: string
              description: The email address of the user who created this model.
              readOnly: true
            state:
              $ref: '#/definitions/gatewayModelState'
              description: The state of the model.
              readOnly: true
            status:
              $ref: '#/definitions/gatewayStatus'
              description: Contains detailed message when the last model operation
                fails.
              readOnly: true
            kind:
              $ref: '#/definitions/ModelKind'
              description: 'The kind of model.

                If not specified, the default is HF_PEFT_ADDON.'
            githubUrl:
              type: string
              description: The URL to GitHub repository of the model.
            huggingFaceUrl:
              type: string
              description: The URL to the Hugging Face model.
            baseModelDetails:
              $ref: '#/definitions/gatewayBaseModelDetails'
              description: 'Base model details.

                Required if kind is HF_BASE_MODEL. Must not be set otherwise.'
            peftDetails:
              $ref: '#/definitions/gatewayPEFTDetails'
              description: 'PEFT addon details.

                Required if kind is HF_PEFT_ADDON or HF_TEFT_ADDON.'
            teftDetails:
              $ref: '#/definitions/gatewayTEFTDetails'
              description: 'TEFT addon details.

                Required if kind is HF_TEFT_ADDON. Must not be set otherwise.'
            public:
              type: boolean
              description: If true, the model will be publicly readable.
            conversationConfig:
              $ref: '#/definitions/gatewayConversationConfig'
              description: If set, the Chat Completions API will be enabled for this
                model.
            contextLength:
              type: integer
              format: int32
              description: The maximum context length supported by the model.
            supportsImageInput:
              type: boolean
              description: If set, images can be provided as input to the model.
            supportsTools:
              type: boolean
              description: 'If set, tools (i.e. functions) can be provided as input
                to the model,

                and the model may respond with one or more tool calls.'
            importedFrom:
              type: string
              description: 'The name of the the model from which this was imported.
                This field is empty

                if the model was not imported.'
              readOnly: true
            fineTuningJob:
              type: string
              description: 'If the model was created from a fine-tuning job, this
                is the fine-tuning

                job name.'
              readOnly: true
            defaultDraftModel:
              type: string
              description: 'The default draft model to use when creating a deployment.
                If empty,

                speculative decoding is disabled by default.'
            defaultDraftTokenCount:
              type: integer
              format: int32
              description: 'The default draft token count to use when creating a deployment.

                Must be specified if default_draft_model is specified.'
            precisions:
              type: array
              items:
                $ref: '#/definitions/DeploymentPrecision'
              title: Precisions that were successfully calibration and available to
                be deployed
              readOnly: true
            deployedModelRefs:
              type: array
              items:
                type: object
                $ref: '#/definitions/gatewayDeployedModelRef'
              description: Populated from GetModel API call only.
              readOnly: true
            cluster:
              type: string
              description: 'The resource name of the BYOC cluster to which this model
                belongs.

                e.g. accounts/my-account/clusters/my-cluster. Empty if it belongs
                to

                a Fireworks cluster.'
              readOnly: true
            deprecationDate:
              $ref: '#/definitions/typeDate'
              description: If specified, this is the date when the serverless deployment
                of the model will be taken down.
            calibrated:
              type: boolean
              description: If true, the model is calibrated and can be deployed to
                non-FP16 precisions.
              readOnly: true
            tunable:
              type: boolean
              description: 'If true, the model can be fine-tuned. The value will be
                true if the tunable field is true, and

                the model is validated against the model_type field.'
              readOnly: true
            supportsLora:
              type: boolean
              description: Whether this model supports LoRA.
            useHfApplyChatTemplate:
              type: boolean
              description: If true, the model will use the Hugging Face apply_chat_template
                API to apply the chat template.
            updateTime:
              type: string
              format: date-time
              description: The update time for the model.
              readOnly: true
            defaultSamplingParams:
              type: object
              additionalProperties:
                type: number
                format: float
              description: A json object that contains the default sampling parameters
                for the model.
              readOnly: true
          title: 'The properties of the model being updated. `model.name` must

            be populated with the updated resource''s name.'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: model_id
        in: path
        required: true
        type: string
        description: The Model Id
      tags:
      - Gateway
    delete:
      summary: Delete Model
      operationId: Gateway_DeleteModel
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: model_id
        in: path
        required: true
        type: string
        description: The Model Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/models/{model_id}:getDownloadEndpoint:
    get:
      summary: Get Model Download Endpoint
      operationId: Gateway_GetModelDownloadEndpoint
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetModelDownloadEndpointResponse'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: model_id
        in: path
        required: true
        type: string
        description: The Model Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/models/{model_id}:getUploadEndpoint:
    post:
      summary: Get Model Upload Endpoint
      operationId: Gateway_GetModelUploadEndpoint
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetModelUploadEndpointResponse'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayGetModelUploadEndpointBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: model_id
        in: path
        required: true
        type: string
        description: The Model Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/models/{model_id}:import:
    post:
      summary: Transfer model from S3 to GCP storage
      operationId: Gateway_ImportModel
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/longrunningOperation'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayImportModelBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: model_id
        in: path
        required: true
        type: string
        description: The Model Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/models/{model_id}:validateUpload:
    get:
      summary: Validate Model Upload
      operationId: Gateway_ValidateModelUpload
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: model_id
        in: path
        required: true
        type: string
        description: The Model Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/nodePoolBindings:
    get:
      summary: List Node Pool Bindings
      operationId: Gateway_ListNodePoolBindings
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListNodePoolBindingsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of bindings to return. The maximum page_size
          is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListNodePoolBindings
          call.

          Provide this to retrieve the subsequent page. When paginating, all other

          parameters provided to ListNodePoolBindings must match the call that

          provided the page token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only bindings satisfying the provided filter (if specified)
          will be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "name".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Node Pool Binding
      operationId: Gateway_CreateNodePoolBinding
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayNodePoolBinding'
      parameters:
      - name: nodePoolBinding
        description: The properties of the node pool binding being created.
        in: body
        required: true
        schema:
          $ref: '#/definitions/gatewayNodePoolBinding'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/nodePoolBindings:delete:
    post:
      summary: Delete Node Pool Binding
      operationId: Gateway_DeleteNodePoolBinding
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: nodePoolBinding
        description: 'The node pool binding being deleted.

          Must specify account_id, cluster_id, node_pool_id, and principal.'
        in: body
        required: true
        schema:
          type: object
          properties:
            clusterId:
              type: string
              description: The cluster ID that this binding is associated with.
              readOnly: true
            nodePoolId:
              type: string
              description: The node pool ID that this binding is associated with.
              readOnly: true
            createTime:
              type: string
              format: date-time
              description: The creation time of the node pool binding.
              readOnly: true
            principal:
              type: string
              description: 'The principal that is allowed use the node pool. This
                must be

                the email address of the user.'
          title: 'The node pool binding being deleted.

            Must specify account_id, cluster_id, node_pool_id, and principal.'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/nodePools:
    get:
      summary: List Node Pools
      operationId: Gateway_ListNodePools
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListNodePoolsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of node pools to return. The maximum page_size
          is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListNodePools call. Provide
          this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListNodePools must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only node pools satisfying the provided filter (if specified)
          will be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "name".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Node Pool
      operationId: Gateway_CreateNodePool
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayNodePool'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayCreateNodePoolBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/nodePools/{node_pool_id}:
    get:
      summary: Get Node Pool
      operationId: Gateway_GetNodePool
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayNodePool'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: node_pool_id
        in: path
        required: true
        type: string
        description: The Node Pool Id
      tags:
      - Gateway
    patch:
      summary: Update Node Pool
      operationId: Gateway_UpdateNodePool
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayNodePool'
      parameters:
      - name: nodePool
        description: 'The properties of the NodePool being updated. `node_pool.name`
          must

          be populated with the updated resource''s name.'
        in: body
        required: true
        schema:
          type: object
          properties:
            displayName:
              type: string
              description: 'Human-readable display name of the node pool. e.g. "My
                Node Pool"

                Must be fewer than 64 characters long.'
            createTime:
              type: string
              format: date-time
              description: The creation time of the node pool.
              readOnly: true
            minNodeCount:
              type: integer
              format: int32
              description: 'Minimum number of nodes in this node pool. Must be a non-negative
                integer

                less than or equal to max_node_count.

                If not specified, the default is 0.'
            maxNodeCount:
              type: integer
              format: int32
              description: 'Maximum number of nodes in this node pool. Must be a positive
                integer

                greater than or equal to min_node_count.

                If not specified, the default is 1.'
            overprovisionNodeCount:
              type: integer
              format: int32
              description: 'The number of nodes to overprovision by the autoscaler.
                Must be a

                non-negative integer and less than or equal to min_node_count and

                max_node_count-min_node_count.

                If not specified, the default is 0.'
            eksNodePool:
              $ref: '#/definitions/gatewayEksNodePool'
            fakeNodePool:
              $ref: '#/definitions/gatewayFakeNodePool'
            annotations:
              type: object
              additionalProperties:
                type: string
              description: 'Arbitrary, user-specified metadata.

                Keys and values must adhere to Kubernetes constraints: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set

                Additionally, the "fireworks.ai/" prefix is reserved.'
            state:
              $ref: '#/definitions/gatewayNodePoolState'
              description: The current state of the node pool.
              readOnly: true
            status:
              $ref: '#/definitions/gatewayStatus'
              description: 'Contains detailed message when the last node pool operation
                fails, e.g.

                when node pool is in FAILED state or when last node pool update fails.'
              readOnly: true
            nodePoolStats:
              $ref: '#/definitions/gatewayNodePoolStats'
              description: Live statistics of the node pool.
              readOnly: true
            updateTime:
              type: string
              format: date-time
              description: The update time for the node pool.
              readOnly: true
          title: 'The properties of the NodePool being updated. `node_pool.name` must

            be populated with the updated resource''s name.'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: node_pool_id
        in: path
        required: true
        type: string
        description: The Node Pool Id
      tags:
      - Gateway
    delete:
      summary: Delete Node Pool
      operationId: Gateway_DeleteNodePool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: node_pool_id
        in: path
        required: true
        type: string
        description: The Node Pool Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/nodePools/{node_pool_id}:getStats:
    get:
      summary: Get Node Pool Stats
      operationId: Gateway_GetNodePoolStats
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayNodePoolStats'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: node_pool_id
        in: path
        required: true
        type: string
        description: The Node Pool Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/nodePools:batchDelete:
    post:
      summary: Batch Delete Node Pools
      operationId: Gateway_BatchDeleteNodePools
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayBatchDeleteNodePoolsBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/reinforcementFineTuningJobs:
    get:
      summary: List Reinforcement Fine-tuning Jobs
      operationId: Gateway_ListReinforcementFineTuningJobs
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListReinforcementFineTuningJobsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of fine-tuning jobs to return. The maximum
          page_size is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListReinforcementLearningFineTuningJobs
          call. Provide this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListReinforcementLearningFineTuningJobs must match the call
          that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: Filter criteria for the returned jobs. See https://google.aip.dev/160
          for the filter syntax specification.
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "name".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Reinforcement Fine-tuning Job
      operationId: Gateway_CreateReinforcementFineTuningJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayReinforcementFineTuningJob'
      parameters:
      - name: reinforcementFineTuningJob
        in: body
        required: true
        schema:
          $ref: '#/definitions/gatewayReinforcementFineTuningJob'
      - name: reinforcementFineTuningJobId
        description: ID of the reinforcement fine-tuning job, a random UUID will be
          generated if not specified.
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/reinforcementFineTuningJobs/{reinforcement_fine_tuning_job_id}:
    get:
      summary: Get Reinforcement Fine-tuning Job
      operationId: Gateway_GetReinforcementFineTuningJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayReinforcementFineTuningJob'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: reinforcement_fine_tuning_job_id
        in: path
        required: true
        type: string
        description: The Reinforcement Fine-tuning Job Id
      tags:
      - Gateway
    delete:
      summary: Delete Reinforcement Fine-tuning Job
      operationId: Gateway_DeleteReinforcementFineTuningJob
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: reinforcement_fine_tuning_job_id
        in: path
        required: true
        type: string
        description: The Reinforcement Fine-tuning Job Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/secrets:
    get:
      operationId: Gateway_ListSecrets
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListSecretsResponse'
      parameters:
      - name: pageSize
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        in: query
        required: false
        type: string
      - name: filter
        description: Unused but required to use existing ListRequest functionality.
        in: query
        required: false
        type: string
      - name: orderBy
        description: Unused but required to use existing ListRequest functionality.
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      operationId: Gateway_CreateSecret
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewaySecret'
      parameters:
      - name: secret
        in: body
        required: true
        schema:
          $ref: '#/definitions/gatewaySecret'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/secrets/{secret_id}:
    get:
      operationId: Gateway_GetSecret
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewaySecret'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: secret_id
        in: path
        required: true
        type: string
        description: The Secret Id
      tags:
      - Gateway
    patch:
      operationId: Gateway_UpdateSecret
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewaySecret'
      parameters:
      - name: secret
        in: body
        required: true
        schema:
          type: object
          properties:
            keyName:
              type: string
              title: name of the key. In this case, it can be WOLFRAM_ALPHA_API_KEY
            value:
              type: string
          required:
          - keyName
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: secret_id
        in: path
        required: true
        type: string
        description: The Secret Id
      tags:
      - Gateway
    delete:
      operationId: Gateway_DeleteSecret
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: secret_id
        in: path
        required: true
        type: string
        description: The Secret Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/snapshots:
    get:
      summary: List Snapshots
      operationId: Gateway_ListSnapshots
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListSnapshotsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of snapshots to return. The maximum page_size
          is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListEnvironments call.
          Provide this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListEnvironments must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only snapshots satisfying the provided filter (if specified)
          will be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "create_time".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Snapshot
      operationId: Gateway_CreateSnapshot
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewaySnapshot'
      parameters:
      - name: snapshot
        description: The properties of the snapshot being created.
        in: body
        required: true
        schema:
          $ref: '#/definitions/gatewaySnapshot'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/snapshots/{snapshot_id}:
    get:
      summary: Get Snapshot
      operationId: Gateway_GetSnapshot
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewaySnapshot'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: snapshot_id
        in: path
        required: true
        type: string
        description: The Snapshot Id
      tags:
      - Gateway
    delete:
      summary: Delete Snapshot
      operationId: Gateway_DeleteSnapshot
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: snapshot_id
        in: path
        required: true
        type: string
        description: The Snapshot Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/supervisedFineTuningJobs:
    get:
      summary: List Supervised Fine-tuning Jobs
      operationId: Gateway_ListSupervisedFineTuningJobs
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListSupervisedFineTuningJobsResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of fine-tuning jobs to return. The maximum
          page_size is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListSupervisedFineTuningJobs
          call. Provide this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListSupervisedFineTuningJobs must match the call that provided
          the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: Filter criteria for the returned jobs. See https://google.aip.dev/160
          for the filter syntax specification.
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "name".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create Supervised Fine-tuning Job
      operationId: Gateway_CreateSupervisedFineTuningJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewaySupervisedFineTuningJob'
      parameters:
      - name: supervisedFineTuningJob
        in: body
        required: true
        schema:
          $ref: '#/definitions/gatewaySupervisedFineTuningJob'
      - name: supervisedFineTuningJobId
        description: ID of the supervised fine-tuning job, a random UUID will be generated
          if not specified.
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/supervisedFineTuningJobs/{supervised_fine_tuning_job_id}:
    get:
      summary: Get Supervised Fine-tuning Job
      operationId: Gateway_GetSupervisedFineTuningJob
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewaySupervisedFineTuningJob'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: supervised_fine_tuning_job_id
        in: path
        required: true
        type: string
        description: The Supervised Fine-tuning Job Id
      tags:
      - Gateway
    delete:
      summary: Delete Supervised Fine-tuning Job
      operationId: Gateway_DeleteSupervisedFineTuningJob
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties: {}
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: supervised_fine_tuning_job_id
        in: path
        required: true
        type: string
        description: The Supervised Fine-tuning Job Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/users:
    get:
      summary: List Users
      operationId: Gateway_ListUsers
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListUsersResponse'
      parameters:
      - name: pageSize
        description: 'The maximum number of users to return. The maximum page_size
          is 200,

          values above 200 will be coerced to 200.

          If unspecified, the default is 50.'
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: 'A page token, received from a previous ListUsers call. Provide
          this

          to retrieve the subsequent page. When paginating, all other parameters

          provided to ListUsers must match the call that provided the page

          token.'
        in: query
        required: false
        type: string
      - name: filter
        description: 'Only users satisfying the provided filter (if specified) will
          be

          returned. See https://google.aip.dev/160 for the filter grammar.'
        in: query
        required: false
        type: string
      - name: orderBy
        description: 'A comma-separated list of fields to order by. e.g. "foo,bar"

          The default sort order is ascending. To specify a descending order for a

          field, append a " desc" suffix. e.g. "foo desc,bar"

          Subfields are specified with a "." character. e.g. "foo.bar"

          If not specified, the default order is by "name".'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
    post:
      summary: Create User
      operationId: Gateway_CreateUser
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayUser'
      parameters:
      - name: user
        description: The properties of the user being created.
        in: body
        required: true
        schema:
          $ref: '#/definitions/gatewayUser'
      - name: userId
        description: 'The user ID to use in the user name. e.g. my-user

          If not specified, a default ID is generated from user.email.'
        in: query
        required: false
        type: string
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
  /v1/accounts/{account_id}/users/{user_id}:
    get:
      summary: Get User
      operationId: Gateway_GetUser
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayUser'
      parameters:
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: user_id
        in: path
        required: true
        type: string
        description: The User Id
      tags:
      - Gateway
    patch:
      summary: Update User
      operationId: Gateway_UpdateUser
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayUser'
      parameters:
      - name: user
        description: 'The properties of the User being updated. `user.name` must

          be populated with the updated resource''s name.'
        in: body
        required: true
        schema:
          type: object
          properties:
            displayName:
              type: string
              description: 'Human-readable display name of the user. e.g. "Alice"

                Must be fewer than 64 characters long.'
            createTime:
              type: string
              format: date-time
              description: The creation time of the user.
              readOnly: true
            role:
              type: string
              description: The user's role, e.g. admin or user.
            email:
              type: string
              description: The user's email address.
            state:
              $ref: '#/definitions/gatewayUserState'
              description: The state of the user.
              readOnly: true
            status:
              $ref: '#/definitions/gatewayStatus'
              description: Contains information about the user status.
              readOnly: true
            updateTime:
              type: string
              format: date-time
              description: The update time for the user.
              readOnly: true
          title: 'The properties of the User being updated. `user.name` must

            be populated with the updated resource''s name.'
          required:
          - role
          - email
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      - name: user_id
        in: path
        required: true
        type: string
        description: The User Id
      tags:
      - Gateway
  /v1/accounts/{account_id}:testeval:
    post:
      summary: Similar to preview evaluation, but no need to create the evaluation
        entry first.
      operationId: Gateway_TestEvaluation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayPreviewEvaluationResponse'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GatewayTestEvaluationBody'
      - name: account_id
        in: path
        required: true
        type: string
        description: The Account Id
      tags:
      - Gateway
definitions:
  AccountAccountType:
    type: string
    enum:
    - ACCOUNT_TYPE_UNSPECIFIED
    - DEVELOPER
    - ENTERPRISE
    - BUSINESS
    default: ACCOUNT_TYPE_UNSPECIFIED
    title: 'Next ID: 5'
  AccountSuspendState:
    type: string
    enum:
    - UNSUSPENDED
    - FAILED_PAYMENTS
    - CREDIT_DEPLETED
    - MONTHLY_SPEND_LIMIT_EXCEEDED
    default: UNSUSPENDED
  AssertionAssertionType:
    type: string
    enum:
    - ASSERTION_TYPE_UNSPECIFIED
    - ASSERTION_TYPE_LLM
    - ASSERTION_TYPE_CODE
    default: ASSERTION_TYPE_UNSPECIFIED
  BaseModelDetailsCheckpointFormat:
    type: string
    enum:
    - CHECKPOINT_FORMAT_UNSPECIFIED
    - NATIVE
    - HUGGINGFACE
    default: CHECKPOINT_FORMAT_UNSPECIFIED
  CodeAssertionExecutionOptions:
    type: object
    properties:
      timeoutMs:
        type: integer
        format: int32
        title: Timeout in milliseconds
      memoryLimitMb:
        type: integer
        format: int32
        title: Memory limit in MB
      envVars:
        type: object
        additionalProperties:
          type: string
        title: Environment variables
    title: Options for execution
  DatasetFormat:
    type: string
    enum:
    - FORMAT_UNSPECIFIED
    - CHAT
    - COMPLETION
    - RL
    default: FORMAT_UNSPECIFIED
  DeploymentPrecision:
    type: string
    enum:
    - PRECISION_UNSPECIFIED
    - FP16
    - FP8
    - FP8_MM
    - FP8_AR
    - FP8_MM_KV_ATTN
    - FP8_KV
    - FP8_MM_V2
    - FP8_V2
    - FP8_MM_KV_ATTN_V2
    - NF4
    default: PRECISION_UNSPECIFIED
    title: '- PRECISION_UNSPECIFIED: if left unspecified we will treat this as a legacy
      model created before

      self serve'
  FineTuningJobConversation:
    type: object
    properties:
      jinjaTemplate:
        type: string
        description: If not specified, default to the base model conversation_config.template,
          if exists.
  FineTuningJobDraftModel:
    type: object
  FineTuningJobDraftModelData:
    type: object
    properties:
      deploymentName:
        type: string
        description: the model deployment where we generate responses from.
      jinjaTemplate:
        type: string
        description: If not specified, default to the base model conversation_config.template,
          if exists.
      cleanupDeployment:
        type: boolean
        description: the boolean flag to cleanup the deployment after the data generation
          job is done.
    required:
    - deploymentName
  FineTuningJobGenie:
    type: object
    properties:
      pipelineName:
        type: string
    required:
    - pipelineName
  FineTuningJobLegacyJob:
    type: object
  FineTuningJobTextClassification:
    type: object
    properties:
      text:
        type: string
        description: The JSON dataset field that is to be classified.
      label:
        type: string
        description: The JSON dataset field that contains the classification label.
    required:
    - text
    - label
  FineTuningJobTextCompletion:
    type: object
    properties:
      inputTemplate:
        type: string
        description: The template used to format the dataset input.
      outputTemplate:
        type: string
        description: The template used to format the dataset output.
    required:
    - inputTemplate
    - outputTemplate
  GatewayBatchDeleteBatchJobsBody:
    type: object
    properties:
      names:
        type: array
        items:
          type: string
        description: The resource names of the batch jobs to delete.
    required:
    - names
  GatewayBatchDeleteEnvironmentsBody:
    type: object
    properties:
      names:
        type: array
        items:
          type: string
        description: The resource names of the environments to delete.
    required:
    - names
  GatewayBatchDeleteNodePoolsBody:
    type: object
    properties:
      names:
        type: array
        items:
          type: string
        description: The resource names of the node pools to delete.
    required:
    - names
  GatewayCancelBatchJobBody:
    type: object
  GatewayConnectEnvironmentBody:
    type: object
    properties:
      connection:
        $ref: '#/definitions/gatewayEnvironmentConnection'
      vscodeVersion:
        type: string
        title: VSCode version on the client side that initiated the connect request
    required:
    - connection
  GatewayCreateApiKeyBody:
    type: object
    properties:
      apiKey:
        $ref: '#/definitions/gatewayApiKey'
        description: The API key to be created.
    required:
    - apiKey
  GatewayCreateClusterBody:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/gatewayCluster'
        description: The properties of the cluster being created.
      clusterId:
        type: string
        title: The cluster ID to use in the cluster name. e.g. my-cluster
    required:
    - cluster
    - clusterId
  GatewayCreateDatasetBody:
    type: object
    properties:
      dataset:
        $ref: '#/definitions/gatewayDataset'
      datasetId:
        type: string
      sourceDatasetId:
        type: string
        title: If set, indicates we are creating a new dataset by filtering this existing
          dataset ID
      filter:
        type: string
        title: Filter condition (SQL-like WHERE clause) to apply to the source dataset
    required:
    - dataset
    - datasetId
  GatewayCreateEnvironmentBody:
    type: object
    properties:
      environment:
        $ref: '#/definitions/gatewayEnvironment'
        description: The properties of the Environment being created.
      environmentId:
        type: string
        title: The environment ID to use in the environment name. e.g. my-env
    required:
    - environment
    - environmentId
  GatewayCreateEvaluationBody:
    type: object
    properties:
      evaluation:
        $ref: '#/definitions/gatewayEvaluation'
      evaluationId:
        type: string
    required:
    - evaluation
  GatewayCreateEvaluationJobBody:
    type: object
    properties:
      evaluationJob:
        $ref: '#/definitions/gatewayEvaluationJob'
      evaluationJobId:
        type: string
    required:
    - evaluationJob
  GatewayCreateEvaluatorBody:
    type: object
    properties:
      evaluator:
        $ref: '#/definitions/gatewayEvaluator'
      evaluatorId:
        type: string
    required:
    - evaluator
  GatewayCreateModelBody:
    type: object
    properties:
      model:
        $ref: '#/definitions/gatewayModel'
        description: The properties of the Model being created.
      modelId:
        type: string
        description: ID of the model.
      cluster:
        type: string
        description: 'The resource name of the BYOC cluster to which this model belongs.

          e.g. accounts/my-account/clusters/my-cluster. Empty if it belongs to

          a Fireworks cluster.'
    required:
    - modelId
  GatewayCreateNodePoolBody:
    type: object
    properties:
      nodePool:
        $ref: '#/definitions/gatewayNodePool'
        description: The properties of the NodePool being created.
      nodePoolId:
        type: string
        title: The node pool ID to use in the node pool name. e.g. my-pool
    required:
    - nodePool
    - nodePoolId
  GatewayDeleteApiKeyBody:
    type: object
    properties:
      keyId:
        type: string
        description: The key ID for the API key.
    required:
    - keyId
  GatewayDisconnectEnvironmentBody:
    type: object
    properties:
      force:
        type: boolean
        description: 'Disconnect the environment even if snapshotting fails (e.g.
          due to pod

          failure). This flag should only be used if you are certain that the pod

          is gone.'
      resetSnapshots:
        type: boolean
        description: 'Forces snapshots to be rebuilt.

          This can be used when there are too many snapshot layers

          or when an unforeseen snapshotting logic error has occurred.'
  GatewayGetDatasetUploadEndpointBody:
    type: object
    properties:
      filenameToSize:
        type: object
        additionalProperties:
          type: string
          format: int64
        description: A mapping from the file name to its size in bytes.
    required:
    - filenameToSize
  GatewayGetModelUploadEndpointBody:
    type: object
    properties:
      filenameToSize:
        type: object
        additionalProperties:
          type: string
          format: int64
        description: A mapping from the file name to its size in bytes.
      enableResumableUpload:
        type: boolean
        description: If true, enable resumable upload instead of PUT.
    required:
    - filenameToSize
  GatewayImportModelBody:
    type: object
    properties:
      awsS3Source:
        $ref: '#/definitions/gatewayAwsS3ModelSource'
        description: 'AWS S3 source details.

          Must be set when importing from AWS S3.'
  GatewayPreviewEvaluationBody:
    type: object
    properties:
      sampleData:
        type: string
        title: Sample data in JSON format (array of samples)
      maxSamples:
        type: integer
        format: int32
        title: Maximum number of samples to evaluate (optional, default will be a
          small number like 5)
    title: Request to preview an evaluation with sample data
    required:
    - sampleData
  GatewayPreviewEvaluatorBody:
    type: object
    properties:
      evaluator:
        $ref: '#/definitions/gatewayEvaluator'
        title: The evaluator object to run preview on
      sampleData:
        type: array
        items:
          type: string
        title: Sample data in JSON format (array of json formated samples)
      maxSamples:
        type: integer
        format: int32
        title: Maximum number of samples to evaluate, default is 10
    required:
    - evaluator
    - sampleData
  GatewayScaleDeploymentBody:
    type: object
    properties:
      replicaCount:
        type: integer
        format: int32
        description: The desired number of replicas.
  GatewayTestEvaluationBody:
    type: object
    properties:
      evaluation:
        $ref: '#/definitions/gatewayEvaluation'
        title: The draft evaluation to test
      sampleData:
        type: string
        title: Sample data in JSON format (array of samples)
    required:
    - evaluation
    - sampleData
  GatewayValidateAssertionsBody:
    type: object
    properties:
      assertions:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayAssertion'
    description: Validate the code assertions. Recommended before creating the evaluation.
    required:
    - assertions
  GatewayValidateDatasetUploadBody:
    type: object
  ListCostsResponseCostDataItem:
    type: object
    properties:
      subtotal:
        $ref: '#/definitions/typeMoney'
        description: The amount before any credits and discounts are applied.
      total:
        $ref: '#/definitions/typeMoney'
        description: The total amount after any credits and discounts have been applied.
      startTime:
        type: string
        format: date-time
        description: Costs returned are inclusive of `start_time`.
      endTime:
        type: string
        format: date-time
        description: Costs returned are exclusive of `end_time`.
  ListPaymentMethodsResponseCard:
    type: object
    properties:
      brand:
        type: string
        description: Credit card brand.
      last4:
        type: string
        description: Last 4 digits of the credit card.
      expMonth:
        type: integer
        format: int32
        description: Expiration month.
      expYear:
        type: integer
        format: int32
        description: Expiration year.
  ListPaymentMethodsResponseStripePaymentMethod:
    type: object
    properties:
      id:
        type: string
        description: Payment method ID.
      card:
        $ref: '#/definitions/ListPaymentMethodsResponseCard'
        description: Card used by the payment method.
      usBankAccount:
        $ref: '#/definitions/ListPaymentMethodsResponseUsBankAccount'
        title: ACH Direct Debit
  ListPaymentMethodsResponseUsBankAccount:
    type: object
    properties:
      bankName:
        type: string
      last4:
        type: string
        description: Last four digits of the bank account number.
  ModelKind:
    type: string
    enum:
    - KIND_UNSPECIFIED
    - HF_BASE_MODEL
    - HF_PEFT_ADDON
    - HF_TEFT_ADDON
    - FLUMINA_BASE_MODEL
    - FLUMINA_ADDON
    - DRAFT_ADDON
    - FIRE_AGENT
    - LIVE_MERGE
    default: KIND_UNSPECIFIED
    description: " - HF_BASE_MODEL: An LLM base model.\n - HF_PEFT_ADDON: A parameter-efficent\
      \ fine-tuned addon.\n - HF_TEFT_ADDON: A token-eficient fine-tuned addon.\n\
      \ - FLUMINA_BASE_MODEL: A Flumina base model.\n - FLUMINA_ADDON: A Flumina addon.\n\
      \ - DRAFT_ADDON: A draft model used for speculative decoding in a deployment.\n\
      \ - FIRE_AGENT: A FireAgent model.\n - LIVE_MERGE: A live-merge model."
  PythonExecutorTargetType:
    type: string
    enum:
    - TARGET_TYPE_UNSPECIFIED
    - MODULE
    - FILENAME
    default: TARGET_TYPE_UNSPECIFIED
    description: " - MODULE: Runs a python module, i.e. passed as -m argument.\n -\
      \ FILENAME: Runs a python file."
  ValidateAssertionsResponseValidateAssertionError:
    type: object
    properties:
      errorMessages:
        type: array
        items:
          type: string
  gatewayAcceleratorType:
    type: string
    enum:
    - ACCELERATOR_TYPE_UNSPECIFIED
    - NVIDIA_A100_80GB
    - NVIDIA_H100_80GB
    - AMD_MI300X_192GB
    - NVIDIA_A10G_24GB
    - NVIDIA_A100_40GB
    - NVIDIA_L4_24GB
    - NVIDIA_H200_141GB
    - NVIDIA_B200_180GB
    default: ACCELERATOR_TYPE_UNSPECIFIED
  gatewayAccount:
    type: object
    properties:
      name:
        type: string
        title: The resource name of the account. e.g. accounts/my-account
        readOnly: true
      displayName:
        type: string
        description: 'Human-readable display name of the account. e.g. "My Account"

          Must be fewer than 64 characters long.'
      createTime:
        type: string
        format: date-time
        description: The creation time of the account.
        readOnly: true
      accountType:
        $ref: '#/definitions/AccountAccountType'
        description: 'The account type.

          The default is DEVELOPER.'
      email:
        type: string
        description: 'For developer accounts, this is the email of the developer user
          and is

          immutable. For ENTERPRISE and BUSINESS accounts, this is mutable and

          it is the email that will recieve the invoice for the account if

          automated billing is used.'
      state:
        $ref: '#/definitions/gatewayAccountState'
        description: The state of the account.
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        description: Contains information about the account status.
        readOnly: true
      suspendState:
        $ref: '#/definitions/AccountSuspendState'
        readOnly: true
      updateTime:
        type: string
        format: date-time
        description: The update time for the account.
        readOnly: true
    title: 'Next ID: 21'
    required:
    - email
  gatewayAccountState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - CREATING
    - READY
    - UPDATING
    - DELETING
    default: STATE_UNSPECIFIED
  gatewayApiKey:
    type: object
    properties:
      keyId:
        type: string
        description: Unique identifier (Key ID) for the API key, used primarily for
          deletion.
        readOnly: true
      displayName:
        type: string
        description: Display name for the API key, defaults to "default" if not specified.
      key:
        type: string
        description: The actual API key value, only available upon creation and not
          stored thereafter.
        readOnly: true
      createTime:
        type: string
        format: date-time
        description: Timestamp indicating when the API key was created.
        readOnly: true
      secure:
        type: boolean
        description: 'Indicates whether the plaintext value of the API key is unknown
          to Fireworks.

          If true, Fireworks does not know this API key''s plaintext value. If false,
          Fireworks does

          know the plaintext value.'
        readOnly: true
      email:
        type: string
        description: Email of the user who owns this API key.
        readOnly: true
  gatewayAppendToMessages:
    type: object
    properties:
      unrollMultipleResponses:
        type: boolean
        description: When n > 1, if true, creates separate output records for each
          response; otherwise, includes all responses in one record.
    description: 'AppendToMessages specifies the appending behavior in formatting
      the output of

      the batch inference job. If the last message is a user message, the output

      will be appended to the last message. If the last message is an assistant

      message, the model output will overwrite the content of that message.


      Let the following be the content of dataset.jsonl:

      {"messages": [{"role": "user", "content": "hi"}, {"role": "assistant", "content":
      "hello"}]}

      {"messages": [{"role": "user", "content": "hi"}}

      {"messages": [{"role": "system", "content": "you are a helpful assistant"},
      {"role": "user", "content": "hi"}}


      Assuming the target model will always respond with `RESPONSE`, the output dataset
      will contain the following:

      {"messages": [{"role": "user", "content": "hi"}, {"role": "assistant", "content":
      "RESPONSE"}]}

      {"messages": [{"role": "user", "content": "hi"}, {"role": "assistant", "content":
      "RESPONSE"}]}

      {"messages": [{"role": "system", "content": "you are a helpful assistant"},
      {"role": "user", "content": "hi"}, {"role": "assistant", "content": "RESPONSE"}]}'
  gatewayAssertion:
    type: object
    properties:
      assertionType:
        $ref: '#/definitions/AssertionAssertionType'
      llmAssertion:
        $ref: '#/definitions/gatewayLLMAssertion'
      codeAssertion:
        $ref: '#/definitions/gatewayCodeAssertion'
      metricName:
        type: string
    title: 'We are doing auto generated GORM with JSON serializer and oneof doesn''t
      work

      so I am doing enums + just flat fields'
    required:
    - assertionType
  gatewayAuditLogEntry:
    type: object
    properties:
      id:
        type: string
        description: Audit log entry id.
      method:
        type: string
        description: The gRPC method name.
      principal:
        type: string
        description: The email of the principal user who performed this action.
      payload:
        type: object
        description: The payload as JSON.
      status:
        $ref: '#/definitions/gatewayStatus'
        description: The response status.
      timestamp:
        type: string
        format: date-time
        description: The timestamp when the request was received.
      message:
        type: string
        title: Optional message describing the audit log entry
      resource:
        type: string
        title: The resource being operated on (e.g. accounts/123)
  gatewayAutoTune:
    type: object
    properties:
      longPrompt:
        type: boolean
        description: If true, this deployment is optimized for long prompt lengths.
  gatewayAutoscalingPolicy:
    type: object
    properties:
      scaleUpWindow:
        type: string
        description: 'The duration the autoscaler will wait before scaling up a deployment
          after observing

          increased load. Default is 30s.'
      scaleDownWindow:
        type: string
        description: 'The duration the autoscaler will wait before scaling down a
          deployment after observing

          decreased load. Default is 10m.'
      scaleToZeroWindow:
        type: string
        description: 'The duration after which there are no requests that the deployment
          will be scaled down

          to zero replicas, if min_replica_count==0. Default is 1h.'
      loadTargets:
        type: object
        additionalProperties:
          type: number
          format: float
        title: 'Map of load metric names to their target utilization factors.

          Currently only the "default" key is supported, which specifies the default
          target for all metrics.

          If not specified, the default target is 0.8'
  gatewayAwsIamRoleBinding:
    type: object
    properties:
      accountId:
        type: string
        description: The account ID that this binding is associated with.
        readOnly: true
      createTime:
        type: string
        format: date-time
        description: The creation time of the AWS IAM role binding.
        readOnly: true
      principal:
        type: string
        description: 'The principal that is allowed to assume the AWS IAM role. This
          must be

          the email address of the user.'
      role:
        type: string
        description: The AWS IAM role ARN that is allowed to be assumed by the principal.
    required:
    - principal
    - role
  gatewayAwsS3ModelSource:
    type: object
    properties:
      s3Bucket:
        type: string
        description: The S3 bucket name.
      s3Path:
        type: string
        description: The S3 path prefix.
      roleArn:
        type: string
        title: AWS role ARN for authentication
      accessKeyId:
        type: string
        title: AWS access key ID for authentication
      accessSecret:
        type: string
        title: AWS access secret for authentication
    required:
    - s3Bucket
  gatewayBalance:
    type: object
    properties:
      money:
        $ref: '#/definitions/typeMoney'
        description: Current remaining balance of the developer for a particular currency.
  gatewayBaseModelDetails:
    type: object
    properties:
      worldSize:
        type: integer
        format: int32
        description: 'The default number of GPUs the model is served with.

          If not specified, the default is 1.'
      checkpointFormat:
        $ref: '#/definitions/BaseModelDetailsCheckpointFormat'
      parameterCount:
        type: string
        format: int64
        description: 'The number of model parameters. For serverless models, this
          determines the

          price per token.'
      moe:
        type: boolean
        description: 'If true, this is a Mixture of Experts (MoE) model. For serverless
          models,

          this affects the price per token.'
      tunable:
        type: boolean
        description: If true, this model is available for fine-tuning.
      modelType:
        type: string
        description: The type of the model.
    title: 'Next ID: 7'
  gatewayBaseTrainingConfig:
    type: object
    properties:
      outputModel:
        type: string
        description: The model ID to be assigned to the resulting fine-tuned model.
          If not specified, the job ID will be used.
      baseModel:
        type: string
        description: 'The name of the base model to be fine-tuned

          Only one of ''base_model'' or ''warm_start_from'' should be specified.'
      warmStartFrom:
        type: string
        description: 'The PEFT addon model in Fireworks format to be fine-tuned from

          Only one of ''base_model'' or ''warm_start_from'' should be specified.'
      jinjaTemplate:
        type: string
        title: The Jinja template for conversation formatting. If not specified, defaults
          to the base model's conversation template configuration
      learningRate:
        type: number
        format: float
        description: The learning rate used for training.
      maxContextLength:
        type: integer
        format: int32
        description: The maximum context length to use with the model.
      loraRank:
        type: integer
        format: int32
        description: The rank of the LoRA layers.
      region:
        $ref: '#/definitions/gatewayRegion'
        description: The region where the fine-tuning job is located.
      epochs:
        type: integer
        format: int32
        description: The number of epochs to train for.
      batchSize:
        type: integer
        format: int32
        description: The maximum packed number of tokens per batch for training in
          sequence packing.
    title: 'BaseTrainingConfig contains common configuration fields shared across

      different training job types.

      Next ID: 14'
  gatewayBatchInferenceJob:
    type: object
    properties:
      name:
        type: string
        readOnly: true
      displayName:
        type: string
      createTime:
        type: string
        format: date-time
        readOnly: true
      expireTime:
        type: string
        format: date-time
        readOnly: true
      createdBy:
        type: string
        readOnly: true
      state:
        $ref: '#/definitions/gatewayJobState'
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        readOnly: true
      model:
        type: string
      inputDatasetId:
        type: string
      outputDatasetId:
        type: string
      appendToMessages:
        $ref: '#/definitions/gatewayAppendToMessages'
      inferenceParameters:
        $ref: '#/definitions/gatewayInferenceParameters'
        description: Parameters controlling the inference process.
      updateTime:
        type: string
        format: date-time
        description: The update time for the batch inference job.
        readOnly: true
      endingAssistantMessages:
        type: string
        description: 'Specifies how to handle trailing assistant messages when generating
          a response.

          Valid values are "continue_from" or "drop".

          If "continue_from", the model will continue from any trailing assistant
          messages.

          If "drop", the model will ignore any trailing assistant messages.

          If unspecified (null or empty string), the dataset rows should not end with
          any assistant messages.'
      region:
        $ref: '#/definitions/gatewayRegion'
      maxReplicaCount:
        type: integer
        format: int32
        title: 'Maximum number of replicas to use for the deployment.

          Default is 1'
      acceleratorType:
        $ref: '#/definitions/gatewayAcceleratorType'
        description: 'The type of accelerator to use.

          If not specified, a default will be chosen based on the model.'
      acceleratorCount:
        type: integer
        format: int32
        description: 'The number of accelerators to use per replica.

          If not specified, a default will be chosen based on the model.'
      precision:
        $ref: '#/definitions/DeploymentPrecision'
        description: 'The precision with which the model should be served.

          If PRECISION_UNSPECIFIED, a default will be chosen based on the model.'
    title: 'Next ID: 15'
    required:
    - model
    - inputDatasetId
    - outputDatasetId
  gatewayBatchJob:
    type: object
    properties:
      name:
        type: string
        title: 'The resource name of the batch job.

          e.g. accounts/my-account/clusters/my-cluster/batchJobs/123456789'
        readOnly: true
      displayName:
        type: string
        description: 'Human-readable display name of the batch job. e.g. "My Batch
          Job"

          Must be fewer than 64 characters long.'
      createTime:
        type: string
        format: date-time
        description: The creation time of the batch job.
        readOnly: true
      startTime:
        type: string
        format: date-time
        description: The time when the batch job started running.
        readOnly: true
      endTime:
        type: string
        format: date-time
        description: The time when the batch job completed, failed, or was cancelled.
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who created this batch job.
        readOnly: true
      nodePoolId:
        type: string
        title: The ID of the node pool that this batch job should use. e.g. my-node-pool
      environmentId:
        type: string
        description: 'The ID of the environment that this batch job should use. e.g.
          my-env

          If specified, image_ref must not be specified.'
      snapshotId:
        type: string
        description: 'The ID of the snapshot used by this batch job.

          If specified, environment_id must be specified and image_ref must not be

          specified.'
      numRanks:
        type: integer
        format: int32
        description: 'For GPU node pools: one GPU per rank w/ host packing,

          for CPU node pools: one host per rank.'
      envVars:
        type: object
        additionalProperties:
          type: string
        description: Environment variables to be passed during this job's execution.
      role:
        type: string
        description: 'The ARN of the AWS IAM role that the batch job should assume.

          If not specified, the connection will fall back to the node

          pool''s node_role.'
      pythonExecutor:
        $ref: '#/definitions/gatewayPythonExecutor'
      notebookExecutor:
        $ref: '#/definitions/gatewayNotebookExecutor'
      shellExecutor:
        $ref: '#/definitions/gatewayShellExecutor'
      imageRef:
        type: string
        description: 'The container image used by this job. If specified, environment_id
          and

          snapshot_id must not be specified.'
      annotations:
        type: object
        additionalProperties:
          type: string
        description: 'Arbitrary, user-specified metadata.

          Keys and values must adhere to Kubernetes constraints: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set

          Additionally, the "fireworks.ai/" prefix is reserved.'
      state:
        $ref: '#/definitions/gatewayBatchJobState'
        description: The current state of the batch job.
        readOnly: true
      status:
        type: string
        description: Detailed information about the current status of the batch job.
        readOnly: true
      shared:
        type: boolean
        description: 'Whether the batch job is shared with all users in the account.

          This allows all users to update, delete, clone, and create environments

          using the batch job.'
      updateTime:
        type: string
        format: date-time
        description: The update time for the batch job.
        readOnly: true
    title: 'Next ID: 22'
    required:
    - nodePoolId
  gatewayBatchJobState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - CREATING
    - QUEUED
    - PENDING
    - RUNNING
    - COMPLETED
    - FAILED
    - CANCELLING
    - CANCELLED
    - DELETING
    default: STATE_UNSPECIFIED
    description: "- CREATING: The batch job is being created.\n - QUEUED: The batch\
      \ job is in the queue and waiting to be scheduled.\nCurrently unused.\n - PENDING:\
      \ The batch job scheduled and is waiting for resource allocation.\n - RUNNING:\
      \ The batch job is running.\n - COMPLETED: The batch job has finished successfully.\n\
      \ - FAILED: The batch job has failed.\n - CANCELLING: The batch job is being\
      \ cancelled.\n - CANCELLED: The batch job was cancelled.\n - DELETING: The batch\
      \ job is being deleted."
    title: 'Next ID: 10'
  gatewayCluster:
    type: object
    properties:
      name:
        type: string
        title: The resource name of the cluster. e.g. accounts/my-account/clusters/my-cluster
        readOnly: true
      displayName:
        type: string
        description: 'Human-readable display name of the cluster. e.g. "My Cluster"

          Must be fewer than 64 characters long.'
      createTime:
        type: string
        format: date-time
        description: The creation time of the cluster.
        readOnly: true
      eksCluster:
        $ref: '#/definitions/gatewayEksCluster'
      fakeCluster:
        $ref: '#/definitions/gatewayFakeCluster'
      state:
        $ref: '#/definitions/gatewayClusterState'
        description: The current state of the cluster.
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        description: Detailed information about the current status of the cluster.
        readOnly: true
      updateTime:
        type: string
        format: date-time
        description: The update time for the cluster.
        readOnly: true
    title: 'Next ID: 15'
  gatewayClusterConnectionInfo:
    type: object
    properties:
      endpoint:
        type: string
        description: The cluster's Kubernetes API server endpoint.
      caData:
        type: string
        description: Base64-encoded cluster's CA certificate.
  gatewayClusterState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - CREATING
    - READY
    - DELETING
    - FAILED
    default: STATE_UNSPECIFIED
    description: " - CREATING: The cluster is still being created.\n - READY: The\
      \ cluster is ready to be used.\n - DELETING: The cluster is being deleted.\n\
      \ - FAILED: Cluster is not operational.\nConsult 'status' for detailed messaging.\n\
      Cluster needs to be deleted and re-created."
  gatewayCode:
    type: string
    enum:
    - OK
    - CANCELLED
    - UNKNOWN
    - INVALID_ARGUMENT
    - DEADLINE_EXCEEDED
    - NOT_FOUND
    - ALREADY_EXISTS
    - PERMISSION_DENIED
    - UNAUTHENTICATED
    - RESOURCE_EXHAUSTED
    - FAILED_PRECONDITION
    - ABORTED
    - OUT_OF_RANGE
    - UNIMPLEMENTED
    - INTERNAL
    - UNAVAILABLE
    - DATA_LOSS
    default: OK
    description: "- OK: Not an error; returned on success.\n\nHTTP Mapping: 200 OK\n\
      \ - CANCELLED: The operation was cancelled, typically by the caller.\n\nHTTP\
      \ Mapping: 499 Client Closed Request\n - UNKNOWN: Unknown error.  For example,\
      \ this error may be returned when\na `Status` value received from another address\
      \ space belongs to\nan error space that is not known in this address space.\
      \  Also\nerrors raised by APIs that do not return enough error information\n\
      may be converted to this error.\n\nHTTP Mapping: 500 Internal Server Error\n\
      \ - INVALID_ARGUMENT: The client specified an invalid argument.  Note that this\
      \ differs\nfrom `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments\n\
      that are problematic regardless of the state of the system\n(e.g., a malformed\
      \ file name).\n\nHTTP Mapping: 400 Bad Request\n - DEADLINE_EXCEEDED: The deadline\
      \ expired before the operation could complete. For operations\nthat change the\
      \ state of the system, this error may be returned\neven if the operation has\
      \ completed successfully.  For example, a\nsuccessful response from a server\
      \ could have been delayed long\nenough for the deadline to expire.\n\nHTTP Mapping:\
      \ 504 Gateway Timeout\n - NOT_FOUND: Some requested entity (e.g., file or directory)\
      \ was not found.\n\nNote to server developers: if a request is denied for an\
      \ entire class\nof users, such as gradual feature rollout or undocumented allowlist,\n\
      `NOT_FOUND` may be used. If a request is denied for some users within\na class\
      \ of users, such as user-based access control, `PERMISSION_DENIED`\nmust be\
      \ used.\n\nHTTP Mapping: 404 Not Found\n - ALREADY_EXISTS: The entity that a\
      \ client attempted to create (e.g., file or directory)\nalready exists.\n\n\
      HTTP Mapping: 409 Conflict\n - PERMISSION_DENIED: The caller does not have permission\
      \ to execute the specified\noperation. `PERMISSION_DENIED` must not be used\
      \ for rejections\ncaused by exhausting some resource (use `RESOURCE_EXHAUSTED`\n\
      instead for those errors). `PERMISSION_DENIED` must not be\nused if the caller\
      \ can not be identified (use `UNAUTHENTICATED`\ninstead for those errors). This\
      \ error code does not imply the\nrequest is valid or the requested entity exists\
      \ or satisfies\nother pre-conditions.\n\nHTTP Mapping: 403 Forbidden\n - UNAUTHENTICATED:\
      \ The request does not have valid authentication credentials for the\noperation.\n\
      \nHTTP Mapping: 401 Unauthorized\n - RESOURCE_EXHAUSTED: Some resource has been\
      \ exhausted, perhaps a per-user quota, or\nperhaps the entire file system is\
      \ out of space.\n\nHTTP Mapping: 429 Too Many Requests\n - FAILED_PRECONDITION:\
      \ The operation was rejected because the system is not in a state\nrequired\
      \ for the operation's execution.  For example, the directory\nto be deleted\
      \ is non-empty, an rmdir operation is applied to\na non-directory, etc.\n\n\
      Service implementors can use the following guidelines to decide\nbetween `FAILED_PRECONDITION`,\
      \ `ABORTED`, and `UNAVAILABLE`:\n (a) Use `UNAVAILABLE` if the client can retry\
      \ just the failing call.\n (b) Use `ABORTED` if the client should retry at a\
      \ higher level. For\n     example, when a client-specified test-and-set fails,\
      \ indicating the\n     client should restart a read-modify-write sequence.\n\
      \ (c) Use `FAILED_PRECONDITION` if the client should not retry until\n     the\
      \ system state has been explicitly fixed. For example, if an \"rmdir\"\n   \
      \  fails because the directory is non-empty, `FAILED_PRECONDITION`\n     should\
      \ be returned since the client should not retry unless\n     the files are deleted\
      \ from the directory.\n\nHTTP Mapping: 400 Bad Request\n - ABORTED: The operation\
      \ was aborted, typically due to a concurrency issue such as\na sequencer check\
      \ failure or transaction abort.\n\nSee the guidelines above for deciding between\
      \ `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 409\
      \ Conflict\n - OUT_OF_RANGE: The operation was attempted past the valid range.\
      \  E.g., seeking or\nreading past end-of-file.\n\nUnlike `INVALID_ARGUMENT`,\
      \ this error indicates a problem that may\nbe fixed if the system state changes.\
      \ For example, a 32-bit file\nsystem will generate `INVALID_ARGUMENT` if asked\
      \ to read at an\noffset that is not in the range [0,2^32-1], but it will generate\n\
      `OUT_OF_RANGE` if asked to read from an offset past the current\nfile size.\n\
      \nThere is a fair bit of overlap between `FAILED_PRECONDITION` and\n`OUT_OF_RANGE`.\
      \  We recommend using `OUT_OF_RANGE` (the more specific\nerror) when it applies\
      \ so that callers who are iterating through\na space can easily look for an\
      \ `OUT_OF_RANGE` error to detect when\nthey are done.\n\nHTTP Mapping: 400 Bad\
      \ Request\n - UNIMPLEMENTED: The operation is not implemented or is not supported/enabled\
      \ in this\nservice.\n\nHTTP Mapping: 501 Not Implemented\n - INTERNAL: Internal\
      \ errors.  This means that some invariants expected by the\nunderlying system\
      \ have been broken.  This error code is reserved\nfor serious errors.\n\nHTTP\
      \ Mapping: 500 Internal Server Error\n - UNAVAILABLE: The service is currently\
      \ unavailable.  This is most likely a\ntransient condition, which can be corrected\
      \ by retrying with\na backoff. Note that it is not always safe to retry\nnon-idempotent\
      \ operations.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n\
      `ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 503 Service Unavailable\n - DATA_LOSS:\
      \ Unrecoverable data loss or corruption.\n\nHTTP Mapping: 500 Internal Server\
      \ Error"
    title: Mimics [https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto]
  gatewayCodeAssertion:
    type: object
    properties:
      language:
        type: string
        title: Language of the code (python/javascript)
      code:
        type: string
        title: The code to execute
      expectedOutput:
        type: string
        title: Optional expected output
      options:
        $ref: '#/definitions/CodeAssertionExecutionOptions'
    required:
    - language
    - code
  gatewayCodeSnippets:
    type: object
    properties:
      language:
        type: string
      fileContents:
        type: object
        additionalProperties:
          type: string
        title: File name to code snippet, default is main.py
  gatewayConversationConfig:
    type: object
    properties:
      style:
        type: string
        description: The chat template to use.
      system:
        type: string
        description: The system prompt (if the chat style supports it).
      template:
        type: string
        description: The Jinja template (if style is "jinja").
    required:
    - style
  gatewayCriterion:
    type: object
    properties:
      type:
        $ref: '#/definitions/gatewayCriterionType'
      name:
        type: string
      description:
        type: string
      codeSnippets:
        $ref: '#/definitions/gatewayCodeSnippets'
        title: Criteria for code snippet
  gatewayCriterionType:
    type: string
    enum:
    - TYPE_UNSPECIFIED
    - CODE_SNIPPETS
    default: TYPE_UNSPECIFIED
    title: '- CODE_SNIPPETS: Code snippets for Sandbox based evaluation'
  gatewayDataset:
    type: object
    properties:
      name:
        type: string
        readOnly: true
      displayName:
        type: string
      createTime:
        type: string
        format: date-time
        readOnly: true
      state:
        $ref: '#/definitions/gatewayDatasetState'
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        readOnly: true
      exampleCount:
        type: string
        format: int64
      userUploaded:
        $ref: '#/definitions/gatewayUserUploaded'
      evaluationResult:
        $ref: '#/definitions/gatewayEvaluationResult'
      transformed:
        $ref: '#/definitions/gatewayTransformed'
      externalUrl:
        type: string
        title: The external URI of the dataset. e.g. gs://foo/bar/baz.jsonl
      format:
        $ref: '#/definitions/DatasetFormat'
      createdBy:
        type: string
        description: The email address of the user who initiated this fine-tuning
          job.
        readOnly: true
      updateTime:
        type: string
        format: date-time
        description: The update time for the dataset.
        readOnly: true
    title: 'Next ID: 19'
  gatewayDatasetState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - UPLOADING
    - READY
    default: STATE_UNSPECIFIED
  gatewayDatasetValidationFormat:
    type: string
    enum:
    - DATASET_VALIDATION_FORMAT_UNSPECIFIED
    - DATASET_VALIDATION_FORMAT_CHAT
    - DATASET_VALIDATION_FORMAT_CHAT_RELAXED
    - DATASET_VALIDATION_FORMAT_RLOR
    - DATASET_VALIDATION_FORMAT_BATCH_INFERENCE_STRICT
    - DATASET_VALIDATION_FORMAT_BATCH_INFERENCE_ALLOW_TRAILING_ASSISTANT
    default: DATASET_VALIDATION_FORMAT_UNSPECIFIED
    description: " - DATASET_VALIDATION_FORMAT_UNSPECIFIED: Unspecified format.\n\
      \ - DATASET_VALIDATION_FORMAT_CHAT: Chat dataset format. One or more .jsonl\
      \ files, in which each line is a JSON object with a \"messages\" list,\ncontaining\
      \ objects with a \"role\" field and a \"content\" field.\n{\"messages\": [{\"\
      role\": \"user\", \"content\": \"Hello, world!\"}, {\"role\": \"assistant\"\
      , \"content\": \"Hello, user!\"}]}\n - DATASET_VALIDATION_FORMAT_CHAT_RELAXED:\
      \ Chat dataset relaxed format. Same as DATASET_VALIDATION_FORMAT_CHAT, but optionally\
      \ allows the assistant message to be missing, and allows extra fields.\n - DATASET_VALIDATION_FORMAT_RLOR:\
      \ RLOR dataset format. One or more .jsonl files, in which each line is a JSON\
      \ object with a \"samples\" array,\ncontaining objects with \"messages\" list\
      \ and optional metrics keys with values ranging from 0.0 to 1.0.\n{\"samples\"\
      : [{\"messages\": [{\"role\": \"user\", \"content\": \"...\"}, {\"role\": \"\
      assistant\", \"content\": \"...\"}], \"metric_key\": 1.0}, ...]}\n - DATASET_VALIDATION_FORMAT_BATCH_INFERENCE_STRICT:\
      \ Batch inference strict format. Same as chat except no trailing assistant messages\
      \ allowed.\n - DATASET_VALIDATION_FORMAT_BATCH_INFERENCE_ALLOW_TRAILING_ASSISTANT:\
      \ Batch inference format with trailing assistant messages allowed. Same as chat\
      \ except trailing assistant messages are optional."
  gatewayDatasetValidationJob:
    type: object
    properties:
      name:
        type: string
        readOnly: true
      displayName:
        type: string
      createTime:
        type: string
        format: date-time
        readOnly: true
      createdBy:
        type: string
        readOnly: true
      state:
        $ref: '#/definitions/gatewayJobState'
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        readOnly: true
      datasetName:
        type: string
        description: The name of the dataset to validate.
      format:
        $ref: '#/definitions/gatewayDatasetValidationFormat'
        description: The format of the dataset. See DatasetValidationFormat for more
          details.
      result:
        $ref: '#/definitions/gatewayDatasetValidationJobResult'
        readOnly: true
      validationError:
        type: string
        readOnly: true
      datasetNames:
        type: array
        items:
          type: string
        description: The name of the dataset to validate.
      updateTime:
        type: string
        format: date-time
        description: The update time for the dataset validation job.
        readOnly: true
      rewards:
        type: array
        items:
          type: string
        description: A list of reward metrics to validate.
    title: 'Next ID: 13'
    required:
    - datasetName
    - format
  gatewayDatasetValidationJobResult:
    type: string
    enum:
    - DATASET_VALIDATION_JOB_RESULT_UNSPECIFIED
    - DATASET_VALIDATION_JOB_RESULT_SUCCESS
    - DATASET_VALIDATION_JOB_RESULT_FAILURE
    default: DATASET_VALIDATION_JOB_RESULT_UNSPECIFIED
  gatewayDeployedModel:
    type: object
    properties:
      name:
        type: string
        title: The resource name. e.g. accounts/my-account/deployedModels/my-deployed-model
        readOnly: true
      displayName:
        type: string
      description:
        type: string
        description: Description of the resource.
      createTime:
        type: string
        format: date-time
        description: The creation time of the resource.
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who created this deployed model.
        readOnly: true
      model:
        type: string
        title: 'The resource name of the model to be deployed.

          e.g. accounts/my-account/models/my-model'
      deployment:
        type: string
        description: The resource name of the base deployment the model is deployed
          to.
      default:
        type: boolean
        description: 'If true, this is the default target when querying this model
          without

          the `#<deployment>` suffix.

          The first deployment a model is deployed to will have this field set to
          true.'
      state:
        $ref: '#/definitions/gatewayDeployedModelState'
        description: The state of the deployed model.
        readOnly: true
      serverless:
        type: boolean
        title: True if the underlying deployment is managed by Fireworks
      status:
        $ref: '#/definitions/gatewayStatus'
        description: Contains model deploy/undeploy details.
        readOnly: true
      public:
        type: boolean
        description: If true, the deployed model will be publicly reachable.
      updateTime:
        type: string
        format: date-time
        description: The update time for the deployed model.
        readOnly: true
    title: 'Next ID: 14'
  gatewayDeployedModelRef:
    type: object
    properties:
      name:
        type: string
        title: The resource name. e.g. accounts/my-account/deployedModels/my-deployed-model
        readOnly: true
      deployment:
        type: string
        description: The resource name of the base deployment the model is deployed
          to.
        readOnly: true
      state:
        $ref: '#/definitions/gatewayDeployedModelState'
        description: The state of the deployed model.
        readOnly: true
      default:
        type: boolean
        description: 'If true, this is the default target when querying this model
          without

          the `#<deployment>` suffix.

          The first deployment a model is deployed to will have this field set to

          true automatically.'
        readOnly: true
      public:
        type: boolean
        description: If true, the deployed model will be publicly reachable.
        readOnly: true
    title: 'Next ID: 6'
  gatewayDeployedModelState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - UNDEPLOYING
    - DEPLOYING
    - DEPLOYED
    - UPDATING
    default: STATE_UNSPECIFIED
    description: "- UNDEPLOYING: The model is being undeployed.\n - DEPLOYING: The\
      \ model is being deployed.\n - DEPLOYED: The model is deployed and ready for\
      \ inference.\n - UPDATING: there are updates happening with the deployed model"
    title: 'Next ID: 6'
  gatewayDeployment:
    type: object
    properties:
      name:
        type: string
        title: The resource name of the deployment. e.g. accounts/my-account/deployments/my-deployment
        readOnly: true
      displayName:
        type: string
        description: 'Human-readable display name of the deployment. e.g. "My Deployment"

          Must be fewer than 64 characters long.'
      description:
        type: string
        description: Description of the deployment.
      createTime:
        type: string
        format: date-time
        description: The creation time of the deployment.
        readOnly: true
      expireTime:
        type: string
        format: date-time
        description: The time at which this deployment will automatically be deleted.
      purgeTime:
        type: string
        format: date-time
        description: The time at which the resource will be hard deleted.
        readOnly: true
      deleteTime:
        type: string
        format: date-time
        description: The time at which the resource will be soft deleted.
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who created this deployment.
        readOnly: true
      state:
        $ref: '#/definitions/gatewayDeploymentState'
        description: The state of the deployment.
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        description: Detailed status information regarding the most recent operation.
        readOnly: true
      annotations:
        type: object
        additionalProperties:
          type: string
        description: 'Annotations to identify deployment properties.

          Key/value pairs may be used by external tools or other services.'
      minReplicaCount:
        type: integer
        format: int32
        description: 'The minimum number of replicas.

          If not specified, the default is 0.'
      maxReplicaCount:
        type: integer
        format: int32
        description: 'The maximum number of replicas.

          If not specified, the default is max(min_replica_count, 1).

          May be set to 0 to downscale the deployment to 0.'
      replicaCount:
        type: integer
        format: int32
        readOnly: true
      autoscalingPolicy:
        $ref: '#/definitions/gatewayAutoscalingPolicy'
      baseModel:
        type: string
        title: The base model name. e.g. accounts/fireworks/models/falcon-7b
      acceleratorCount:
        type: integer
        format: int32
        description: 'The number of accelerators used per replica.

          If not specified, the default is the estimated minimum required by the

          base model.'
      acceleratorType:
        $ref: '#/definitions/gatewayAcceleratorType'
        description: 'The type of accelerator to use.

          If not specified, the default is NVIDIA_A100_80GB.'
      precision:
        $ref: '#/definitions/DeploymentPrecision'
        description: The precision with which the model should be served.
      cluster:
        type: string
        description: If set, this deployment is deployed to a cloud-premise cluster.
        readOnly: true
      enableAddons:
        type: boolean
        description: If true, PEFT addons are enabled for this deployment.
      draftTokenCount:
        type: integer
        format: int32
        description: 'The number of candidate tokens to generate per step for speculative

          decoding.

          Default is the base model''s draft_token_count. Set

          CreateDeploymentRequest.disable_speculative_decoding to false to disable

          this behavior.'
      draftModel:
        type: string
        description: 'The draft model name for speculative decoding. e.g. accounts/fireworks/models/my-draft-model

          If empty, speculative decoding using a draft model is disabled.

          Default is the base model''s default_draft_model. Set

          CreateDeploymentRequest.disable_speculative_decoding to false to disable

          this behavior.'
      ngramSpeculationLength:
        type: integer
        format: int32
        description: The length of previous input sequence to be considered for N-gram
          speculation.
      numPeftDeviceCached:
        type: integer
        format: int32
        title: How many peft adapters to keep on gpu side for caching
        readOnly: true
      deploymentTemplate:
        type: string
        description: 'The name of the deployment template to use for this deployment.
          Only

          available to enterprise accounts.'
      autoTune:
        $ref: '#/definitions/gatewayAutoTune'
        description: The performance profile to use for this deployment.
      region:
        $ref: '#/definitions/gatewayRegion'
        description: The geographic region where the deployment is located.
        readOnly: true
      isNim:
        type: boolean
        description: Whether this deployment should be created with NIM.
      updateTime:
        type: string
        format: date-time
        description: The update time for the deployment.
        readOnly: true
    title: 'Next ID: 63'
    required:
    - baseModel
  gatewayDeploymentAcceleratorConfig:
    type: object
    properties:
      acceleratorType:
        $ref: '#/definitions/gatewayAcceleratorType'
        title: 'Key: The accelerator type for this config'
      precision:
        $ref: '#/definitions/DeploymentPrecision'
        description: 'Key: Supported precisions.'
      minAcceleratorCount:
        type: integer
        format: int32
        description: 'Value: Minimum number of accelerators required.'
      regions:
        type: array
        items:
          $ref: '#/definitions/gatewayRegion'
        description: 'Value: Regions where the account has quota for this accelerator
          type.'
  gatewayDeploymentPrerequisites:
    type: object
    properties:
      acceleratorConfigs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayDeploymentAcceleratorConfig'
  gatewayDeploymentState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - CREATING
    - READY
    - DELETING
    - FAILED
    - UPDATING
    - DELETED
    default: STATE_UNSPECIFIED
    description: " - CREATING: The deployment is still being created.\n - READY: The\
      \ deployment is ready to be used.\n - DELETING: The deployment is being deleted.\n\
      \ - FAILED: The deployment failed to be created. See the `status` field for\n\
      additional details on why it failed.\n - UPDATING: There are in-progress updates\
      \ happening with the deployment.\n - DELETED: The deployment is soft-deleted."
  gatewayDeploymentTemplate:
    type: object
    properties:
      name:
        type: string
        title: The resource name of the template. e.g. accounts/my-account/deploymentTemplates/my-template
        readOnly: true
      displayName:
        type: string
        description: 'Human-readable display name of the deployment template. e.g.
          "My Template"

          Must be fewer than 64 characters long.'
      description:
        type: string
        description: Description of the deployment template.
      createTime:
        type: string
        format: date-time
        description: The creation time of the deployment template.
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who created this deployment template.
        readOnly: true
      minReplicaCount:
        type: integer
        format: int32
      maxReplicaCount:
        type: integer
        format: int32
      autoscalingPolicy:
        $ref: '#/definitions/gatewayAutoscalingPolicy'
      baseModel:
        type: string
      acceleratorCount:
        type: integer
        format: int32
      acceleratorType:
        $ref: '#/definitions/gatewayAcceleratorType'
      worldSize:
        type: integer
        format: int32
      generatorCount:
        type: integer
        format: int32
      disaggregatedPrefillCount:
        type: integer
        format: int32
      disaggregatedPrefillWorldSize:
        type: integer
        format: int32
      maxBatchSize:
        type: integer
        format: int32
      maxPeftBatchSize:
        type: integer
        format: int32
      kvCacheMemoryPct:
        type: integer
        format: int32
      enableAddons:
        type: boolean
      draftModel:
        type: string
      ngramSpeculationLength:
        type: integer
        format: int32
      draftTokenCount:
        type: integer
        format: int32
      enableSessionAffinity:
        type: boolean
      imageTag:
        type: string
      region:
        $ref: '#/definitions/gatewayRegion'
      directRouteApiKeys:
        type: array
        items:
          type: string
      directRouteType:
        $ref: '#/definitions/gatewayDirectRouteType'
      precision:
        $ref: '#/definitions/DeploymentPrecision'
      extraArgs:
        type: array
        items:
          type: string
        description: A list of extra arguments that should be passed to the server.
      extraValues:
        type: object
        additionalProperties:
          type: string
        description: A JSON object of extra values that should be passed to the helm
          chart when installed.
      updateTime:
        type: string
        format: date-time
        description: The update time for the deployment template.
        readOnly: true
    title: 'Next ID: 38'
  gatewayDirectRouteType:
    type: string
    enum:
    - DIRECT_ROUTE_TYPE_UNSPECIFIED
    - INTERNET
    - GCP_PRIVATE_SERVICE_CONNECT
    - AWS_PRIVATELINK
    default: DIRECT_ROUTE_TYPE_UNSPECIFIED
    title: "- DIRECT_ROUTE_TYPE_UNSPECIFIED: No direct routing\n - INTERNET: The direct\
      \ route is exposed via the public internet\n - GCP_PRIVATE_SERVICE_CONNECT:\
      \ The direct route is exposed via GCP Private Service Connect\n - AWS_PRIVATELINK:\
      \ The direct route is exposed via AWS PrivateLink"
  gatewayEagleTrainingJob:
    type: object
    properties:
      name:
        type: string
        readOnly: true
      displayName:
        type: string
      createTime:
        type: string
        format: date-time
        readOnly: true
      expireTime:
        type: string
        format: date-time
        description: The time after which the EAGLE training job will give up if it
          has not finished running.
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who created this EAGLE training
          job.
        readOnly: true
      state:
        $ref: '#/definitions/gatewayJobState'
        description: State of the training job.
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        description: Information describing success or failure of the training job.
        readOnly: true
      inputDraftModel:
        type: string
        description: 'The name of a model with Kind=DRAFT_ADDON. Model architecture
          must

          be either Llama or Mixtral and compatible with the base model.

          Example: "accounts/example-account/models/example-draft-model".'
      trainingDataset:
        type: string
        description: 'The name of the dataset to use for training the eagle model.

          Example: "accounts/example-account/datasets/example-dataset".'
      baseModel:
        type: string
        description: 'The name of the base model to use for training the eagle model.

          Model architecture must be either Llama or Mixtral.

          Kind must be HF_BASE_MODEL.

          Example: "accounts/example-account/models/example-base-model".'
      outputDraftModel:
        type: string
        description: 'The name of the output draft model that is generated as the

          output of this job.

          Example: "accounts/example-account/models/example-draft-model".'
      epochsCount:
        type: number
        format: float
        description: 'Number of epochs to train for. If absent, it will be set

          automatically.'
      learningRate:
        type: number
        format: float
        description: 'Learning rate for the EAGLE training job. If absent, it will
          be set

          automatically.'
      wandbConfig:
        $ref: '#/definitions/gatewayWandbConfig'
        description: The Weights & Biases team/user account for logging training progress.
      earlyStopConfig:
        $ref: '#/definitions/gatewayEarlyStopConfig'
        description: 'Controls whether or not to do early stop in a training job.

          If unset, early stop decision will be made automatically.'
      updateTime:
        type: string
        format: date-time
        description: The update time for the eagle training job.
        readOnly: true
    title: 'Next ID: 23'
    required:
    - inputDraftModel
    - trainingDataset
    - baseModel
    - outputDraftModel
  gatewayEarlyStopConfig:
    type: object
    properties:
      isSet:
        type: boolean
        description: Whether the early stop config is set.
      enabled:
        type: boolean
        description: Whether to enable early stop.
    description: 'EarlyStopConfig controls whether or not to do early stop in a

      training job.'
  gatewayEksCluster:
    type: object
    properties:
      awsAccountId:
        type: string
        description: The 12-digit AWS account ID where this cluster lives.
      fireworksManagerRole:
        type: string
        title: 'The IAM role ARN used to manage Fireworks resources on AWS.

          If not specified, the default is arn:aws:iam::<aws_account_id>:role/FireworksManagerRole'
      region:
        type: string
        description: 'The AWS region where this cluster lives. See https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html

          for a list of available regions.'
      clusterName:
        type: string
        description: The EKS cluster name.
      storageBucketName:
        type: string
        description: The S3 bucket name.
      metricWriterRole:
        type: string
        description: 'The IAM role ARN used by Google Managed Prometheus role that
          will write metrics

          to Fireworks managed Prometheus. The role must be assumable by the

          `system:serviceaccount:gmp-system:collector` service account on the EKS
          cluster.

          If not specified, no metrics will be written to GCP.'
      loadBalancerControllerRole:
        type: string
        description: 'The IAM role ARN used by the EKS load balancer controller (i.e.
          the load balancer

          automatically created for the k8s gateway resource). If not specified, no
          gateway

          will be created.'
      workloadIdentityPoolProviderId:
        type: string
        title: 'The ID of the GCP workload identity pool provider in the Fireworks

          project for this cluster. The pool ID is assumed to be "byoc-pool"'
      inferenceRole:
        type: string
        description: The IAM role ARN used by the inference pods on the cluster.
    title: 'An Amazon Elastic Kubernetes Service cluster.

      Next ID: 16'
    required:
    - awsAccountId
    - region
  gatewayEksNodePool:
    type: object
    properties:
      nodeRole:
        type: string
        description: 'If not specified, the parent cluster''s system_node_group_role

          will be used.'
        title: 'The IAM role ARN to associate with nodes. The role must have the

          following IAM policies attached:

          - AmazonEKSWorkerNodePolicy

          - AmazonEC2ContainerRegistryReadOnly

          - AmazonEKS_CNI_Policy'
      instanceType:
        type: string
        description: 'The type of instance used in this node pool. See https://aws.amazon.com/ec2/instance-types/

          for a list of valid instance types.'
      spot:
        type: boolean
        title: 'If true, nodes are created as preemptible VM instances.

          See https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types'
      nodeGroupName:
        type: string
        description: 'The name of the node group.

          If not specified, the default is the node pool ID.'
      subnetIds:
        type: array
        items:
          type: string
        description: 'A list of subnet IDs for nodes in this node pool.

          If not specified, the parent cluster''s default subnet IDs that matches
          the zone

          will be used. Note that all the subnets will need to be in the same zone.'
      zone:
        type: string
        description: 'Zone for the node pool.

          If not specified, a random zone in the cluster''s region will be selected.'
      placementGroup:
        type: string
        description: Cluster placement group to colocate hosts in this pool.
      launchTemplate:
        type: string
        description: Launch template to create for this node group.
    title: 'An Amazon Elastic Kubernetes Service node pool.

      Next ID: 10'
    required:
    - instanceType
  gatewayEnvironment:
    type: object
    properties:
      name:
        type: string
        title: The resource name of the environment. e.g. accounts/my-account/clusters/my-cluster/environments/my-env
        readOnly: true
      displayName:
        type: string
        title: Human-readable display name of the environment. e.g. "My Environment"
      createTime:
        type: string
        format: date-time
        description: The creation time of the environment.
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who created this environment.
        readOnly: true
      state:
        $ref: '#/definitions/gatewayEnvironmentState'
        description: The current state of the environment.
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        description: The current error status of the environment.
        readOnly: true
      connection:
        $ref: '#/definitions/gatewayEnvironmentConnection'
        description: Information about the current environment connection.
        readOnly: true
      baseImageRef:
        type: string
        description: The URI of the base container image used for this environment.
      imageRef:
        type: string
        description: 'The URI of the container image used for this environment. This
          is a

          image is an immutable snapshot of the base_image_ref when the environment

          was created.'
        readOnly: true
      snapshotImageRef:
        type: string
        description: The URI of the latest container image snapshot for this environment.
        readOnly: true
      shared:
        type: boolean
        description: 'Whether the environment is shared with all users in the account.

          This allows all users to connect, disconnect, update, delete, clone, and

          create batch jobs using the environment.'
      annotations:
        type: object
        additionalProperties:
          type: string
        description: 'Arbitrary, user-specified metadata.

          Keys and values must adhere to Kubernetes constraints: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set

          Additionally, the "fireworks.ai/" prefix is reserved.'
      updateTime:
        type: string
        format: date-time
        description: The update time for the environment.
        readOnly: true
    title: 'Next ID: 14'
  gatewayEnvironmentConnection:
    type: object
    properties:
      nodePoolId:
        type: string
        description: The resource id of the node pool the environment is connected
          to.
      numRanks:
        type: integer
        format: int32
        description: 'For GPU node pools: one GPU per rank w/ host packing,

          for CPU node pools: one host per rank.

          If not specified, the default is 1.'
      role:
        type: string
        description: 'The ARN of the AWS IAM role that the connection should assume.

          If not specified, the connection will fall back to the node

          pool''s node_role.'
      zone:
        type: string
        description: 'Current for the last zone that this environment is connected
          to. We

          want to warn the users about cross zone migration latency when they are

          connecting to node pool in a different zone as their persistent volume.'
        readOnly: true
      useLocalStorage:
        type: boolean
        description: 'If true, the node''s local storage will be mounted on /tmp.
          This flag has

          no effect if the node does not have local storage.'
    title: 'Next ID: 8'
    required:
    - nodePoolId
  gatewayEnvironmentState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - CREATING
    - DISCONNECTED
    - CONNECTING
    - CONNECTED
    - DISCONNECTING
    - RECONNECTING
    - DELETING
    default: STATE_UNSPECIFIED
    description: "- CREATING: The environment is being created.\n - DISCONNECTED:\
      \ The environment is not connected.\n - CONNECTING: The environment is being\
      \ connected to a node.\n - CONNECTED: The environment is connected to a node.\n\
      \ - DISCONNECTING: The environment is being disconnected from a node.\n - RECONNECTING:\
      \ The environment is reconnecting with new connection parameters.\n - DELETING:\
      \ The environment is being deleted."
    title: 'Next ID: 8'
  gatewayEvaluateOptions:
    type: object
    properties:
      maxConcurrency:
        type: integer
        format: int32
        title: 'Maximum concurrent requests (default: 4)'
      repeat:
        type: integer
        format: int32
        title: 'Number of times to repeat each test case (default: 1)'
      delay:
        type: integer
        format: int32
        title: Delay (in ms) between API calls
    title: Options for how to run the evaluation
  gatewayEvaluation:
    type: object
    properties:
      name:
        type: string
        title: Current fields in your proto
        readOnly: true
      createTime:
        type: string
        format: date-time
        readOnly: true
      createdBy:
        type: string
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        readOnly: true
      evaluationType:
        type: string
        title: string llm_evaluator_prompt = 6;
      description:
        type: string
        title: Optional description of the evaluation
      providers:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayProvider'
        title: One or more providers to use
      assertions:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayAssertion'
        title: One or more assertions to evaluate
      updateTime:
        type: string
        format: date-time
        description: The update time for the evaluation.
        readOnly: true
    title: 'Next ID: 11'
    required:
    - evaluationType
    - providers
    - assertions
  gatewayEvaluationJob:
    type: object
    properties:
      name:
        type: string
        readOnly: true
      displayName:
        type: string
      createTime:
        type: string
        format: date-time
        readOnly: true
      createdBy:
        type: string
        readOnly: true
      state:
        $ref: '#/definitions/gatewayJobState'
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        readOnly: true
      evaluator:
        type: string
        description: 'The fully-qualified resource name of the Evaluation used by
          this job.


          Format: accounts/{account_id}/evaluators/{evaluator_id}'
      inputDataset:
        type: string
        description: 'The fully-qualified resource name of the input Dataset used
          by this job.


          Format: accounts/{account_id}/datasets/{dataset_id}'
      outputDataset:
        type: string
        description: 'The fully-qualified resource name of the output Dataset created
          by this job.


          Format: accounts/{account_id}/datasets/{output_dataset_id}'
      metrics:
        type: object
        additionalProperties:
          type: number
          format: double
        readOnly: true
      outputStats:
        type: string
        description: The output dataset's aggregated stats for the evaluation job.
      updateTime:
        type: string
        format: date-time
        description: The update time for the evaluation job.
        readOnly: true
    title: 'Next ID: 13'
    required:
    - evaluator
    - inputDataset
    - outputDataset
  gatewayEvaluationResult:
    type: object
    properties:
      evaluationJobId:
        type: string
    required:
    - evaluationJobId
  gatewayEvaluator:
    type: object
    properties:
      name:
        type: string
        readOnly: true
      displayName:
        type: string
      description:
        type: string
      createTime:
        type: string
        format: date-time
        readOnly: true
      createdBy:
        type: string
        readOnly: true
      updateTime:
        type: string
        format: date-time
        readOnly: true
      state:
        $ref: '#/definitions/gatewayEvaluatorState'
        readOnly: true
      multiMetrics:
        type: boolean
        description: 'If true, the criteria will report multiple metric-score pairs

          Otherwise, each criteria will report the score assigned to the criteria
          name as metric.'
      criteria:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayCriterion'
        title: Criteria for the evaluator, it should produce a score for the metric
          (name of criteria)
      requirements:
        type: string
        title: Content for the requirements.txt for package installation
      rollupSettings:
        $ref: '#/definitions/gatewayRollupSettings'
        title: 'Strategy for metrics reports summary/rollup.

          e.g. {metric1: 1, metric2: 0.3}, rollup_settings could be criteria_weights:
          {metric1: 0.5, metric2: 0.5}, then final score will be 0.5 * 1 + 0.5 * 0.3
          = 0.65'
    title: 'Next ID: 12'
  gatewayEvaluatorState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - ACTIVE
    default: STATE_UNSPECIFIED
    description: "The evaluator is not ready to use for evaluation, could be deploying,\
      \ updating, or manually marked as inactive.\n INACTIVE = 2;"
    title: '- ACTIVE: The evaluator is ready to use for evaluation'
  gatewayExample:
    type: object
    properties:
      content:
        type: string
  gatewayExportBillingMetricsResponse:
    type: object
    properties:
      signedUrls:
        type: array
        items:
          type: string
        description: 'The signed URL of the exported file(s).

          There will be exactly one file. This may change in the future.'
  gatewayFakeCluster:
    type: object
    properties:
      projectId:
        type: string
      location:
        type: string
      clusterName:
        type: string
    title: A fake cluster using https://pkg.go.dev/k8s.io/client-go/kubernetes/fake
  gatewayFakeNodePool:
    type: object
    properties:
      machineType:
        type: string
      numNodes:
        type: integer
        format: int32
      serviceAccount:
        type: string
    description: A fake node pool to be used with FakeCluster.
  gatewayFineTuningJob:
    type: object
    properties:
      name:
        type: string
        readOnly: true
      displayName:
        type: string
      createTime:
        type: string
        format: date-time
        readOnly: true
      state:
        $ref: '#/definitions/gatewayFineTuningJobState'
        readOnly: true
      dataset:
        type: string
        description: 'The name of the dataset used for training. A dataset ID may
          also be supplied, in

          which case the ID will be normalized into the fully qualified dataset name
          using

          the parent of the job.'
      datasets:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayFineTuningJobDataset'
      status:
        $ref: '#/definitions/gatewayStatus'
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who created this fine tuning job.
        readOnly: true
      containerVersion:
        type: string
      modelId:
        type: string
        description: the model id to generate for training jobs.
      legacyJob:
        $ref: '#/definitions/FineTuningJobLegacyJob'
      textCompletion:
        $ref: '#/definitions/FineTuningJobTextCompletion'
      textClassification:
        $ref: '#/definitions/FineTuningJobTextClassification'
      conversation:
        $ref: '#/definitions/FineTuningJobConversation'
      draftModelData:
        $ref: '#/definitions/FineTuningJobDraftModelData'
      draftModel:
        $ref: '#/definitions/FineTuningJobDraftModel'
      genie:
        $ref: '#/definitions/FineTuningJobGenie'
      baseModel:
        type: string
        description: The name of the base model.
      warmStartFrom:
        type: string
        description: peft addon model in fireworks format to warm start a fine-tuning
          job from.
        readOnly: true
      epochs:
        type: number
        format: double
        description: The number of epochs to train for.
      learningRate:
        type: number
        format: double
        description: The learning rate used for training.
      loraRank:
        type: integer
        format: int32
        description: The lora rank used for training.
      loraTargetModules:
        type: array
        items:
          type: string
        description: The lora target modules used for training.
      batchSize:
        type: integer
        format: int32
        description: The batch size of dataset used for training.
      microBatchSize:
        type: integer
        format: int32
        description: The batch size of dataset used for training per accelerator.
      maskToken:
        type: string
        description: The token to mask out prompts, used by draft model data generation.
      padToken:
        type: string
        description: The token for padding, used by draft model data generation.
      wandbUrl:
        type: string
        description: The Weights & Biases url to see training progress.
        readOnly: true
      wandbEntity:
        type: string
        description: 'The Weights & Biases entity where training progress should be
          reported.

          If unspecified, then progress will not be reported to W&B.'
      wandbApiKey:
        type: string
        description: 'The Weights & Biases API key associated with the entity.

          Required if and only if wandb_entity is specified.'
      wandbProject:
        type: string
        description: 'The Weights & Biases project where training progress should
          be reported.

          Required if and only if wandb_entity is specified.'
      evaluation:
        type: boolean
      evaluationSplit:
        type: number
        format: double
        description: the split flag to take from training dataset for evaluation.
      evaluationDataset:
        type: string
        description: the dataset to use for evaluation.
      dependentJobs:
        type: array
        items:
          type: string
    title: 'Next ID: 48'
  gatewayFineTuningJobDataset:
    type: object
    properties:
      dataset:
        type: string
    description: 'The list of datasets to be used for training.  The dataset IDs may
      also be

      supplied, in which case the ID will be normalized into the fully qualified

      dataset name using the parent of the job.'
  gatewayFineTuningJobState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - CREATING
    - PENDING
    - RUNNING
    - COMPLETED
    - FAILED
    - DELETING
    default: STATE_UNSPECIFIED
    description: "- CREATING: The fine-tuning job is being created.\n - PENDING: The\
      \ fine-tuning job scheduled and is waiting for resource allocation.\n - RUNNING:\
      \ The fine-tuning job is running.\n - COMPLETED: The fine-tuning job has finished\
      \ successfully.\n - FAILED: The fine-tuning job has failed.\n - DELETING: The\
      \ fine-tuning job is being deleted"
    title: 'Next ID: 8'
  gatewayGetBatchInferenceJobInputUploadEndpointResponse:
    type: object
    properties:
      filenameToSignedUrls:
        type: object
        additionalProperties:
          type: string
        description: Signed URLs for users to upload their input to GCS.
  gatewayGetBatchInferenceJobOutputDownloadEndpointResponse:
    type: object
    properties:
      filenameToSignedUrls:
        type: object
        additionalProperties:
          type: string
        description: Signed URLs for users to download their input from GCS.
  gatewayGetBatchJobLogsResponse:
    type: object
    properties:
      entries:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayLogEntry'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
  gatewayGetDatasetDownloadEndpointResponse:
    type: object
    properties:
      filenameToSignedUrls:
        type: object
        additionalProperties:
          type: string
        title: Signed URLs for downloading dataset files
  gatewayGetDatasetUploadEndpointResponse:
    type: object
    properties:
      filenameToSignedUrls:
        type: object
        additionalProperties:
          type: string
        title: Signed URLs for uploading dataset files
  gatewayGetDeploymentMetricsResponse:
    type: object
    properties:
      metrics:
        type: object
        additionalProperties:
          type: number
          format: double
        title: Map of metric name to metric value for the specified time range
  gatewayGetModelDownloadEndpointResponse:
    type: object
    properties:
      filenameToSignedUrls:
        type: object
        additionalProperties:
          type: string
        title: Signed URLs for for downloading model files
  gatewayGetModelUploadEndpointResponse:
    type: object
    properties:
      filenameToSignedUrls:
        type: object
        additionalProperties:
          type: string
        title: Signed URLs for uploading model files
      filenameToUnsignedUris:
        type: object
        additionalProperties:
          type: string
        description: 'Unsigned URIs (e.g. s3://bucket/key, gs://bucket/key) for uploading
          model files.

          Returned when the caller has permission to upload to the URIs.'
  gatewayGetOAuthArgumentsResponse:
    type: object
    properties:
      issuerUrl:
        type: string
      clientId:
        type: string
      cognitoDomain:
        type: string
  gatewayGetTotalHistoricalSpendResponse:
    type: object
    properties:
      spend:
        $ref: '#/definitions/typeMoney'
  gatewayInferenceLog:
    type: object
    properties:
      name:
        type: string
        title: Resource name in the format "accounts/{account_id}/inference-logs/{inference_log_id}"
        readOnly: true
      createTime:
        type: string
        format: date-time
        title: The time the inference log was created
        readOnly: true
      model:
        type: string
        title: The model used for the inference
        readOnly: true
      requestType:
        type: string
        title: Request type (chat, completion, embedding, etc.)
        readOnly: true
      inputContent:
        type: string
        title: The input content provided in the request
        readOnly: true
      outputContent:
        type: string
        title: The output content generated by the model
        readOnly: true
      durationMs:
        type: string
        format: int64
        title: Duration of the request in milliseconds
        readOnly: true
      statusCode:
        type: integer
        format: int32
        title: Status code of the API call
        readOnly: true
      metadata:
        type: object
        additionalProperties:
          type: string
        title: Additional metadata about the log
        readOnly: true
      updateTime:
        type: string
        format: date-time
        title: The update time for the inference log
        readOnly: true
    title: Trace resource definition
  gatewayInferenceParameters:
    type: object
    properties:
      maxTokens:
        type: integer
        format: int32
        description: Maximum number of tokens to generate per response.
      temperature:
        type: number
        format: float
        description: Sampling temperature, typically between 0 and 2.
      topP:
        type: number
        format: float
        description: Top-p sampling parameter, typically between 0 and 1.
      n:
        type: integer
        format: int32
        description: Number of response candidates to generate per input.
      extraBody:
        type: string
        description: 'Additional parameters for the inference request as a JSON string.

          For example: "{\"stop\": [\"\\n\"]}".'
      topK:
        type: integer
        format: int32
        description: Top-k sampling parameter, limits the token selection to the top
          k tokens.
    description: Parameters for the inference requests.
  gatewayInvoice:
    type: object
    properties:
      id:
        type: string
        title: ID of the invoice
      amountDue:
        $ref: '#/definitions/typeMoney'
        description: 'This is the final amount required to be charged to the customer

          after any credits, discounts and customer balance have been applied.'
      invoiceUrl:
        type: string
        description: A URL for the invoice portal.
      state:
        $ref: '#/definitions/gatewayInvoiceState'
      targetTime:
        type: string
        format: date-time
        description: The scheduled time of the invoice.
      paidTime:
        type: string
        format: date-time
        description: The timestamp when the invoice was paid.
  gatewayInvoiceState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - DRAFT
    - ISSUED
    - PAID
    - VOID
    - FAILED
    default: STATE_UNSPECIFIED
  gatewayJobState:
    type: string
    enum:
    - JOB_STATE_UNSPECIFIED
    - JOB_STATE_CREATING
    - JOB_STATE_RUNNING
    - JOB_STATE_COMPLETED
    - JOB_STATE_FAILED
    - JOB_STATE_CANCELLED
    - JOB_STATE_DELETING
    - JOB_STATE_WRITING_RESULTS
    - JOB_STATE_VALIDATING
    - JOB_STATE_ROLLOUT
    - JOB_STATE_EVALUATION
    - JOB_STATE_HANDLING_FAILURE
    - JOB_STATE_DELETING_INCOMPLETE
    - JOB_STATE_POLICY_UPDATE
    default: JOB_STATE_UNSPECIFIED
    description: JobState represents the state an asynchronous job can be in.
  gatewayLLMAssertion:
    type: object
    properties:
      llmEvaluatorPrompt:
        type: string
        title: Prompt used to evaluate the output
      providers:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayProvider'
        title: One or more providers to use
      prompts:
        type: array
        items:
          type: string
        title: One or more prompts to evaluate
      evaluateOptions:
        $ref: '#/definitions/gatewayEvaluateOptions'
        title: Options for how to run the evaluation
    required:
    - providers
    - prompts
  gatewayListAccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayAccount'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of accounts.
  gatewayListApiKeysResponse:
    type: object
    properties:
      apiKeys:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayApiKey'
        description: List of API keys retrieved.
      nextPageToken:
        type: string
        title: 'Token for fetching the next page of results. Pagination support to
          be added.

          TODO: Implement pagination'
      totalSize:
        type: integer
        format: int32
        description: The total number of API keys.
  gatewayListAuditLogsResponse:
    type: object
    properties:
      auditLogs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayAuditLogEntry'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of request logs matching the request.
  gatewayListAwsIamRoleBindingsResponse:
    type: object
    properties:
      awsIamRoleBindings:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayAwsIamRoleBinding'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of AWS IAM role bindings.
  gatewayListBatchInferenceJobsResponse:
    type: object
    properties:
      batchInferenceJobs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayBatchInferenceJob'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of batch inference jobs.
  gatewayListBatchJobsResponse:
    type: object
    properties:
      batchJobs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayBatchJob'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of batch jobs.
  gatewayListClustersResponse:
    type: object
    properties:
      clusters:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayCluster'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of clusters.
  gatewayListCostsResponse:
    type: object
    properties:
      costDataItems:
        type: array
        items:
          type: object
          $ref: '#/definitions/ListCostsResponseCostDataItem'
  gatewayListDatasetValidationJobsResponse:
    type: object
    properties:
      datasetValidationJobs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayDatasetValidationJob'
      nextPageToken:
        type: string
      totalSize:
        type: integer
        format: int32
  gatewayListDatasetsResponse:
    type: object
    properties:
      datasets:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayDataset'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        title: The total number of datasets
  gatewayListDeployedModelsResponse:
    type: object
    properties:
      deployedModels:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayDeployedModel'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        title: The total number of deployed models
  gatewayListDeploymentTemplatesResponse:
    type: object
    properties:
      deploymentTemplates:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayDeploymentTemplate'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        title: The total number of deployments
  gatewayListDeploymentsResponse:
    type: object
    properties:
      deployments:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayDeployment'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of deployments.
  gatewayListEagleTrainingJobsResponse:
    type: object
    properties:
      eagleTrainingJobs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayEagleTrainingJob'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of EAGLE training jobs.
  gatewayListEnvironmentsResponse:
    type: object
    properties:
      environments:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayEnvironment'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of environments.
  gatewayListEvaluationJobsResponse:
    type: object
    properties:
      evaluationJobs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayEvaluationJob'
      nextPageToken:
        type: string
      totalSize:
        type: integer
        format: int32
  gatewayListEvaluationsResponse:
    type: object
    properties:
      evaluations:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayEvaluation'
      nextPageToken:
        type: string
      totalSize:
        type: integer
        format: int32
  gatewayListEvaluatorsResponse:
    type: object
    properties:
      evaluators:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayEvaluator'
      nextPageToken:
        type: string
      totalSize:
        type: integer
        format: int32
  gatewayListFineTuningJobsResponse:
    type: object
    properties:
      fineTuningJobs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayFineTuningJob'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        title: The total number of fine-tuning jobs
  gatewayListInferenceLogsResponse:
    type: object
    properties:
      inferenceLogs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayInferenceLog'
        title: The list of inference logs
      nextPageToken:
        type: string
        title: A token to retrieve the next page of results
      totalSize:
        type: integer
        format: int32
        title: The total number of inference logs matching the request
    title: ListInferenceLogsResponse returns the list of inference logs
  gatewayListInvoicesResponse:
    type: object
    properties:
      invoices:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayInvoice'
      nextPageToken:
        type: string
        title: dummy fields to be compatible with list.ListAndPrint
      totalSize:
        type: integer
        format: int32
  gatewayListModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayModel'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        title: The total number of models
  gatewayListNodePoolBindingsResponse:
    type: object
    properties:
      nodePoolBindings:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayNodePoolBinding'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of node pool bindings.
  gatewayListNodePoolsResponse:
    type: object
    properties:
      nodePools:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayNodePool'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of node pools.
  gatewayListPaymentMethodsResponse:
    type: object
    properties:
      defaultPaymentMethodId:
        type: string
      stripePaymentMethods:
        type: array
        items:
          type: object
          $ref: '#/definitions/ListPaymentMethodsResponseStripePaymentMethod'
  gatewayListPeftMergeJobsResponse:
    type: object
    properties:
      peftMergeJobs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayPeftMergeJob'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of peft merge jobs.
  gatewayListQuotasResponse:
    type: object
    properties:
      quotas:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayQuota'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        title: The total number of quotas
  gatewayListReinforcementFineTuningEpochsResponse:
    type: object
    properties:
      reinforcementFineTuningEpochs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayReinforcementFineTuningEpoch'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        title: The total number of fine-tuning epochs
  gatewayListReinforcementFineTuningJobsResponse:
    type: object
    properties:
      reinforcementFineTuningJobs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayReinforcementFineTuningJob'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        title: The total number of fine-tuning jobs
  gatewayListReservationsResponse:
    type: object
    properties:
      reservations:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayReservation'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of reservations.
  gatewayListRlorTrainerJobsResponse:
    type: object
    properties:
      rlorTrainerJobs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayRlorTrainerJob'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        title: The total number of fine-tuning jobs
  gatewayListSecretsResponse:
    type: object
    properties:
      secrets:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewaySecret'
      nextPageToken:
        type: string
      totalSize:
        type: integer
        format: int32
        description: The total number of secrets.
  gatewayListServerlessLoraModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: string
        title: List of model names that support serverless LoRA
    title: Response message for ListServerlessLoraModels method
  gatewayListSnapshotsResponse:
    type: object
    properties:
      snapshots:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewaySnapshot'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of snapshots.
  gatewayListSupervisedFineTuningJobsResponse:
    type: object
    properties:
      supervisedFineTuningJobs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewaySupervisedFineTuningJob'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        title: The total number of fine-tuning jobs
  gatewayListUsersResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayUser'
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalSize:
        type: integer
        format: int32
        description: The total number of users.
  gatewayLogEntry:
    type: object
    properties:
      logTime:
        type: string
        format: date-time
        description: The timestamp of the log entry.
      rank:
        type: integer
        format: int32
        description: The rank which produced the log entry.
      message:
        type: string
        description: The log messsage.
  gatewayModel:
    type: object
    properties:
      name:
        type: string
        title: The resource name of the model. e.g. accounts/my-account/models/my-model
        readOnly: true
      displayName:
        type: string
        description: 'Human-readable display name of the model. e.g. "My Model"

          Must be fewer than 64 characters long.'
      description:
        type: string
        description: The description of the model. Must be fewer than 1000 characters
          long.
      createTime:
        type: string
        format: date-time
        description: The creation time of the model.
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who created this model.
        readOnly: true
      state:
        $ref: '#/definitions/gatewayModelState'
        description: The state of the model.
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        description: Contains detailed message when the last model operation fails.
        readOnly: true
      kind:
        $ref: '#/definitions/ModelKind'
        description: 'The kind of model.

          If not specified, the default is HF_PEFT_ADDON.'
      githubUrl:
        type: string
        description: The URL to GitHub repository of the model.
      huggingFaceUrl:
        type: string
        description: The URL to the Hugging Face model.
      baseModelDetails:
        $ref: '#/definitions/gatewayBaseModelDetails'
        description: 'Base model details.

          Required if kind is HF_BASE_MODEL. Must not be set otherwise.'
      peftDetails:
        $ref: '#/definitions/gatewayPEFTDetails'
        description: 'PEFT addon details.

          Required if kind is HF_PEFT_ADDON or HF_TEFT_ADDON.'
      teftDetails:
        $ref: '#/definitions/gatewayTEFTDetails'
        description: 'TEFT addon details.

          Required if kind is HF_TEFT_ADDON. Must not be set otherwise.'
      public:
        type: boolean
        description: If true, the model will be publicly readable.
      conversationConfig:
        $ref: '#/definitions/gatewayConversationConfig'
        description: If set, the Chat Completions API will be enabled for this model.
      contextLength:
        type: integer
        format: int32
        description: The maximum context length supported by the model.
      supportsImageInput:
        type: boolean
        description: If set, images can be provided as input to the model.
      supportsTools:
        type: boolean
        description: 'If set, tools (i.e. functions) can be provided as input to the
          model,

          and the model may respond with one or more tool calls.'
      importedFrom:
        type: string
        description: 'The name of the the model from which this was imported. This
          field is empty

          if the model was not imported.'
        readOnly: true
      fineTuningJob:
        type: string
        description: 'If the model was created from a fine-tuning job, this is the
          fine-tuning

          job name.'
        readOnly: true
      defaultDraftModel:
        type: string
        description: 'The default draft model to use when creating a deployment. If
          empty,

          speculative decoding is disabled by default.'
      defaultDraftTokenCount:
        type: integer
        format: int32
        description: 'The default draft token count to use when creating a deployment.

          Must be specified if default_draft_model is specified.'
      precisions:
        type: array
        items:
          $ref: '#/definitions/DeploymentPrecision'
        title: Precisions that were successfully calibration and available to be deployed
        readOnly: true
      deployedModelRefs:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayDeployedModelRef'
        description: Populated from GetModel API call only.
        readOnly: true
      cluster:
        type: string
        description: 'The resource name of the BYOC cluster to which this model belongs.

          e.g. accounts/my-account/clusters/my-cluster. Empty if it belongs to

          a Fireworks cluster.'
        readOnly: true
      deprecationDate:
        $ref: '#/definitions/typeDate'
        description: If specified, this is the date when the serverless deployment
          of the model will be taken down.
      calibrated:
        type: boolean
        description: If true, the model is calibrated and can be deployed to non-FP16
          precisions.
        readOnly: true
      tunable:
        type: boolean
        description: 'If true, the model can be fine-tuned. The value will be true
          if the tunable field is true, and

          the model is validated against the model_type field.'
        readOnly: true
      supportsLora:
        type: boolean
        description: Whether this model supports LoRA.
      useHfApplyChatTemplate:
        type: boolean
        description: If true, the model will use the Hugging Face apply_chat_template
          API to apply the chat template.
      updateTime:
        type: string
        format: date-time
        description: The update time for the model.
        readOnly: true
      defaultSamplingParams:
        type: object
        additionalProperties:
          type: number
          format: float
        description: A json object that contains the default sampling parameters for
          the model.
        readOnly: true
    title: 'Next ID: 48'
  gatewayModelState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - UPLOADING
    - READY
    default: STATE_UNSPECIFIED
    description: "- UPLOADING: The model is still being uploaded (upload is asynchronous).\n\
      \ - READY: The model is ready to be used."
    title: 'Next ID: 7'
  gatewayNodePool:
    type: object
    properties:
      name:
        type: string
        title: The resource name of the node pool. e.g. accounts/my-account/clusters/my-cluster/nodePools/my-pool
        readOnly: true
      displayName:
        type: string
        description: 'Human-readable display name of the node pool. e.g. "My Node
          Pool"

          Must be fewer than 64 characters long.'
      createTime:
        type: string
        format: date-time
        description: The creation time of the node pool.
        readOnly: true
      minNodeCount:
        type: integer
        format: int32
        description: 'Minimum number of nodes in this node pool. Must be a non-negative
          integer

          less than or equal to max_node_count.

          If not specified, the default is 0.'
      maxNodeCount:
        type: integer
        format: int32
        description: 'Maximum number of nodes in this node pool. Must be a positive
          integer

          greater than or equal to min_node_count.

          If not specified, the default is 1.'
      overprovisionNodeCount:
        type: integer
        format: int32
        description: 'The number of nodes to overprovision by the autoscaler. Must
          be a

          non-negative integer and less than or equal to min_node_count and

          max_node_count-min_node_count.

          If not specified, the default is 0.'
      eksNodePool:
        $ref: '#/definitions/gatewayEksNodePool'
      fakeNodePool:
        $ref: '#/definitions/gatewayFakeNodePool'
      annotations:
        type: object
        additionalProperties:
          type: string
        description: 'Arbitrary, user-specified metadata.

          Keys and values must adhere to Kubernetes constraints: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set

          Additionally, the "fireworks.ai/" prefix is reserved.'
      state:
        $ref: '#/definitions/gatewayNodePoolState'
        description: The current state of the node pool.
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        description: 'Contains detailed message when the last node pool operation
          fails, e.g.

          when node pool is in FAILED state or when last node pool update fails.'
        readOnly: true
      nodePoolStats:
        $ref: '#/definitions/gatewayNodePoolStats'
        description: Live statistics of the node pool.
        readOnly: true
      updateTime:
        type: string
        format: date-time
        description: The update time for the node pool.
        readOnly: true
    title: 'Next ID: 16'
  gatewayNodePoolBinding:
    type: object
    properties:
      accountId:
        type: string
        description: The account ID that this binding is associated with.
        readOnly: true
      clusterId:
        type: string
        description: The cluster ID that this binding is associated with.
        readOnly: true
      nodePoolId:
        type: string
        description: The node pool ID that this binding is associated with.
        readOnly: true
      createTime:
        type: string
        format: date-time
        description: The creation time of the node pool binding.
        readOnly: true
      principal:
        type: string
        description: 'The principal that is allowed use the node pool. This must be

          the email address of the user.'
    required:
    - principal
  gatewayNodePoolState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - CREATING
    - READY
    - DELETING
    - FAILED
    default: STATE_UNSPECIFIED
    description: " - CREATING: The cluster is still being created.\n - READY: The\
      \ node pool is ready to be used.\n - DELETING: The node pool is being deleted.\n\
      \ - FAILED: Node pool is not operational.\nConsult 'status' for detailed messaging.\n\
      Node pool needs to be deleted and re-created."
  gatewayNodePoolStats:
    type: object
    properties:
      nodeCount:
        type: integer
        format: int32
        description: The number of nodes currently available in this pool.
      ranksPerNode:
        type: integer
        format: int32
        description: 'The number of ranks available per node. This is determined by
          the machine

          type of the nodes in this node pool.'
      environmentCount:
        type: integer
        format: int32
        description: The number of environments connected to this node pool.
      environmentRanks:
        type: integer
        format: int32
        description: 'The number of ranks in this node pool that are currently allocated

          to environment connections.'
      batchJobCount:
        type: object
        additionalProperties:
          type: integer
          format: int32
        description: 'The key is the string representation of BatchJob.State (e.g.
          "RUNNING").

          The value is the number of batch jobs in that state allocated to this

          node pool.'
      batchJobRanks:
        type: object
        additionalProperties:
          type: integer
          format: int32
        description: 'The key is the string representation of BatchJob.State (e.g.
          "RUNNING").

          The value is the number of ranks allocated to batch jobs in that state in

          this node pool.'
    title: 'Next ID: 7'
  gatewayNotebookExecutor:
    type: object
    properties:
      notebookFilename:
        type: string
        description: Path to a notebook file to be executed.
    description: Execute a notebook file.
    required:
    - notebookFilename
  gatewayPEFTDetails:
    type: object
    properties:
      baseModel:
        type: string
        title: The base model name. e.g. accounts/fireworks/models/falcon-7b
      r:
        type: integer
        format: int32
        description: 'The rank of the update matrices.

          Must be between 4 and 64, inclusive.'
      targetModules:
        type: array
        items:
          type: string
        title: 'This is the target modules for an adapter that we extract from

          for more information what target module means, check out

          https://huggingface.co/docs/peft/conceptual_guides/lora#common-lora-parameters-in-peft'
      baseModelType:
        type: string
        description: The type of the model.
        readOnly: true
      mergeAddonModelName:
        type: string
        title: The resource name of the model to merge with base model, e.g accounts/fireworks/models/falcon-7b-lora
    title: 'PEFT addon details.

      Next ID: 6'
    required:
    - baseModel
    - r
    - targetModules
  gatewayPeftMergeJob:
    type: object
    properties:
      name:
        type: string
        readOnly: true
      displayName:
        type: string
      createTime:
        type: string
        format: date-time
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who created this peft merge job.
        readOnly: true
      state:
        $ref: '#/definitions/gatewayJobState'
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        readOnly: true
      peftModel:
        type: string
      mergedModel:
        type: string
      updateTime:
        type: string
        format: date-time
        description: The update time for the peft merge job.
        readOnly: true
    title: 'Next ID: 12'
    required:
    - peftModel
    - mergedModel
  gatewayPreviewDatasetResponse:
    type: object
    properties:
      examples:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayExample'
        description: The list of examples in the dataset for the requested page.
      nextPageToken:
        type: string
        description: 'A token, which can be sent as `page_token` to retrieve the next
          page.

          If this field is omitted, there are no subsequent pages.'
      totalCount:
        type: integer
        format: int32
        description: The total number of examples in the dataset.
  gatewayPreviewEvaluationResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayPreviewEvaluationResult'
        title: Results for each sample
      totalSamples:
        type: integer
        format: int32
        title: Summary statistics
      totalRuntimeMs:
        type: string
        format: int64
        title: overalll runtime
    title: Response for preview evaluation
  gatewayPreviewEvaluationResult:
    type: object
    properties:
      success:
        type: boolean
        title: The input sample
      reason:
        type: string
        title: Output from the evaluation run
      score:
        type: number
        format: double
        description: 'Score (if applicable)

          Deprecated: Use metrics field instead.'
      messages:
        type: array
        items:
          type: object
        title: messages, which can be any kind of object
      metrics:
        type: object
        additionalProperties:
          type: number
          format: double
        title: Metrics from the evaluation run
    title: A single evaluation result from a preview
  gatewayPreviewEvaluatorResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayPreviewEvaluatorSampleResult'
      totalSamples:
        type: integer
        format: int32
      totalRuntimeMs:
        type: string
        format: int64
  gatewayPreviewEvaluatorSampleResult:
    type: object
    properties:
      success:
        type: boolean
        title: Overall success or failure
      score:
        type: number
        format: double
        title: Score (rollup score if applicable)
      perMetricEvals:
        type: object
        additionalProperties:
          type: object
        title: Per metric eval results
  gatewayProvider:
    type: object
    properties:
      id:
        type: string
        title: Provider ID (e.g., "openai:gpt-4")
      config:
        type: object
        additionalProperties:
          type: string
        title: Optional provider-specific configuration
      label:
        type: string
        title: Optional label for the provider
    title: Represents an LLM provider
  gatewayPythonExecutor:
    type: object
    properties:
      targetType:
        $ref: '#/definitions/PythonExecutorTargetType'
        description: The type of Python target to run.
      target:
        type: string
        description: A Python module or filename depending on TargetType.
      args:
        type: array
        items:
          type: string
        description: Command line arguments to pass to the Python process.
    description: Execute a Python process.
    required:
    - targetType
    - target
  gatewayQuota:
    type: object
    properties:
      name:
        type: string
        title: The resource name of the quota, e.g. accounts/my-account/quotas/h100-us-iowa-1
        readOnly: true
      value:
        type: string
        format: int64
        description: 'The value of the quota being enforced. This may be lower than
          the max_value

          if the user manually lowers it.'
      maxValue:
        type: string
        format: int64
        description: The maximum approved value.
      updateTime:
        type: string
        format: date-time
        description: The update time for the quota.
        readOnly: true
    title: 'Next ID: 6'
  gatewayRegion:
    type: string
    enum:
    - REGION_UNSPECIFIED
    - US_IOWA_1
    - US_VIRGINIA_1
    - US_VIRGINIA_2
    - US_ILLINOIS_1
    - AP_TOKYO_1
    - EU_LONDON_1
    - US_ARIZONA_1
    - US_TEXAS_1
    - US_ILLINOIS_2
    - EU_FRANKFURT_1
    - US_TEXAS_2
    - EU_PARIS_1
    - EU_HELSINKI_1
    - US_NEVADA_1
    - EU_ICELAND_1
    - EU_ICELAND_2
    default: REGION_UNSPECIFIED
    title: "- US_IOWA_1: GCP us-central1 (Iowa)\n - US_VIRGINIA_1: AWS us-east-1 (N.\
      \ Virginia)\n - US_VIRGINIA_2: OCI us-ashburn-1\n - US_ILLINOIS_1: OCI us-chicago-1\n\
      \ - AP_TOKYO_1: OCI ap-tokyo-1\n - EU_LONDON_1: OCI uk-london-1\n - US_ARIZONA_1:\
      \ OCI us-phoenix-1\n - US_TEXAS_1: Lambda us-south-3 (C. Texas)\n - US_ILLINOIS_2:\
      \ Lambda us-midwest-1 (Illinois)\n - EU_FRANKFURT_1: OCI eu-frankfurt-1\n -\
      \ US_TEXAS_2: Lambda us-south-2 (N. Texas)\n - EU_PARIS_1: Nebius eu-west1\n\
      \ - EU_HELSINKI_1: Nebius eu-north1\n - US_NEVADA_1: GCP us-west4\n - EU_ICELAND_1:\
      \ Crusoe eu-iceland1\n - EU_ICELAND_2: Crusoe eu-iceland1 (network1)"
  gatewayReinforcementFineTuningEpoch:
    type: object
    properties:
      name:
        type: string
        readOnly: true
      createTime:
        type: string
        format: date-time
        readOnly: true
      completedTime:
        type: string
        format: date-time
        readOnly: true
      dataset:
        type: string
        description: The name of the dataset used for training.
      evaluationDataset:
        type: string
        description: The name of a separate dataset to use for evaluation.
      evalAutoCarveout:
        type: boolean
        description: Whether to auto-carve the dataset for eval.
      state:
        $ref: '#/definitions/gatewayJobState'
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who initiated this fine-tuning
          job.
        readOnly: true
      updateTime:
        type: string
        format: date-time
        description: The update time for the reinforcement fine-tuning epoch.
        readOnly: true
      trainingConfig:
        $ref: '#/definitions/gatewayBaseTrainingConfig'
        description: Common training configurations.
      evaluator:
        type: string
        description: The evaluator resource name to use for RLOR epoch.
      wandbConfig:
        $ref: '#/definitions/gatewayWandbConfig'
        description: The Weights & Biases team/user account for logging training progress.
    title: 'Next ID: 14'
    required:
    - dataset
    - evaluator
  gatewayReinforcementFineTuningJob:
    type: object
    properties:
      name:
        type: string
        readOnly: true
      displayName:
        type: string
      createTime:
        type: string
        format: date-time
        readOnly: true
      completedTime:
        type: string
        format: date-time
        description: The completed time for the reinforcement fine-tuning job.
        readOnly: true
      dataset:
        type: string
        description: The name of the dataset used for training.
      evaluationDataset:
        type: string
        description: The name of a separate dataset to use for evaluation.
      evalAutoCarveout:
        type: boolean
        description: Whether to auto-carve the dataset for eval.
      state:
        $ref: '#/definitions/gatewayJobState'
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who initiated this fine-tuning
          job.
        readOnly: true
      trainingConfig:
        $ref: '#/definitions/gatewayBaseTrainingConfig'
        description: Common training configurations.
      evaluator:
        type: string
        description: The evaluator resource name to use for RLOR fine-tuning job.
      episodes:
        type: integer
        format: int32
        description: The number of episodes to train for.
      wandbConfig:
        $ref: '#/definitions/gatewayWandbConfig'
        description: The Weights & Biases team/user account for logging training progress.
    title: 'Next ID: 15'
    required:
    - dataset
    - evaluator
  gatewayReservation:
    type: object
    properties:
      name:
        type: string
        title: The resource name of the reservation. e.g. accounts/my-account/reservations/abcdef
        readOnly: true
      displayName:
        type: string
        description: 'Human-readable display name of the reservation. e.g. "My Reservation"

          Must be fewer than 64 characters long.'
      description:
        type: string
        description: Description of the reservation.
      createTime:
        type: string
        format: date-time
        description: The creation time of the reservation.
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who created this reservation.
        readOnly: true
      region:
        $ref: '#/definitions/gatewayRegion'
        description: The region for this reservation.
      acceleratorType:
        $ref: '#/definitions/gatewayAcceleratorType'
        description: The type of accelerator for this reservation.
      reservedCount:
        type: integer
        format: int32
        description: The number of accelerators reserved.
      startTime:
        type: string
        format: date-time
        description: 'The timestamp at which the reservation starts (inclusive).

          If unspecified, this is midnight of the following calendar day (UTC).'
      endTime:
        type: string
        format: date-time
        description: 'The timestamp at which the reservation ends (exclusive).

          If unspecified, this will be 1 calendar year after the start time.'
      updateTime:
        type: string
        format: date-time
        description: The update time for the reservation.
        readOnly: true
    title: 'Next ID: 15'
    required:
    - region
    - acceleratorType
    - reservedCount
  gatewayRlorTrainerJob:
    type: object
    properties:
      name:
        type: string
        readOnly: true
      displayName:
        type: string
      createTime:
        type: string
        format: date-time
        readOnly: true
      completedTime:
        type: string
        format: date-time
        readOnly: true
      dataset:
        type: string
        description: The name of the dataset used for training.
      evaluationDataset:
        type: string
        description: The name of a separate dataset to use for evaluation.
      evalAutoCarveout:
        type: boolean
        description: Whether to auto-carve the dataset for eval.
      state:
        $ref: '#/definitions/gatewayJobState'
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who initiated this fine-tuning
          job.
        readOnly: true
      trainingConfig:
        $ref: '#/definitions/gatewayBaseTrainingConfig'
        description: Common training configurations.
      rewardWeights:
        type: array
        items:
          type: string
        description: A list of reward metrics to use for training in format of "<reward_name>=<weight>".
      wandbConfig:
        $ref: '#/definitions/gatewayWandbConfig'
        description: The Weights & Biases team/user account for logging training progress.
    title: 'Next ID: 14'
    required:
    - dataset
    - rewardWeights
  gatewayRollupSettings:
    type: object
    properties:
      criteriaWeights:
        type: object
        additionalProperties:
          type: number
          format: float
        title: from criteria name to weights in rollup score
      pythonCode:
        type: string
        title: Python code for rollup score calculation, if this is provided, the
          criteria_weights will be ignored
      successThreshold:
        type: number
        format: float
        title: rollup score's threshold for success/failure
  gatewaySecret:
    type: object
    properties:
      name:
        type: string
        title: 'name follows the convention

          accounts/account-id/secrets/unkey-key-id'
      keyName:
        type: string
        title: name of the key. In this case, it can be WOLFRAM_ALPHA_API_KEY
      value:
        type: string
    required:
    - name
    - keyName
  gatewayShellExecutor:
    type: object
    properties:
      command:
        type: string
        title: Command we want to run for the shell script
    description: Execute a shell script.
    required:
    - command
  gatewaySnapshot:
    type: object
    properties:
      name:
        type: string
        title: 'The resource name of the snapshot.

          e.g. accounts/my-account/clusters/my-cluster/environments/my-env/snapshots/1'
        readOnly: true
      createTime:
        type: string
        format: date-time
        description: The creation time of the snapshot.
        readOnly: true
      state:
        $ref: '#/definitions/gatewaySnapshotState'
        description: The state of the snapshot.
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        description: The status code and message of the snapshot.
        readOnly: true
      imageRef:
        type: string
        description: The URI of the container image for this snapshot.
        readOnly: true
      updateTime:
        type: string
        format: date-time
        description: The update time for the snapshot.
        readOnly: true
    title: 'Next ID: 7'
  gatewaySnapshotState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - CREATING
    - READY
    - FAILED
    - DELETING
    default: STATE_UNSPECIFIED
  gatewayStatus:
    type: object
    properties:
      code:
        $ref: '#/definitions/gatewayCode'
        description: The status code.
      message:
        type: string
        description: A developer-facing error message in English.
    title: Mimics [https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto]
  gatewaySupervisedFineTuningJob:
    type: object
    properties:
      name:
        type: string
        readOnly: true
      displayName:
        type: string
      createTime:
        type: string
        format: date-time
        readOnly: true
      completedTime:
        type: string
        format: date-time
        readOnly: true
      dataset:
        type: string
        description: The name of the dataset used for training.
      state:
        $ref: '#/definitions/gatewayJobState'
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        readOnly: true
      createdBy:
        type: string
        description: The email address of the user who initiated this fine-tuning
          job.
        readOnly: true
      outputModel:
        type: string
        description: The model ID to be assigned to the resulting fine-tuned model.
          If not specified, the job ID will be used.
      baseModel:
        type: string
        description: 'The name of the base model to be fine-tuned

          Only one of ''base_model'' or ''warm_start_from'' should be specified.'
      warmStartFrom:
        type: string
        description: 'The PEFT addon model in Fireworks format to be fine-tuned from

          Only one of ''base_model'' or ''warm_start_from'' should be specified.'
      jinjaTemplate:
        type: string
        title: The Jinja template for conversation formatting. If not specified, defaults
          to the base model's conversation template configuration
      earlyStop:
        type: boolean
        description: Whether to stop training early if the validation loss does not
          improve.
      epochs:
        type: integer
        format: int32
        description: The number of epochs to train for.
      learningRate:
        type: number
        format: float
        description: The learning rate used for training.
      maxContextLength:
        type: integer
        format: int32
        description: The maximum context length to use with the model.
      loraRank:
        type: integer
        format: int32
        description: The rank of the LoRA layers.
      wandbConfig:
        $ref: '#/definitions/gatewayWandbConfig'
        description: The Weights & Biases team/user account for logging training progress.
      evaluationDataset:
        type: string
        description: The name of a separate dataset to use for evaluation.
      isTurbo:
        type: boolean
        description: Whether to run the fine-tuning job in turbo mode.
      evalAutoCarveout:
        type: boolean
        description: Whether to auto-carve the dataset for eval.
      region:
        $ref: '#/definitions/gatewayRegion'
        description: The region where the fine-tuning job is located.
      updateTime:
        type: string
        format: date-time
        description: The update time for the supervised fine-tuning job.
        readOnly: true
      nodes:
        type: integer
        format: int32
        description: The number of nodes to use for the fine-tuning job.
      batchSize:
        type: integer
        format: int32
        title: The batch size for sequence packing in training
    title: 'Next ID: 29'
    required:
    - dataset
  gatewayTEFTDetails:
    type: object
  gatewayTransformed:
    type: object
    properties:
      sourceDatasetId:
        type: string
      filter:
        type: string
      originalFormat:
        $ref: '#/definitions/DatasetFormat'
    required:
    - sourceDatasetId
  gatewayUploadDatasetResponse:
    type: object
    properties:
      filenameToSignedUrls:
        type: object
        additionalProperties:
          type: string
        title: Signed URLs for uploading dataset files
  gatewayUsage:
    type: object
    properties:
      totalGpuUsage:
        type: string
        format: int64
        description: The total GPU usage of the training.
  gatewayUser:
    type: object
    properties:
      name:
        type: string
        title: The resource name of the user. e.g. accounts/my-account/users/my-user
        readOnly: true
      displayName:
        type: string
        description: 'Human-readable display name of the user. e.g. "Alice"

          Must be fewer than 64 characters long.'
      createTime:
        type: string
        format: date-time
        description: The creation time of the user.
        readOnly: true
      role:
        type: string
        description: The user's role, e.g. admin or user.
      email:
        type: string
        description: The user's email address.
      state:
        $ref: '#/definitions/gatewayUserState'
        description: The state of the user.
        readOnly: true
      status:
        $ref: '#/definitions/gatewayStatus'
        description: Contains information about the user status.
        readOnly: true
      updateTime:
        type: string
        format: date-time
        description: The update time for the user.
        readOnly: true
    title: 'Next ID: 12'
    required:
    - role
    - email
  gatewayUserState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - CREATING
    - READY
    - UPDATING
    - DELETING
    default: STATE_UNSPECIFIED
  gatewayUserUploaded:
    type: object
  gatewayValidateAssertionsResponse:
    type: object
    properties:
      status:
        type: string
      metricToErrors:
        type: object
        additionalProperties:
          $ref: '#/definitions/ValidateAssertionsResponseValidateAssertionError'
    title: 'Response for validating assertions. The metric_to_errors contains all
      metrics from request,

      and the error_messages contains all errors for the metric code. (could be empty
      which means no errors)'
  gatewayValidateModelConfigRequest:
    type: object
    properties:
      configJson:
        type: string
        description: The config JSON of the model.
      tokenizerConfigJson:
        type: string
        description: The tokenizer config JSON of the model.
    required:
    - configJson
  gatewayWandbConfig:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether to enable wandb logging.
      apiKey:
        type: string
        description: The API key for the wandb service.
      project:
        type: string
        description: The project name for the wandb service.
      entity:
        type: string
        description: The entity name for the wandb service.
      runId:
        type: string
        description: The run ID for the wandb service.
      url:
        type: string
        description: The URL for the wandb service.
        readOnly: true
    description: 'WandbConfig is the configuration for the Weights & Biases (wandb)
      logging which

      will be used by a training job.'
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
        description: 'The status code, which should be an enum value of

          [google.rpc.Code][google.rpc.Code].'
      message:
        type: string
        description: 'A developer-facing error message, which should be in English.
          Any

          user-facing error message should be localized and sent in the

          [google.rpc.Status.details][google.rpc.Status.details] field, or localized

          by the client.'
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
        description: 'A list of messages that carry the error details.  There is a
          common set of

          message types for APIs to use.'
    description: 'The `Status` type defines a logical error model that is suitable
      for

      different programming environments, including REST APIs and RPC APIs. It is

      used by [gRPC](https://github.com/grpc). Each `Status` message contains

      three pieces of data: error code, error message, and error details.


      You can find out more about this error model and how to work with it in the

      [API Design Guide](https://cloud.google.com/apis/design/errors).'
  longrunningOperation:
    type: object
    properties:
      name:
        type: string
        description: 'The server-assigned name, which is only unique within the same
          service that

          originally returns it. If you use the default HTTP mapping, the

          `name` should be a resource name ending with `operations/{unique_id}`.'
      metadata:
        $ref: '#/definitions/protobufAny'
        description: 'Service-specific metadata associated with the operation. It
          typically

          contains progress information and common metadata such as create time.

          Some services might not provide such metadata. Any method that returns a

          long-running operation should document the metadata type, if any.'
      done:
        type: boolean
        description: 'If the value is `false`, it means the operation is still in
          progress.

          If `true`, the operation is completed, and either `error` or `response`
          is

          available.'
      error:
        $ref: '#/definitions/googlerpcStatus'
        description: The error result of the operation in case of failure or cancellation.
      response:
        $ref: '#/definitions/protobufAny'
        description: 'The normal, successful response of the operation. If the original

          method returns no data on success, such as `Delete`, the response is

          `google.protobuf.Empty`. If the original method is standard

          `Get`/`Create`/`Update`, the response should be the resource. For other

          methods, the response should have the type `XxxResponse`, where `Xxx`

          is the original method name. For example, if the original method name

          is `TakeSnapshot()`, the inferred response type is

          `TakeSnapshotResponse`.'
    description: 'This resource represents a long-running operation that is the result
      of a

      network API call.'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
        description: "A URL/resource name that uniquely identifies the type of the\
          \ serialized\nprotocol buffer message. This string must contain at least\n\
          one \"/\" character. The last segment of the URL's path must represent\n\
          the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
          \ The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\
          \nIn practice, teams usually precompile into the binary all types that they\n\
          expect it to use in the context of Any. However, for URLs which use the\n\
          scheme `http`, `https`, or no scheme, one can optionally set up a type\n\
          server that maps type URLs to message definitions as follows:\n\n* If no\
          \ scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must\
          \ yield a [google.protobuf.Type][]\n  value in binary format, or produce\
          \ an error.\n* Applications are allowed to cache lookup results based on\
          \ the\n  URL, or have them precompiled into a binary to avoid any\n  lookup.\
          \ Therefore, binary compatibility needs to be preserved\n  on changes to\
          \ types. (Use versioned type names to manage\n  breaking changes.)\n\nNote:\
          \ this functionality is not currently available in the official\nprotobuf\
          \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
          \nSchemes other than `http`, `https` (or the empty scheme) might be\nused\
          \ with implementation specific semantics."
    additionalProperties: {}
    description: "`Any` contains an arbitrary serialized protocol buffer message along\
      \ with a\nURL that describes the type of the serialized message.\n\nProtobuf\
      \ library provides support to pack/unpack Any values in the form\nof utility\
      \ functions or additional generated methods of the Any type.\n\nExample 1: Pack\
      \ and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
      \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack\
      \ and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
      \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
      \    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
      \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
      \      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in\
      \ Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err\
      \ != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err\
      \ := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods\
      \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
      \ as the type URL and the unpack\nmethods only use the fully qualified type\
      \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
      \ will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an\
      \ `Any` value uses the regular\nrepresentation of the deserialized, embedded\
      \ message, with an\nadditional field `@type` which contains the type URL. Example:\n\
      \n    package google.profile;\n    message Person {\n      string first_name\
      \ = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
      ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf\
      \ the embedded message type is well-known and has a custom JSON\nrepresentation,\
      \ that representation will be embedded adding a field\n`value` which holds the\
      \ custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
      \n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n\
      \      \"value\": \"1.212s\"\n    }"
  protobufNullValue:
    type: string
    enum:
    - NULL_VALUE
    default: NULL_VALUE
    description: "`NullValue` is a singleton enumeration to represent the null value\
      \ for the\n`Value` type union.\n\n The JSON representation for `NullValue` is\
      \ JSON `null`.\n\n - NULL_VALUE: Null value."
  typeDate:
    type: object
    properties:
      year:
        type: integer
        format: int32
        description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a
          date without

          a year.'
      month:
        type: integer
        format: int32
        description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year
          without a

          month and day.'
      day:
        type: integer
        format: int32
        description: 'Day of a month. Must be from 1 to 31 and valid for the year
          and month, or 0

          to specify a year by itself or a year and month where the day isn''t

          significant.'
    description: '* A full date, with non-zero year, month, and day values

      * A month and day value, with a zero year, such as an anniversary

      * A year on its own, with zero month and day values

      * A year and month value, with a zero day, such as a credit card expiration

      date


      Related types are [google.type.TimeOfDay][google.type.TimeOfDay] and

      `google.protobuf.Timestamp`.'
    title: 'Represents a whole or partial calendar date, such as a birthday. The time
      of

      day and time zone are either specified elsewhere or are insignificant. The

      date is relative to the Gregorian Calendar. This can represent one of the

      following:'
  typeMoney:
    type: object
    properties:
      currencyCode:
        type: string
        description: The three-letter currency code defined in ISO 4217.
      units:
        type: string
        format: int64
        description: 'The whole units of the amount.

          For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.'
      nanos:
        type: integer
        format: int32
        description: 'Number of nano (10^-9) units of the amount.

          The value must be between -999,999,999 and +999,999,999 inclusive.

          If `units` is positive, `nanos` must be positive or zero.

          If `units` is zero, `nanos` can be positive, zero, or negative.

          If `units` is negative, `nanos` must be negative or zero.

          For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.'
    description: Represents an amount of money with its currency type.
security:
- BearerAuth: []
securityDefinitions:
  BearerAuth:
    type: http
    scheme: bearer
host: api.fireworks.ai
schemes:
- https
