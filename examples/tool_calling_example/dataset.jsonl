{"tools": [{"type": "function", "function": {"name": "get_car_specs", "description": "Fetches detailed specifications for a car based on the given trim ID.", "parameters": {"trimid": {"description": "The trim ID of the car for which to retrieve specifications.", "type": "int", "default": ""}}}}, {"type": "function", "function": {"name": "get_country_by_fifa_code", "description": "Gets information about a country using its FIFA assigned country code from the Geography API.", "parameters": {"fifacode": {"description": "The FIFA assigned country code.", "type": "str", "default": "USA"}, "fields": {"description": "A comma-separated list of fields to filter the response. Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "world_coordinate_to_income", "description": "Fetches per capita income data for a given set of geographic coordinates (longitude and latitude) using the provided API key.", "parameters": {"lon": {"description": "Longitude of the geographic coordinate.", "type": "int", "default": "0"}, "lat": {"description": "Latitude of the geographic coordinate.", "type": "int", "default": "0"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "world_coordinate_to_income", "arguments": "{\"lon\": -74, \"lat\": 40.7}"}}, {"type": "function", "function": {"name": "world_coordinate_to_income", "arguments": "{\"lon\": 139.7, \"lat\": 35.7}"}}]}, "messages": [{"role": "user", "content": "What is the per capita income in New York City and Tokyo?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "world_coordinate_to_income", "arguments": "{\"lon\": -74, \"lat\": 40.7}"}}, {"type": "function", "function": {"name": "world_coordinate_to_income", "arguments": "{\"lon\": 139.7, \"lat\": 35.7}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "actors_list_born_today", "description": "Fetches a list of actors and actresses born on a specific day and month from the Online Movie Database via the RapidAPI platform.", "parameters": {"month": {"description": "The month of birth of the actors.", "type": "int", "default": "7"}, "day": {"description": "The day of birth of the actors.", "type": "int", "default": "27"}}}}, {"type": "function", "function": {"name": "v1_latest_headlines", "description": "Fetches the latest 100 headlines based on specified language, topic, and/or country, and optionally includes media information.", "parameters": {"lang": {"description": "Specifies the language of the search. Allowed values include 'af', 'ar', 'bg', 'bn', 'ca', 'cn', 'cs', 'cy', 'da', 'de', 'el', 'en', 'es', 'et', 'fa', 'fi', 'fr', 'gu', 'he', 'hi', 'hr', 'hu', 'id', 'it', 'ja', 'kn', 'ko', 'lt', 'lv', 'mk', 'ml', 'mr', 'ne', 'nl', 'no', 'pa', 'pl', 'pt', 'ro', 'ru', 'sk', 'sl', 'so', 'sq', 'sv', 'sw', 'ta', 'te', 'th', 'tl', 'tr', 'tw', 'uk', 'ur', 'vi'. Defaults to 'en'.", "type": "str", "default": "en"}, "topic": {"description": "The topic to which you want to restrict the articles. Accepted values are 'news', 'sport', 'tech', 'world', 'finance', 'politics', 'business', 'economics', 'entertainment', 'beauty', 'travel', 'music', 'food', 'science'. This parameter is experimental and not all articles may have a topic assigned.", "type": "str", "default": ""}, "country": {"description": "The country to which you want to narrow your search, specified using ISO 3166-1 alpha-2 codes. This parameter is experimental and is best used in conjunction with the 'lang' parameter.", "type": "str", "default": ""}, "media": {"description": "If set to 'True', adds additional media information to the output, including the main image and a comma-separated string of all images used in an article. Defaults to 'True'.", "type": "str", "default": "True"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "actors_list_born_today", "arguments": "{\"month\": 10, \"day\": 31}"}}]}, "messages": [{"role": "user", "content": "List actors born on October 31st."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "actors_list_born_today", "arguments": "{\"month\": 10, \"day\": 31}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "image_stable_prompter", "description": "Generates a prompt for stable diffusion using an image URL via the Toolbench RapidAPI.", "parameters": {"url": {"description": "The full path of the image URL to be processed. Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "getresult", "description": "Retrieves the result of a previously requested video rendering job using the given job ID.", "parameters": {"job_id": {"description": "The ID of the previously requested rendering job.", "type": "str", "default": ""}}}}, {"type": "function", "function": {"name": "search", "description": "Search the Icons8 repository for icons based on various parameters.", "parameters": {"term": {"description": "The term to search for within the Icons8 repository.", "type": "str", "default": "apple"}, "size": {"description": "The size of the icons in pixels. Defaults to 64.", "type": "int, optional", "default": "64"}, "limit": {"description": "The maximum number of results to return. Defaults to 20.", "type": "int, optional", "default": "20"}, "color": {"description": "The color of the icons in hexadecimal format. Defaults to 'ff0000'.", "type": "str, optional", "default": "ff0000"}, "offset": {"description": "The number of results to skip before starting to collect the output. Defaults to 0.", "type": "int, optional", "default": "0"}}}}, {"type": "function", "function": {"name": "random_mlem", "description": "Fetches one random mlem image in JSON format based on the given optional parameters.", "parameters": {"brightness": {"description": "Image brightness, can be 'dark' or 'bright'.", "type": "str, optional", "default": ""}, "maxheight": {"description": "Maximum height of the image.", "type": "int, optional", "default": ""}, "minwidth": {"description": "Minimum width of the image.", "type": "int, optional", "default": ""}, "minheight": {"description": "Minimum height of the image.", "type": "int, optional", "default": ""}, "tag": {"description": "Tag to filter the mlem images.", "type": "str, optional", "default": ""}, "maxwidth": {"description": "Maximum width of the image.", "type": "int, optional", "default": ""}, "orientation": {"description": "Orientation of the image, can be 'square', 'landscape', or 'portrait'.", "type": "str, optional", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "random_mlem", "arguments": "{\"brightness\": \"bright\", \"orientation\": \"landscape\"}"}}]}, "messages": [{"role": "user", "content": "Fetch a random mlem image with a bright brightness and a landscape orientation."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "random_mlem", "arguments": "{\"brightness\": \"bright\", \"orientation\": \"landscape\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "convert_cooking_measurements", "description": "Converts a quantity of a cooking ingredient from one measurement unit to another.", "parameters": {"quantity": {"description": "The quantity of the item to convert.", "type": "float"}, "from_unit": {"description": "The unit of the input quantity (e.g., 'cup', 'gram').", "type": "str"}, "to_unit": {"description": "The unit to which the quantity should be converted (e.g., 'ounce', 'kilogram').", "type": "str"}, "item": {"description": "The cooking ingredient being converted (e.g., 'flour', 'sugar').", "type": "str"}}}}, {"type": "function", "function": {"name": "find_equilibrium_index", "description": "Finds the equilibrium index of a list, where the sum of elements on the left is equal to the sum of elements on the right.", "parameters": {"arr": {"description": "The input list of integers.", "type": "List[int]"}}}}, {"type": "function", "function": {"name": "note_duration", "description": "Calculates the duration between two musical notes based on their frequencies and the tempo.", "parameters": {"freq1": {"description": "The frequency of the first note in Hz.", "type": "int", "default": 120}, "freq2": {"description": "The frequency of the second note in Hz.", "type": "int", "default": 120}, "bpm": {"description": "The tempo of the music in beats per minute. Defaults to 120.", "type": "int, optional"}}}}, {"type": "function", "function": {"name": "triangle_area", "description": "Computes the area of a triangle given its base and height.", "parameters": {"base": {"description": "The length of the base of the triangle.", "type": "float"}, "height": {"description": "The height of the triangle.", "type": "float"}}}}, {"type": "function", "function": {"name": "linear_regression_prediction", "description": "Predicts the y-value for a given x-value using linear regression.", "parameters": {"x_values": {"description": "The x-coordinates of the data points.", "type": "List[float]"}, "y_values": {"description": "The y-coordinates of the data points.", "type": "List[float]"}, "target_x": {"description": "The x-value for which to predict the y-value.", "type": "float"}}}}, {"type": "function", "function": {"name": "solve_quadratic", "description": "Computes the roots of a quadratic equation given its coefficients.", "parameters": {"a": {"description": "The coefficient of the quadratic term (x^2).", "type": "float"}, "b": {"description": "The coefficient of the linear term (x).", "type": "float"}, "c": {"description": "The constant term.", "type": "float"}}}}, {"type": "function", "function": {"name": "neuronal_activity_rate", "description": "Calculates the neuronal activity rate based on the synaptic input rate, synaptic weight, and decay constant.", "parameters": {"synaptic_input_rate": {"description": "The rate of synaptic inputs per second.", "type": "int", "default": 1.0}, "synaptic_weight": {"description": "The weight of the synaptic input, denoting its influence. Defaults to 1.0.", "type": "float, optional", "default": 0.1}, "decay_constant": {"description": "The rate at which the neuron's potential decays. Defaults to 0.1.", "type": "float, optional", "default": 1.0}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "convert_cooking_measurements", "arguments": "{\"quantity\": 2, \"from_unit\": \"cup\", \"to_unit\": \"gram\", \"item\": \"flour\"}"}}]}, "messages": [{"role": "user", "content": "Convert 2 cups of flour to grams."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "convert_cooking_measurements", "arguments": "{\"quantity\": 2, \"from_unit\": \"cup\", \"to_unit\": \"gram\", \"item\": \"flour\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "compound_interest", "description": "Calculates the compound interest of an investment.", "parameters": {"principal": {"description": "The initial investment amount.", "type": "float", "default": 1}, "rate": {"description": "The annual interest rate expressed as a decimal.", "type": "float", "default": 1}, "time": {"description": "The time in years for which the investment is held.", "type": "float"}, "n": {"description": "The number of times interest is compounded per year. Defaults to 1.", "type": "int, optional"}}}}, {"type": "function", "function": {"name": "wire_resistance", "description": "Calculates the resistance of a wire based on its length, cross-sectional area, and material resistivity.", "parameters": {"length_m": {"description": "The length of the wire in meters.", "type": "int", "default": "copper"}, "area_sq_m": {"description": "The cross-sectional area of the wire in square meters.", "type": "float", "default": "copper"}, "material": {"description": "The material of the wire. Allowed values: \"copper\" (default) or \"aluminum\".", "type": "str, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "compound_interest", "arguments": "{\"principal\": 1000, \"rate\": 0.05, \"time\": 5}"}}]}, "messages": [{"role": "user", "content": "What is the final amount after 5 years for an initial investment of $1000 at an annual interest rate of 5% compounded annually?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "compound_interest", "arguments": "{\"principal\": 1000, \"rate\": 0.05, \"time\": 5}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "category_tags", "description": "Fetch a list of tags for a given category ID using the toolbench_rapidapi key.", "parameters": {"is_id": {"description": "The category ID to fetch tags for.", "type": "str", "default": "1"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "category_tags", "arguments": "{\"is_id\": \"science567\"}"}}, {"type": "function", "function": {"name": "category_tags", "arguments": "{\"is_id\": \"education890\"}"}}]}, "messages": [{"role": "user", "content": "Retrieve tag information for 'science567' and 'education890'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "category_tags", "arguments": "{\"is_id\": \"science567\"}"}}, {"type": "function", "function": {"name": "category_tags", "arguments": "{\"is_id\": \"education890\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_gifs_by_id", "description": "Fetches multiple GIF details from Giphy by their IDs.", "parameters": {"ids": {"description": "A comma-separated string of GIF IDs.", "type": "str", "default": "feqkVgjJpYtjy,7rzbxdu0ZEXLy"}}}}, {"type": "function", "function": {"name": "get_channel_goals", "description": "Fetches the goals for a specified Twitch channel using the provided RapidAPI key.", "parameters": {"channel": {"description": "The name of the Twitch channel for which to retrieve goals.", "type": "str", "default": "shadoune666"}}}}, {"type": "function", "function": {"name": "go", "description": "Convert textual content to .mp3 using a text-to-speech API.", "parameters": {"t": {"description": "The text content to be converted to speech.", "type": "str", "default": "Here is a text to be converted."}, "l": {"description": "The language code for the text-to-speech conversion. Supported languages include 'ru', 'en', 'de', 'es', 'pt', 'fr', 'nl', 'zh'.", "type": "str", "default": "en"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_gifs_by_id", "arguments": "{\"ids\": \"131415\"}"}}, {"type": "function", "function": {"name": "go", "arguments": "{\"t\": \"Hallo Welt!\", \"l\": \"de\"}"}}, {"type": "function", "function": {"name": "get_channel_goals", "arguments": "{\"channel\": \"testChannel\"}"}}]}, "messages": [{"role": "user", "content": "Fetch GIF details for ID '131415'. Convert the text 'Hallo Welt!' to speech in German. Get the channel goals for Twitch channel 'testChannel'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_gifs_by_id", "arguments": "{\"ids\": \"131415\"}"}}, {"type": "function", "function": {"name": "go", "arguments": "{\"t\": \"Hallo Welt!\", \"l\": \"de\"}"}}, {"type": "function", "function": {"name": "get_channel_goals", "arguments": "{\"channel\": \"testChannel\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "search", "description": "Search for public repositories of a given GitHub user using the Toolbench RapidAPI.", "parameters": {"user": {"description": "The GitHub username whose public repositories are to be searched.", "type": "str", "default": "samuk-a"}}}}, {"type": "function", "function": {"name": "convert_hsl", "description": "Converts an HSL color code to other color codes such as Hex, RGB, and CMYK using the Convexity API.", "parameters": {"s": {"description": "The saturation component of the HSL color code.", "type": "int", "default": "78"}, "h": {"description": "The hue component of the HSL color code.", "type": "int", "default": "250"}, "l": {"description": "The lightness component of the HSL color code.", "type": "int", "default": "45"}}}}, {"type": "function", "function": {"name": "generate_uuid", "description": "Generates one or more UUID v4 strings with optional formatting.", "parameters": {"timestamp_first": {"description": "If set to True, the generated UUID will have the timestamp first.", "type": "bool, optional", "default": "false"}, "remove_dash": {"description": "If set to True, the generated UUIDs will not contain dashes.", "type": "bool, optional", "default": "true"}, "count": {"description": "The number of UUIDs to generate. Default is '5'.", "type": "str, optional", "default": "5"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "convert_hsl", "arguments": "{\"h\": 10, \"s\": 100, \"l\": 25}"}}]}, "messages": [{"role": "user", "content": "Convert an HSL color with hue 10, saturation 100, and lightness 25 to Hex, RGB, and CMYK."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "convert_hsl", "arguments": "{\"h\": 10, \"s\": 100, \"l\": 25}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "binary_search", "description": "Performs binary search on a sorted list to find the index of a target value.", "parameters": {"arr": {"description": "The sorted list of integers.", "type": "List[int]"}, "target": {"description": "The target value to search for.", "type": "int"}}}}, {"type": "function", "function": {"name": "reverse_string", "description": "Reverses the characters in a string.", "parameters": {"text": {"description": "The input string.", "type": "str"}}}}, {"type": "function", "function": {"name": "is_valid_parentheses", "description": "Checks if a string contains valid parentheses.", "parameters": {"s": {"description": "The input string.", "type": "str"}}}}, {"type": "function", "function": {"name": "find_longest_word", "description": "Finds the longest word in a list of words.", "parameters": {"words": {"description": "A list of words.", "type": "List[str]"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "reverse_string", "arguments": "{\"text\": \"hello world\"}"}}]}, "messages": [{"role": "user", "content": "What is the reversed string of 'hello world'?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "reverse_string", "arguments": "{\"text\": \"hello world\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "count_bits", "description": "Counts the number of set bits (1's) in the binary representation of a number.", "parameters": {"num": {"description": "The input number.", "type": "int"}}}}, {"type": "function", "function": {"name": "polygon_area_shoelace", "description": "Calculates the area of a polygon using the shoelace formula.", "parameters": {"vertices": {"description": "A list of polygon vertices represented as tuples (x, y).", "type": "List[Tuple[float, float]]"}}}}, {"type": "function", "function": {"name": "binary_addition", "description": "Adds two binary numbers and returns the result as a binary string.", "parameters": {"a": {"description": "The first binary number.", "type": "str"}, "b": {"description": "The second binary number.", "type": "str"}}}}, {"type": "function", "function": {"name": "matrix_multiply", "description": "Multiplies two matrices.", "parameters": {"matrix_a": {"description": "The first matrix.", "type": "List[List[float]]"}, "matrix_b": {"description": "The second matrix.", "type": "List[List[float]]"}}}}, {"type": "function", "function": {"name": "is_power", "description": "Checks if a number is a power of a given base.", "parameters": {"num": {"description": "The number to check.", "type": "int"}, "base": {"description": "The base to check against.", "type": "int"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "count_bits", "arguments": "{\"num\": 13}"}}]}, "messages": [{"role": "user", "content": "How many set bits are there in the binary representation of the number 13?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "count_bits", "arguments": "{\"num\": 13}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_trivia_fact", "description": "Fetches a trivia fact about a given number from the Numbers API.", "parameters": {"number": {"description": "The number for which to retrieve the trivia fact.", "type": "str", "default": "42"}, "fragment": {"description": "Whether to return the fact as a sentence fragment. Defaults to 'True'.", "type": "str, optional", "default": true}, "notfound": {"description": "Determines the behavior when a fact is not found for the specified number. Options are 'default', 'floor', or 'ceil'. Defaults to 'floor'.", "type": "str, optional", "default": "floor"}, "json": {"description": "Whether to return the result as JSON. Defaults to 'True'.", "type": "str, optional", "default": true}}}}, {"type": "function", "function": {"name": "school_detail", "description": "Fetch detailed information about a school using the encrypted school ID (sekolah_id_enkrip).", "parameters": {"sekolah_id_enkrip": {"description": "The encrypted ID of the school for which details are to be fetched. Default is '5DB43D89E6BFB0F76FBC'.", "type": "str", "default": "5DB43D89E6BFB0F76FBC"}}}}, {"type": "function", "function": {"name": "get_all_posts", "description": "Retrieves a paginated list of all posts from the API.", "parameters": {"per_page": {"description": "The number of posts to retrieve per page. Defaults to 10.", "type": "int, optional", "default": "10"}, "page": {"description": "The number of posts to retrieve per page. Defaults to 10.", "type": "int, optional", "default": "1"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_all_posts", "arguments": "{\"per_page\": 20, \"page\": 1}"}}, {"type": "function", "function": {"name": "get_all_posts", "arguments": "{\"per_page\": 15, \"page\": 2}"}}]}, "messages": [{"role": "user", "content": "I need to see all posts from the FluentMe API, first page with 20 posts, and then the second page with 15 posts."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_all_posts", "arguments": "{\"per_page\": 20, \"page\": 1}"}}, {"type": "function", "function": {"name": "get_all_posts", "arguments": "{\"per_page\": 15, \"page\": 2}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "note_duration", "description": "Calculates the duration between two musical notes based on their frequencies and the tempo.", "parameters": {"freq1": {"description": "The frequency of the first note in Hz.", "type": "int", "default": 120}, "freq2": {"description": "The frequency of the second note in Hz.", "type": "int", "default": 120}, "bpm": {"description": "The tempo of the music in beats per minute. Defaults to 120.", "type": "int, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "note_duration", "arguments": "{\"freq1\": 440, \"freq2\": 220, \"bpm\": 60}"}}, {"type": "function", "function": {"name": "note_duration", "arguments": "{\"freq1\": 550, \"freq2\": 330, \"bpm\": 120}"}}]}, "messages": [{"role": "user", "content": "Calculate the duration between a note with a frequency of 440 Hz and a note with a frequency of 220 Hz, given a tempo of 60 beats per minute. Then, calculate the duration between two notes with frequencies of 550 Hz and 330 Hz, given a tempo of 120 beats per minute."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "note_duration", "arguments": "{\"freq1\": 440, \"freq2\": 220, \"bpm\": 60}"}}, {"type": "function", "function": {"name": "note_duration", "arguments": "{\"freq1\": 550, \"freq2\": 330, \"bpm\": 120}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "greatest_common_divisor", "description": "Computes the greatest common divisor (GCD) of two non-negative integers.", "parameters": {"a": {"description": "The first non-negative integer.", "type": "int"}, "b": {"description": "The second non-negative integer.", "type": "int"}}}}, {"type": "function", "function": {"name": "expand_around_center", "description": "Helper function to expand around a center for finding palindromic substrings.", "parameters": {"s": {"description": "The input string.", "type": "str"}, "left": {"description": "The left index of the center.", "type": "int"}, "right": {"description": "The right index of the center.", "type": "int"}}}}, {"type": "function", "function": {"name": "count_bits", "description": "Counts the number of set bits (1's) in the binary representation of a number.", "parameters": {"num": {"description": "The input number.", "type": "int"}}}}, {"type": "function", "function": {"name": "std_deviation", "description": "Calculates the standard deviation of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[float]"}}}}, {"type": "function", "function": {"name": "calculate_median", "description": "Calculates the median of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[Union[int, float]]"}}}}, {"type": "function", "function": {"name": "linear_regression_prediction", "description": "Predicts the y-value for a given x-value using linear regression.", "parameters": {"x_values": {"description": "The x-coordinates of the data points.", "type": "List[float]"}, "y_values": {"description": "The y-coordinates of the data points.", "type": "List[float]"}, "target_x": {"description": "The x-value for which to predict the y-value.", "type": "float"}}}}, {"type": "function", "function": {"name": "find_equilibrium_index", "description": "Finds the equilibrium index of a list, where the sum of elements on the left is equal to the sum of elements on the right.", "parameters": {"arr": {"description": "The input list of integers.", "type": "List[int]"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_median", "arguments": "{\"numbers\": [3, 7, 1, 5, 9]}"}}]}, "messages": [{"role": "user", "content": "What is the median of the numbers 3, 7, 1, 5, and 9?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_median", "arguments": "{\"numbers\": [3, 7, 1, 5, 9]}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "transliterate_any_to_latin", "description": "Transliterates the given text from any language to Latin script using the RapidAPI Webit Language Transliterate API.", "parameters": {"text": {"description": "The text to be transliterated to Latin script.", "type": "str", "default": "\u3053\u3093\u306b\u3061\u306f\u3002"}}}}, {"type": "function", "function": {"name": "languages", "description": "Retrieves the set of languages currently supported by the Translator Text API.", "parameters": {"api_version": {"description": "The version of the API requested by the client. Must be '3.0'.", "type": "str", "default": "3.0"}, "accept_language": {"description": "The language to use for user interface strings, specified using a well-formed BCP 47 language tag (e.g., 'fr' for French, 'zh-Hant' for Chinese Traditional). Defaults to English if not specified or if localization is unavailable.", "type": "str, optional", "default": ""}, "x_clienttraceid": {"description": "A client-generated GUID to uniquely identify the request. Can be omitted if the trace ID is included in the query string using a parameter named ClientTraceId.", "type": "str, optional", "default": ""}, "scope": {"description": "A comma-separated list of names defining the groups of languages to return. Allowed values are 'translation', 'transliteration', and 'dictionary'. Defaults to all groups if not specified.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "get_synonyms", "description": "Fetches all synonyms for a given English word using the specified RapidAPI key.", "parameters": {"word": {"description": "The English word for which to find synonyms.", "type": "str", "default": "bourgeois"}}}}, {"type": "function", "function": {"name": "translate", "description": "Translates the given text to the specified target language using the Joj Translate API.", "parameters": {"text": {"description": "The text to be translated.", "type": "str", "default": "article"}, "target": {"description": "The language to translate the text into.", "type": "str", "default": "es"}, "source": {"description": "The source language of the text. Defaults to 'auto', which automatically detects the source language.", "type": "str, optional", "default": "auto"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "translate", "arguments": "{\"text\": \"Good morning\", \"target\": \"ja\"}"}}, {"type": "function", "function": {"name": "translate", "arguments": "{\"text\": \"Good morning\", \"target\": \"ko\"}"}}]}, "messages": [{"role": "user", "content": "Translate the phrase 'Good morning' from English to Japanese and Korean."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "translate", "arguments": "{\"text\": \"Good morning\", \"target\": \"ja\"}"}}, {"type": "function", "function": {"name": "translate", "arguments": "{\"text\": \"Good morning\", \"target\": \"ko\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "canvas_titles_get_recommend", "description": "Retrieves similar comic recommendations from the Webtoon API.", "parameters": {"titleno": {"description": "The value of the `titleNo` field returned from the `/canvas/titles/list`, `/canvas/search`, or `/canvas/home` endpoint.", "type": "int", "default": "300138"}, "language": {"description": "The language code for the response. One of the following: 'en', 'zh-hant', 'de', 'fr', 'es', 'th', 'id'. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}}, {"type": "function", "function": {"name": "playlist_details", "description": "Retrieves the details of a YouTube playlist based on the provided playlist ID using the RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the YouTube playlist to fetch details for. Default is 'PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr'.", "type": "str", "default": "PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "playlist_details", "arguments": "{\"is_id\": \"PLabcdef0123456789\"}"}}, {"type": "function", "function": {"name": "playlist_details", "arguments": "{\"is_id\": \"PL098765fedcba\"}"}}]}, "messages": [{"role": "user", "content": "Get details of YouTube playlists 'PLabcdef0123456789' and 'PL098765fedcba'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "playlist_details", "arguments": "{\"is_id\": \"PLabcdef0123456789\"}"}}, {"type": "function", "function": {"name": "playlist_details", "arguments": "{\"is_id\": \"PL098765fedcba\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "calculate_investment_return", "description": "Calculates the return on investment based on the initial deposit amount, annual interest rate, and investment period.", "parameters": {"initial_amount": {"description": "The initial deposit amount.", "type": "int"}, "interest_rate": {"description": "The annual interest rate provided by the bank.", "type": "float"}, "num_years": {"description": "The number of years the money is invested.", "type": "int"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_investment_return", "arguments": "{\"initial_amount\": 12000, \"interest_rate\": 0.04, \"num_years\": 6}"}}]}, "messages": [{"role": "user", "content": "If I invest $12000 at a 4% annual rate, how much will it grow to in 6 years?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_investment_return", "arguments": "{\"initial_amount\": 12000, \"interest_rate\": 0.04, \"num_years\": 6}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "minus_di", "description": "Fetches the Minus Directional Indicator (MINUS_DI) for a given financial instrument.", "parameters": {"symbol": {"description": "The instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').", "type": "str", "default": "AAPL"}, "interval": {"description": "The interval between two consecutive points in the time series data. Supported intervals are: '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', '1month'.", "type": "str", "default": "1min"}, "outputsize": {"description": "The number of data points to return. Defaults to 30 if no date parameters are set, otherwise set to maximum.", "type": "int, optional", "default": 30}, "time_period": {"description": "The number of periods to consider in the calculation. Defaults to 9.", "type": "int, optional", "default": 9}, "format": {"description": "The format of the data returned. Can be 'CSV' or 'JSON'. Defaults to 'json'.", "type": "str, optional", "default": "json"}}}}, {"type": "function", "function": {"name": "get_litecoin_block_hash", "description": "Fetches the hash of a Litecoin block by its index using the RapidAPI service.", "parameters": {"i": {"description": "The index of the Litecoin block.", "type": "int", "default": "23"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "minus_di", "arguments": "{\"symbol\": \"AAPL\", \"interval\": \"1h\", \"outputsize\": 30, \"time_period\": 9, \"format\": \"json\"}"}}]}, "messages": [{"role": "user", "content": "Could you provide the Minus Directional Indicator for Apple stocks over the past hour? I'm also curious about the format of the data."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "minus_di", "arguments": "{\"symbol\": \"AAPL\", \"interval\": \"1h\", \"outputsize\": 30, \"time_period\": 9, \"format\": \"json\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "is_hotel_available", "description": "Checks the availability of a hotel for a given date range.", "parameters": {"hotel": {"description": "The name of the hotel.", "type": "str"}, "city": {"description": "The city where the hotel is located.", "type": "str"}, "checkin": {"description": "The check-in date in the format \"YYYY-MM-DD\".", "type": "str"}, "checkout": {"description": "The check-out date in the format \"YYYY-MM-DD\".", "type": "str"}}}}, {"type": "function", "function": {"name": "calculate_calorie_intake", "description": "Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals.", "parameters": {"weight_kg": {"description": "Body weight in kilograms.", "type": "float"}, "height_cm": {"description": "Height in centimeters.", "type": "float"}, "age": {"description": "Age in years.", "type": "int"}, "sex": {"description": "Biological sex, either 'male' or 'female'.", "type": "str"}, "activity_level": {"description": "Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active).", "type": "int"}, "goal": {"description": "Fitness goal, either 'lose', 'maintain', or 'gain'.", "type": "str"}}}}, {"type": "function", "function": {"name": "place_safeway_order", "description": "Order specified items from a Safeway location.", "parameters": {"location": {"description": "The location of the Safeway store, e.g., 'Palo Alto, CA'.", "type": "str"}, "items": {"description": "List of items to order.", "type": "list"}, "quantity": {"description": "Quantity of each item in the order list.", "type": "list"}}}}, {"type": "function", "function": {"name": "predict_forest_area", "description": "Predicts the change in forest area over a specified number of years.", "parameters": {"location": {"description": "The geographic location for the prediction.", "type": "str"}, "num_years": {"description": "The number of years into the future to make the prediction.", "type": "int"}, "include_humans": {"description": "Whether to include the impact of human activities in the prediction. Defaults to False.", "type": "bool, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "predict_forest_area", "arguments": "{\"location\": \"Siberian Taiga\", \"num_years\": 10, \"include_humans\": false}"}}]}, "messages": [{"role": "user", "content": "Predict the change in forest area in 'Siberian Taiga' over the next 10 years, excluding the impact of human activities."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "predict_forest_area", "arguments": "{\"location\": \"Siberian Taiga\", \"num_years\": 10, \"include_humans\": false}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "measure_distance", "description": "Calculates the distance between two geographic locations based on their latitude and longitude coordinates, with optional specification of the unit of measurement.", "parameters": {"lat1": {"description": "Latitude of the first location.", "type": "int", "default": "0.365816"}, "lat2": {"description": "Latitude of the second location.", "type": "int", "default": "0.32493795000000003"}, "lon2": {"description": "Longitude of the second location.", "type": "int", "default": "32.57523607707668"}, "lon1": {"description": "Longitude of the first location.", "type": "int", "default": "32.529226"}, "unit": {"description": "Unit of distance measurement. Valid options are 'km' (default), 'mi', 'ft', and 'yd'.", "type": "str, optional", "default": "km"}}}}, {"type": "function", "function": {"name": "language_by_id", "description": "Fetches language information from the API based on the provided language identifier and optional filters.", "parameters": {"lang": {"description": "A 2-letter ISO language code used to fetch the language data.", "type": "str", "default": "sv"}, "lang_3": {"description": "An optional 3-letter ISO language code filter.", "type": "str, optional", "default": ""}, "iso_a2": {"description": "An optional 2-letter country code filter.", "type": "str, optional", "default": ""}, "fields": {"description": "A comma-separated string specifying the fields to be included in the response. Default is 'iso_a2,lang_3,flag'.", "type": "str, optional", "default": "iso_a2,lang_3,flag"}}}}, {"type": "function", "function": {"name": "directions_between_2_locations", "description": "Fetches route information such as distance, duration, and steps between two locations using the Tanzania API.", "parameters": {"start_lat": {"description": "Latitude of the starting point.", "type": "int", "default": "-3.3696827"}, "end_lon": {"description": "Longitude of the ending point.", "type": "int", "default": "39.2694784"}, "start_lon": {"description": "Longitude of the starting point.", "type": "int", "default": "36.6880794"}, "end_lat": {"description": "Latitude of the ending point.", "type": "int", "default": "-6.7785166"}, "distance_unit": {"description": "Unit of distance measurement. Valid options are 'km' (default) and 'mi'.", "type": "str, optional", "default": "km"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "measure_distance", "arguments": "{\"lat1\": 0.3175, \"lat2\": 0.0639, \"lon1\": 32.5825, \"lon2\": 32.4608, \"unit\": \"km\"}"}}]}, "messages": [{"role": "user", "content": "What is the distance in kilometers between Kampala (latitude 0.3175, longitude 32.5825) and Entebbe (latitude 0.0639, longitude 32.4608)?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "measure_distance", "arguments": "{\"lat1\": 0.3175, \"lat2\": 0.0639, \"lon1\": 32.5825, \"lon2\": 32.4608, \"unit\": \"km\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "cagr", "description": "Calculates the Compound Annual Growth Rate (CAGR) of an investment.", "parameters": {"start_value": {"description": "The initial value of the investment.", "type": "float"}, "end_value": {"description": "The final value of the investment.", "type": "float"}, "years": {"description": "The number of years between the initial and final values.", "type": "int"}}}}, {"type": "function", "function": {"name": "can_attend_all_meetings", "description": "Determines if a person can attend all meetings given a list of meeting time intervals.", "parameters": {"intervals": {"description": "A list of meeting time intervals, where each interval is represented as [start_time, end_time].", "type": "List[List[int]]"}}}}, {"type": "function", "function": {"name": "find_n_largest_numbers", "description": "Finds the n largest numbers in a list.", "parameters": {"nums": {"description": "The list of numbers.", "type": "List[int]"}, "n": {"description": "The number of largest numbers to find.", "type": "int"}}}}, {"type": "function", "function": {"name": "find_minimum_rotated_sorted_array", "description": "Finds the minimum element in a rotated sorted array.", "parameters": {"nums": {"description": "The rotated sorted array.", "type": "List[int]"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_minimum_rotated_sorted_array", "arguments": "{\"nums\": [4, 5, 6, 7, 0, 1, 2]}"}}]}, "messages": [{"role": "user", "content": "Identify the minimum element in the rotated sorted array [4, 5, 6, 7, 0, 1, 2]."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_minimum_rotated_sorted_array", "arguments": "{\"nums\": [4, 5, 6, 7, 0, 1, 2]}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "is_rotation", "description": "Checks if one string is a rotation of another string.", "parameters": {"str1": {"description": "The first string.", "type": "str"}, "str2": {"description": "The second string.", "type": "str"}}}}, {"type": "function", "function": {"name": "split_list", "description": "Splits a list into chunks of a specified size.", "parameters": {"lst": {"description": "The input list.", "type": "List"}, "chunk_size": {"description": "The size of each chunk.", "type": "int"}}}}, {"type": "function", "function": {"name": "calculate_factorial", "description": "Calculates the factorial of a non-negative integer.", "parameters": {"n": {"description": "The non-negative integer.", "type": "int"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "is_rotation", "arguments": "{\"str1\": \"waterbottle\", \"str2\": \"erbottlewat\"}"}}, {"type": "function", "function": {"name": "split_list", "arguments": "{\"lst\": [1, 2, 3, 4, 5, 6, 7, 8, 9], \"chunk_size\": 3}"}}]}, "messages": [{"role": "user", "content": "Is the string 'waterbottle' a rotation of 'erbottlewat'? Also, can you split the list [1, 2, 3, 4, 5, 6, 7, 8, 9] into chunks of size 3?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "is_rotation", "arguments": "{\"str1\": \"waterbottle\", \"str2\": \"erbottlewat\"}"}}, {"type": "function", "function": {"name": "split_list", "arguments": "{\"lst\": [1, 2, 3, 4, 5, 6, 7, 8, 9], \"chunk_size\": 3}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "autosuggest", "description": "Fetches suggestions for a search term near a specified geographic point, filtered by various parameters.", "parameters": {"name": {"description": "The query term on which to search.", "type": "str", "default": "don"}, "lon": {"description": "Longitude of the selected point.", "type": "int", "default": "-70.65"}, "radius": {"description": "Maximum distance from the selected point in meters.", "type": "int", "default": "5000"}, "lang": {"description": "Language code (2 characters, ISO639-1). Available values include 'en' for English and 'ru' for Russian.", "type": "str", "default": ""}, "lat": {"description": "Latitude of the selected point.", "type": "int", "default": "-33.437"}, "kinds": {"description": "Object category. Multiple comma-separated categories may be stated with OR logic. Defaults to 'foods'.", "type": "str, optional", "default": "foods"}, "rate": {"description": "Minimum rating of the object popularity. Available values include 1, 2, 3 for basic ratings, and 1h, 2h, 3h for cultural heritage ratings. Defaults to None.", "type": "str, optional", "default": ""}, "src_attr": {"description": "The source of the object attributes. Multiple sources separated by commas are allowed. Defaults to None. Available sources include osm, wikidata, snow, cultura.ru, rosnedra, user.", "type": "str, optional", "default": ""}, "format": {"description": "The output format. Defaults to None, which uses GeoJSON. Available values include 'json' and 'geojson'.", "type": "str, optional", "default": ""}, "limit": {"description": "Maximum number of returned objects. Defaults to 10.", "type": "int, optional", "default": "10"}, "src_geom": {"description": "The source of the object geometry. Defaults to None. Available sources include osm, wikidata, snow, cultura.ru, rosnedra.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "search", "description": "Performs a global geocoding search using the provided query and optional parameters, returning geographic data from the API.", "parameters": {"q": {"description": "Query string to search for geographic locations.", "type": "str", "default": "Kirchengasse Wien"}, "language": {"description": "Language for the given instructions. Must be a valid ISO 639-1 language code. Default is None.", "type": "str, optional", "default": ""}, "viewbox": {"description": "Preferred area to search in, formatted as `{minLng},{minLat},{maxLng},{maxLat}`. Default is None.", "type": "str, optional", "default": ""}, "polygon": {"description": "Whether available polygons are added to the response data. Default is None.", "type": "str, optional", "default": ""}, "limit": {"description": "Limits the number of returned results. Default is None.", "type": "int, optional", "default": ""}, "countrycodes": {"description": "Limits results to specified countries. Multiple countries should be separated by commas, using valid ISO 3166-1 alpha-2 country codes. Default is None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "get_hillshading_tile", "description": "Fetches a hillshading raster tile as a PNG.", "parameters": {"x": {"description": "The x coordinate of the tile.", "type": "int", "default": "756"}, "version": {"description": "The version of the hillshading tile, either 'v1' or 'v2'.", "type": "str", "default": "v2"}, "z": {"description": "The zoom level of the tile.", "type": "int", "default": "11"}, "y": {"description": "The y coordinate of the tile.", "type": "int", "default": "805"}}}}, {"type": "function", "function": {"name": "get_style_json", "description": "Retrieves the style JSON for the specified map style.", "parameters": {"style": {"description": "The style identifier to retrieve the corresponding style JSON.", "type": "str", "default": "osm-bright"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_hillshading_tile", "arguments": "{\"x\": 42, \"version\": \"v1\", \"z\": 8, \"y\": 76}"}}]}, "messages": [{"role": "user", "content": "Fetch the hillshading raster tile for version 1, zoom level 8, and x and y coordinates of 42 and 76, respectively."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_hillshading_tile", "arguments": "{\"x\": 42, \"version\": \"v1\", \"z\": 8, \"y\": 76}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "qr_code", "description": "Generates a QR code for a given URL using the RapidAPI QR code generator service.", "parameters": {"url": {"description": "The URL to be encoded in the QR code.", "type": "str", "default": ""}}}}, {"type": "function", "function": {"name": "go", "description": "Fetches and parses an HTML page from a specified URL using the Web Scrapper API.", "parameters": {"url": {"description": "The URL of the HTML page to be fetched and parsed.", "type": "str", "default": "https://wikipedia.org"}, "s": {"description": "An optional query parameter to specify a selector. Default is '.jsl10n'.", "type": "str, optional", "default": ".jsl10n"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "qr_code", "arguments": "{\"url\": \"https://www.example.com/product1\"}"}}, {"type": "function", "function": {"name": "qr_code", "arguments": "{\"url\": \"https://www.example.com/product2\"}"}}, {"type": "function", "function": {"name": "go", "arguments": "{\"url\": \"https://www.news.com\", \"s\": \".jsl10n\"}"}}]}, "messages": [{"role": "user", "content": "Could you generate QR codes for these URLs: 'https://www.example.com/product1', 'https://www.example.com/product2'? Also, can you fetch the HTML content from 'https://www.news.com' and extract any '.jsl10n' class elements?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "qr_code", "arguments": "{\"url\": \"https://www.example.com/product1\"}"}}, {"type": "function", "function": {"name": "qr_code", "arguments": "{\"url\": \"https://www.example.com/product2\"}"}}, {"type": "function", "function": {"name": "go", "arguments": "{\"url\": \"https://www.news.com\", \"s\": \".jsl10n\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "calculate_calorie_intake", "description": "Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals.", "parameters": {"weight_kg": {"description": "Body weight in kilograms.", "type": "float"}, "height_cm": {"description": "Height in centimeters.", "type": "float"}, "age": {"description": "Age in years.", "type": "int"}, "sex": {"description": "Biological sex, either 'male' or 'female'.", "type": "str"}, "activity_level": {"description": "Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active).", "type": "int"}, "goal": {"description": "Fitness goal, either 'lose', 'maintain', or 'gain'.", "type": "str"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_calorie_intake", "arguments": "{\"weight_kg\": 90, \"height_cm\": 190, \"age\": 25, \"sex\": \"male\", \"activity_level\": 4, \"goal\": \"gain\"}"}}]}, "messages": [{"role": "user", "content": "A 25-year-old male athlete, 90 kg, 190 cm, with a high activity level, wants to gain muscle. Provide his recommended calorie and macronutrient distribution."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_calorie_intake", "arguments": "{\"weight_kg\": 90, \"height_cm\": 190, \"age\": 25, \"sex\": \"male\", \"activity_level\": 4, \"goal\": \"gain\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "vin_decoder_basic", "description": "Decodes basic information from a Vehicle Identification Number (VIN) using the RapidAPI VIN decoder service.", "parameters": {"vin": {"description": "The Vehicle Identification Number (VIN) to be decoded. Must be 17 characters long.", "type": "str", "default": "5YJ3E1EA6PF384836"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "vin_decoder_basic", "arguments": "{\"vin\": \"1G1YY12SXMN109186\"}"}}]}, "messages": [{"role": "user", "content": "Decode basic information from the Vehicle Identification Number '1G1YY12SXMN109186'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "vin_decoder_basic", "arguments": "{\"vin\": \"1G1YY12SXMN109186\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "density", "description": "Calculates the density of an object given its mass and volume.", "parameters": {"mass": {"description": "The mass of the object.", "type": "float"}, "volume": {"description": "The volume of the object.", "type": "float"}}}}, {"type": "function", "function": {"name": "find_longest_palindromic_substring", "description": "Finds the longest palindromic substring in a string.", "parameters": {"s": {"description": "The input string.", "type": "str"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "density", "arguments": "{\"mass\": 150, \"volume\": 200}"}}]}, "messages": [{"role": "user", "content": "Determine the density of a wooden block with a mass of 150 grams and a volume of 200 cubic centimeters."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "density", "arguments": "{\"mass\": 150, \"volume\": 200}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "ideal_body_weight", "description": "Calculates the ideal body weight based on height, body frame size, gender, and optional formula.", "parameters": {"body_frame": {"description": "The body frame size of the person. It can be one of the following values: \"small\", \"medium\", or \"large\".", "type": "str", "default": "medium"}, "height": {"description": "The height in centimeters (cm) of the person.", "type": "int", "default": "175"}, "gender": {"description": "The gender of the person. It can be either \"male\" or \"female\".", "type": "str", "default": "male"}, "formula": {"description": "The formula for ideal weight estimation. It can be either \"hamwi\" (default) or \"devine\".", "type": "str, optional", "default": "hamwi"}}}}, {"type": "function", "function": {"name": "bmi_imperial", "description": "Calculates the Body Mass Index (BMI) based on the provided height and weight parameters in imperial units (inches and pounds).", "parameters": {"height": {"description": "The height in inches.", "type": "int", "default": "65"}, "weight": {"description": "The weight in pounds.", "type": "int", "default": "150"}}}}, {"type": "function", "function": {"name": "marks_men_points", "description": "Fetches the men's marks corresponding to a given points value using the Scoring Tables API.", "parameters": {"points": {"description": "A point value between 1 and 1400 to retrieve men's marks.", "type": "int", "default": "1400"}}}}, {"type": "function", "function": {"name": "daily_water_intake", "description": "Calculates the daily recommended water intake based on factors such as weight, activity level, and climate.", "parameters": {"weight": {"description": "The weight of the individual in kilograms (kg).", "type": "int", "default": "60"}, "activity_level": {"description": "The activity level of the individual. Acceptable values are:", "type": "str", "default": "sedentary"}, "climate": {"description": "The climate in which the individual is located. Acceptable values are:", "type": "str", "default": "normal"}, "unit": {"description": "The unit of measurement for the water intake. Default is 'liters', specify 'ounces' to get the result in ounces.", "type": "str, optional", "default": "liters"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "marks_men_points", "arguments": "{\"points\": 1000}"}}, {"type": "function", "function": {"name": "bmi_imperial", "arguments": "{\"height\": 70, \"weight\": 180}"}}]}, "messages": [{"role": "user", "content": "Find the men's marks for a points value of 1000, and calculate the BMI for someone who is 70 inches tall and weighs 180 pounds."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "marks_men_points", "arguments": "{\"points\": 1000}"}}, {"type": "function", "function": {"name": "bmi_imperial", "arguments": "{\"height\": 70, \"weight\": 180}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "longest_common_prefix", "description": "Finds the longest common prefix among a list of strings.", "parameters": {"strs": {"description": "The list of strings.", "type": "List[str]"}}}}, {"type": "function", "function": {"name": "is_anagram_phrase", "description": "Checks if two phrases are anagrams of each other, ignoring whitespace and punctuation.", "parameters": {"phrase1": {"description": "The first phrase.", "type": "str"}, "phrase2": {"description": "The second phrase.", "type": "str"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "longest_common_prefix", "arguments": "{\"strs\": [\"apple\", \"ape\", \"apricot\"]}"}}, {"type": "function", "function": {"name": "is_anagram_phrase", "arguments": "{\"phrase1\": \"School master\", \"phrase2\": \"The classroom\"}"}}]}, "messages": [{"role": "user", "content": "What is the longest common prefix for the strings 'apple', 'ape', 'apricot', and check if 'School master', 'The classroom' are anagrams."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "longest_common_prefix", "arguments": "{\"strs\": [\"apple\", \"ape\", \"apricot\"]}"}}, {"type": "function", "function": {"name": "is_anagram_phrase", "arguments": "{\"phrase1\": \"School master\", \"phrase2\": \"The classroom\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "find_majority_element", "description": "Finds the majority element in a list, which appears more than \u230an / 2\u230b times.", "parameters": {"nums": {"description": "The input list of integers.", "type": "List[int]"}}}}, {"type": "function", "function": {"name": "find_missing_ranges", "description": "Finds the missing ranges between lower and upper in a sorted list of integers.", "parameters": {"nums": {"description": "The sorted list of integers.", "type": "List[int]"}, "lower": {"description": "The lower bound.", "type": "int"}, "upper": {"description": "The upper bound.", "type": "int"}}}}, {"type": "function", "function": {"name": "find_max_subarray_sum", "description": "Finds the maximum sum of a contiguous subarray within a list of integers.", "parameters": {"nums": {"description": "The input list of integers.", "type": "List[int]"}}}}, {"type": "function", "function": {"name": "find_duplicate_number", "description": "Finds the duplicate number in a list of integers.", "parameters": {"nums": {"description": "The list of integers.", "type": "List[int]"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_max_subarray_sum", "arguments": "{\"nums\": [1, -2, 3, 10, -15, 2, 1, -5, 4]}"}}]}, "messages": [{"role": "user", "content": "Determine the maximum sum of any subarray within the list 1, -2, 3, 10, -15, 2, 1, -5, 4."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_max_subarray_sum", "arguments": "{\"nums\": [1, -2, 3, 10, -15, 2, 1, -5, 4]}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "market_get_full", "description": "Retrieves comprehensive information about specified stock tickers using the Bloomberg Finance API.", "parameters": {"is_id": {"description": "A comma-separated string of ticker IDs corresponding to the desired stocks. These IDs are returned by the `/market/auto-complete` endpoint.", "type": "str", "default": "adsmi:ind,aex:ind,co1:com,gc1:com"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "market_get_full", "arguments": "{\"is_id\": \"AMZN,META\"}"}}]}, "messages": [{"role": "user", "content": "What's the latest on Amazon and Facebook stocks?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "market_get_full", "arguments": "{\"is_id\": \"AMZN,META\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "market_capitalization", "description": "Fetches the market capitalization of a cryptocurrency in US Dollars.", "parameters": {"symbol": {"description": "The ticker symbol of the cryptocurrency.", "type": "str", "default": "BTC"}}}}, {"type": "function", "function": {"name": "specific_transactions", "description": "Fetch detailed information about a specific cryptocurrency transaction using the provided hash and symbol.", "parameters": {"hash": {"description": "The transaction hash used to uniquely identify the cryptocurrency transaction.", "type": "str", "default": "ac6f1a0b388e2814f2e2036c7c81524cfae7e3432a8e503fe5d07ebb453ee310"}, "symbol": {"description": "The symbol of the cryptocurrency (e.g., BTC, ETH) for which the transaction information is to be retrieved.", "type": "str", "default": "btc"}}}}, {"type": "function", "function": {"name": "get_3_month_historical_daily_prices", "description": "Fetches 3 months of historical daily stock prices for the given ticker.", "parameters": {"ticker": {"description": "The stock ticker symbol to fetch historical prices for.", "type": "str", "default": "AAPL"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_3_month_historical_daily_prices", "arguments": "{\"ticker\": \"AAPL\"}"}}]}, "messages": [{"role": "user", "content": "Get the 3-month historical daily prices for Apple Inc."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_3_month_historical_daily_prices", "arguments": "{\"ticker\": \"AAPL\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "tokens", "description": "Retrieves a list of tokens and their contract information based on the specified blockchain network.", "parameters": {"network": {"description": "The name of the blockchain network. Supported networks include arbitrum, aurora, avalanche, bsc, cronos, ethereum, fantom, harmony, heco, kcc, metis, moonriver, oasisemerald, optimism, polygon, and telos.", "type": "str", "default": ""}}}}, {"type": "function", "function": {"name": "full_stock_price", "description": "Fetches the current stock price for a given symbol using the Toolbench RapidAPI.", "parameters": {"symbol": {"description": "The stock symbol to query.", "type": "str", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "tokens", "arguments": "{\"network\": \"avalanche\"}"}}]}, "messages": [{"role": "user", "content": "Retrieve tokens from the Avalanche network."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "tokens", "arguments": "{\"network\": \"avalanche\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "find_missing_ranges", "description": "Finds the missing ranges between lower and upper in a sorted list of integers.", "parameters": {"nums": {"description": "The sorted list of integers.", "type": "List[int]"}, "lower": {"description": "The lower bound.", "type": "int"}, "upper": {"description": "The upper bound.", "type": "int"}}}}, {"type": "function", "function": {"name": "split_list", "description": "Splits a list into chunks of a specified size.", "parameters": {"lst": {"description": "The input list.", "type": "List"}, "chunk_size": {"description": "The size of each chunk.", "type": "int"}}}}, {"type": "function", "function": {"name": "find_files", "description": "Finds all files with a specific extension in a directory and its subdirectories.", "parameters": {"directory": {"description": "The directory to search in.", "type": "str"}, "extension": {"description": "The file extension to search for.", "type": "str"}}}}, {"type": "function", "function": {"name": "remove_duplicates", "description": "Removes duplicate elements from a list while preserving the order.", "parameters": {"lst": {"description": "The input list.", "type": "List"}}}}, {"type": "function", "function": {"name": "find_longest_word", "description": "Finds the longest word in a list of words.", "parameters": {"words": {"description": "A list of words.", "type": "List[str]"}}}}, {"type": "function", "function": {"name": "count_occurrences", "description": "Counts the occurrences of each element in a list and returns a dictionary with the counts.", "parameters": {"lst": {"description": "The input list.", "type": "List"}}}}, {"type": "function", "function": {"name": "format_date", "description": "Converts a date string from one format to another.", "parameters": {"date": {"description": "The date string to convert.", "type": "str"}, "input_format": {"description": "The format of the input date string.", "type": "str"}, "output_format": {"description": "The desired format of the output date string.", "type": "str"}}}}, {"type": "function", "function": {"name": "merge_dictionaries", "description": "Merges two dictionaries into a single dictionary.", "parameters": {"dict1": {"description": "The first dictionary.", "type": "Dict"}, "dict2": {"description": "The second dictionary.", "type": "Dict"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_files", "arguments": "{\"directory\": \"documents\", \"extension\": \".txt\"}"}}]}, "messages": [{"role": "user", "content": "Find all .txt files in the 'documents' directory and its subdirectories."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_files", "arguments": "{\"directory\": \"documents\", \"extension\": \".txt\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "linear_regression_prediction", "description": "Predicts the y-value for a given x-value using linear regression.", "parameters": {"x_values": {"description": "The x-coordinates of the data points.", "type": "List[float]"}, "y_values": {"description": "The y-coordinates of the data points.", "type": "List[float]"}, "target_x": {"description": "The x-value for which to predict the y-value.", "type": "float"}}}}, {"type": "function", "function": {"name": "matrix_multiply", "description": "Multiplies two matrices.", "parameters": {"matrix_a": {"description": "The first matrix.", "type": "List[List[float]]"}, "matrix_b": {"description": "The second matrix.", "type": "List[List[float]]"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "matrix_multiply", "arguments": "{\"matrix_a\": [[1, 2], [3, 4]], \"matrix_b\": [[5, 6], [7, 8]]}"}}]}, "messages": [{"role": "user", "content": "What is the result of multiplying the matrices A = [[1, 2], [3, 4]] and B = [[5, 6], [7, 8]]?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "matrix_multiply", "arguments": "{\"matrix_a\": [[1, 2], [3, 4]], \"matrix_b\": [[5, 6], [7, 8]]}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "find_first_non_repeating_char", "description": "Finds the first non-repeating character in a string.", "parameters": {"s": {"description": "The input string.", "type": "str"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_first_non_repeating_char", "arguments": "{\"s\": \"css\"}"}}]}, "messages": [{"role": "user", "content": "I have a string 'css' and I want to find the first character that does not repeat. Can you help me?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_first_non_repeating_char", "arguments": "{\"s\": \"css\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "uniquestageimage", "description": "Retrieves the image for a specific Motorsport unique stage using the provided stage ID.", "parameters": {"is_id": {"description": "The unique stage ID for which to retrieve the image.", "type": "int", "default": 40}}}}, {"type": "function", "function": {"name": "nhl_summary", "description": "Fetch the game summary data for a specified NHL game using the RapidAPI service.", "parameters": {"is_id": {"description": "The game ID for which the summary data is requested.", "type": "str", "default": "401458986"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "nhl_summary", "arguments": "{\"is_id\": \"20230404\"}"}}]}, "messages": [{"role": "user", "content": "I'm looking for the summary of the NHL game ID '20230404'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "nhl_summary", "arguments": "{\"is_id\": \"20230404\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "is_prime", "description": "Checks if a number is prime.", "parameters": {"num": {"description": "The number to be checked.", "type": "int"}}}}, {"type": "function", "function": {"name": "neuronal_activity_rate", "description": "Calculates the neuronal activity rate based on the synaptic input rate, synaptic weight, and decay constant.", "parameters": {"synaptic_input_rate": {"description": "The rate of synaptic inputs per second.", "type": "int", "default": 1.0}, "synaptic_weight": {"description": "The weight of the synaptic input, denoting its influence. Defaults to 1.0.", "type": "float, optional", "default": 0.1}, "decay_constant": {"description": "The rate at which the neuron's potential decays. Defaults to 0.1.", "type": "float, optional", "default": 1.0}}}}, {"type": "function", "function": {"name": "solve_quadratic", "description": "Computes the roots of a quadratic equation given its coefficients.", "parameters": {"a": {"description": "The coefficient of the quadratic term (x^2).", "type": "float"}, "b": {"description": "The coefficient of the linear term (x).", "type": "float"}, "c": {"description": "The constant term.", "type": "float"}}}}, {"type": "function", "function": {"name": "calculate_standard_deviation", "description": "Calculates the standard deviation of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[Union[int, float]]"}}}}, {"type": "function", "function": {"name": "sort_numbers", "description": "Sorts a list of numbers in ascending or descending order.", "parameters": {"numbers": {"description": "The list of numbers to be sorted.", "type": "List[float]"}, "descending": {"description": "If True, sorts the numbers in descending order. Defaults to False.", "type": "bool, optional"}}}}, {"type": "function", "function": {"name": "potential_energy", "description": "Calculates the electrostatic potential energy given the charge and voltage.", "parameters": {"charge": {"description": "The electric charge.", "type": "float"}, "voltage": {"description": "The electric potential difference (voltage).", "type": "float"}}}}, {"type": "function", "function": {"name": "is_power_of_two", "description": "Checks if a number is a power of two.", "parameters": {"num": {"description": "The number to check.", "type": "int"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "is_prime", "arguments": "{\"num\": 49}"}}, {"type": "function", "function": {"name": "neuronal_activity_rate", "arguments": "{\"synaptic_input_rate\": 200, \"synaptic_weight\": 1.2, \"decay_constant\": 0.2}"}}]}, "messages": [{"role": "user", "content": "Is 49 a prime number, and what is the neuronal activity rate with 200 synaptic inputs, a weight of 1.2, and a decay constant of 0.2?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "is_prime", "arguments": "{\"num\": 49}"}}, {"type": "function", "function": {"name": "neuronal_activity_rate", "arguments": "{\"synaptic_input_rate\": 200, \"synaptic_weight\": 1.2, \"decay_constant\": 0.2}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_information_of_a_particular_post", "description": "Fetch information about a specific post using its post ID.", "parameters": {"postid": {"description": "The unique identifier of the post for which information is to be retrieved.", "type": "str", "default": "2796025"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_information_of_a_particular_post", "arguments": "{\"postid\": \"778899\"}"}}, {"type": "function", "function": {"name": "get_information_of_a_particular_post", "arguments": "{\"postid\": \"101112\"}"}}]}, "messages": [{"role": "user", "content": "Fetch data for posts 778899 and 101112."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_information_of_a_particular_post", "arguments": "{\"postid\": \"778899\"}"}}, {"type": "function", "function": {"name": "get_information_of_a_particular_post", "arguments": "{\"postid\": \"101112\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "biggest_cities", "description": "Fetches the biggest cities' data from the specified API using the provided ID and API key.", "parameters": {"is_id": {"description": "The ID representing a specific query for biggest cities.", "type": "int", "default": "1"}}}}, {"type": "function", "function": {"name": "hotel_details", "description": "Fetches detailed information about a specified hotel from the Priceline API.", "parameters": {"hotel_id": {"description": "The PPN Hotel ID identifying the desired property.", "type": "str", "default": "700008849"}, "airport_limit": {"description": "Limit the number of nearby airports included in the response.", "type": "int, optional", "default": ""}, "check_in": {"description": "Check-in date in 'YYYY-MM-DD' or 'MM/DD/YYYY' format.", "type": "str, optional", "default": ""}, "promo": {"description": "Flag to include promotional data. Default is False.", "type": "bool, optional", "default": true}, "photos": {"description": "Flag to include photo data. Default is False.", "type": "bool, optional", "default": "1"}, "videos": {"description": "Flag to include video data. Default is False.", "type": "bool, optional", "default": true}, "guest_score_breakdown": {"description": "Flag to include guest score breakdown data. Default is False.", "type": "bool, optional", "default": true}, "reviews": {"description": "Flag to include hotel review data. Default is False.", "type": "bool, optional", "default": "1"}, "city_limit": {"description": "Limit the number of cities included in the response.", "type": "int, optional", "default": ""}, "sid": {"description": "Session ID. Default is 'iSiX639'.", "type": "str, optional", "default": "iSiX639"}, "important_info": {"description": "Flag to include extra details about the hotel. Default is False.", "type": "bool, optional", "default": true}, "recent": {"description": "Flag to include recent sales data. Default is False.", "type": "bool, optional", "default": true}, "poi_limit": {"description": "Limit the number of points of interest included in the response.", "type": "int, optional", "default": ""}, "plugins": {"description": "Flag to include plugin information. Default is False.", "type": "bool, optional", "default": true}, "image_size": {"description": "The size of the images returned. Options are 'small', 'medium', or 'large'.", "type": "str, optional", "default": ""}, "id_lookup": {"description": "Flag to search non-PPN Hotel IDs. Default is False.", "type": "bool, optional", "default": true}, "check_out": {"description": "Check-out date in 'YYYY-MM-DD' or 'MM/DD/YYYY' format.", "type": "str, optional", "default": ""}, "currency": {"description": "The currency format for the results, in ISO 4217 format.", "type": "str, optional", "default": ""}, "nearby": {"description": "Flag to include nearby location data such as city, airport, and points of interest. Default is False.", "type": "bool, optional", "default": true}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "hotel_details", "arguments": "{\"hotel_id\": \"1234\", \"photos\": true, \"reviews\": true}"}}, {"type": "function", "function": {"name": "hotel_details", "arguments": "{\"hotel_id\": \"5678\", \"photos\": true, \"reviews\": true}"}}]}, "messages": [{"role": "user", "content": "What's the information for hotels with IDs '1234' and '5678', including photos and reviews?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "hotel_details", "arguments": "{\"hotel_id\": \"1234\", \"photos\": true, \"reviews\": true}"}}, {"type": "function", "function": {"name": "hotel_details", "arguments": "{\"hotel_id\": \"5678\", \"photos\": true, \"reviews\": true}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "spac_price_targets", "description": "Fetches the latest SPAC (Special Purpose Acquisition Company) price targets from analysts, filtered by a specific SPAC symbol.", "parameters": {"symbol": {"description": "The SPAC symbol to filter the price targets by. Defaults to 'SOFI'.", "type": "str", "default": "SOFI"}}}}, {"type": "function", "function": {"name": "coins_get_fullsize_chart", "description": "Fetches the full-size chart data for a specific cryptocurrency pair.", "parameters": {"pair_id": {"description": "The identifier of the cryptocurrency pair.", "type": "int", "default": "33"}, "pair_interval": {"description": "The interval for the chart data in seconds.", "type": "int, optional", "default": "900"}, "lang_id": {"description": "The language ID for the data. Default is 1.", "type": "int, optional", "default": "1"}, "time_utc_offset": {"description": "The time offset in UTC seconds. For example, UTC+8 corresponds to 28800 seconds. Default is 28800.", "type": "int, optional", "default": "28800"}}}}, {"type": "function", "function": {"name": "market_auto_complete", "description": "Fetch auto-complete suggestions for stock market queries.", "parameters": {"query": {"description": "The search query for which auto-complete suggestions are needed.", "type": "str", "default": "nasdaq"}}}}, {"type": "function", "function": {"name": "news_v2_list_by_symbol", "description": "Fetches the latest news articles associated with a given stock symbol.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve news. This is typically obtained from the auto-complete or other relevant endpoints.", "type": "str", "default": "AAPL"}, "page": {"description": "The page number for paginated results. Defaults to 1.", "type": "int, optional", "default": "1"}, "pagesize": {"description": "The number of news articles to return per page. Defaults to 30.", "type": "int, optional", "default": "30"}}}}, {"type": "function", "function": {"name": "short_ticker", "description": "Fetches the latest and daily average prices for the specified cryptocurrency in the given market and against the provided fiat currencies.", "parameters": {"market": {"description": "The market type, possible values include 'global' and 'local'.", "type": "str", "default": "global"}, "crypto": {"description": "The cryptocurrency to get ticker information for, default is 'ETH'.", "type": "str, optional", "default": "ETH"}, "fiats": {"description": "A comma-separated string of fiat currencies to return values for, default is 'USD,EUR'.", "type": "str, optional", "default": "USD,EUR"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "spac_price_targets", "arguments": "{\"symbol\": \"DWAC\"}"}}, {"type": "function", "function": {"name": "coins_get_fullsize_chart", "arguments": "{\"pair_id\": 2048, \"pair_interval\": 1800}"}}]}, "messages": [{"role": "user", "content": "Can you fetch the price targets for the SPAC symbol 'DWAC' and the full-size chart for cryptocurrency pair ID 2048 at a 30-minute interval?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "spac_price_targets", "arguments": "{\"symbol\": \"DWAC\"}"}}, {"type": "function", "function": {"name": "coins_get_fullsize_chart", "arguments": "{\"pair_id\": 2048, \"pair_interval\": 1800}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "by_location", "description": "Searches for homeless shelters based on provided geographical coordinates and radius.", "parameters": {"lat": {"description": "The latitude of the location to search nearby shelters.", "type": "str", "default": "47.630703"}, "radius": {"description": "The search radius in miles (maximum 10 miles).", "type": "str", "default": "1.4"}, "lng": {"description": "The longitude of the location to search nearby shelters.", "type": "str", "default": "-122.186370"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "by_location", "arguments": "{\"lat\": \"34.0522\", \"radius\": \"5\", \"lng\": \"-118.2437\"}"}}]}, "messages": [{"role": "user", "content": "Could you find homeless shelters within a 5-mile radius of downtown Los Angeles, California?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "by_location", "arguments": "{\"lat\": \"34.0522\", \"radius\": \"5\", \"lng\": \"-118.2437\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "circle_area", "description": "Computes the area of a circle given its radius.", "parameters": {"radius": {"description": "The radius of the circle.", "type": "float"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "circle_area", "arguments": "{\"radius\": 7}"}}, {"type": "function", "function": {"name": "circle_area", "arguments": "{\"radius\": 8}"}}]}, "messages": [{"role": "user", "content": "Given the radius of a circle is 7, can you find its area? Also, if the radius is 8, what would be the area?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "circle_area", "arguments": "{\"radius\": 7}"}}, {"type": "function", "function": {"name": "circle_area", "arguments": "{\"radius\": 8}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "products", "description": "Searches for product rankings based on a given query using the SEO API.", "parameters": {"query": {"description": "The search term to query for product rankings.", "type": "str", "default": "q=iphone+14"}}}}, {"type": "function", "function": {"name": "images", "description": "Fetches the URLs for a specified number of random WikiHow images.", "parameters": {"count": {"description": "The number of image URLs to retrieve (maximum 100).", "type": "int", "default": "3"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "images", "arguments": "{\"count\": 5}"}}]}, "messages": [{"role": "user", "content": "You're a content creator looking for engaging images for your new blog post about gardening. You want to include 5 random images from WikiHow. Use the 'images' function to get the URLs."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "images", "arguments": "{\"count\": 5}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "search", "description": "Performs a search for indexes, stocks, ETFs, cryptocurrencies, currencies, and more using the Joj Finance API.", "parameters": {"q": {"description": "The search query string.", "type": "str", "default": "Airbnb"}, "gl": {"description": "The geographical location specifier. Defaults to 'US'.", "type": "str, optional", "default": "US"}, "hl": {"description": "The language specifier. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}}, {"type": "function", "function": {"name": "full_stock_price", "description": "Fetches the current stock price for a given symbol using the Toolbench RapidAPI.", "parameters": {"symbol": {"description": "The stock symbol to query.", "type": "str", "default": ""}}}}, {"type": "function", "function": {"name": "currency_news", "description": "Fetch the latest news related to a specific currency, forex, or cryptocurrency pair.", "parameters": {"from_symbol": {"description": "A 3-letter currency code or symbol (ISO 4217) representing the base currency (e.g., 'USD').", "type": "str", "default": "USD"}, "to_symbol": {"description": "A 3-letter currency code or symbol (ISO 4217) representing the target currency (e.g., 'EUR').", "type": "str", "default": "EUR"}, "language": {"description": "The language of the news results, specified as a 2-letter language code (ISO 639-1). Default is 'en'.", "type": "str, optional", "default": "en"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "currency_news", "arguments": "{\"from_symbol\": \"BTC\", \"to_symbol\": \"GBP\"}"}}, {"type": "function", "function": {"name": "currency_news", "arguments": "{\"from_symbol\": \"GBP\", \"to_symbol\": \"JPY\"}"}}]}, "messages": [{"role": "user", "content": "Fetch the latest news about Bitcoin and the GBP to JPY currency pair."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "currency_news", "arguments": "{\"from_symbol\": \"BTC\", \"to_symbol\": \"GBP\"}"}}, {"type": "function", "function": {"name": "currency_news", "arguments": "{\"from_symbol\": \"GBP\", \"to_symbol\": \"JPY\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "email_checker", "description": "Checks whether the provided email is valid or disposable using the RapidAPI service.", "parameters": {"email": {"description": "The email address to be verified.", "type": "str", "default": "rahul@gmail.com"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "email_checker", "arguments": "{\"email\": \"marketing@newstartup.io\"}"}}]}, "messages": [{"role": "user", "content": "Verify if marketing@newstartup.io is a valid email address."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "email_checker", "arguments": "{\"email\": \"marketing@newstartup.io\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_schedule", "description": "Retrieves the schedule for specified League of Legends leagues using the provided RapidAPI key.", "parameters": {"leagueid": {"description": "A string containing league IDs separated by '%2C' to filter schedules for multiple leagues.", "type": "str", "default": "98767991299243165%2C99332500638116286%2C98767991302996019"}}}}, {"type": "function", "function": {"name": "regular_dice", "description": "Roll a specified number of regular dice using the RapidAPI Dice Roll Simulator.", "parameters": {"dice": {"description": "Number of dice to roll. Defaults to 3.", "type": "int, optional", "default": "3"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "regular_dice", "arguments": "{\"dice\": 3}"}}]}, "messages": [{"role": "user", "content": "Roll three regular dice."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "regular_dice", "arguments": "{\"dice\": 3}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_match", "description": "Calculates the match percentage between two names using the Love Calculator API.", "parameters": {"fname": {"description": "The first name for the love match calculation.", "type": "str", "default": "oliver m"}, "sname": {"description": "The second name for the love match calculation.", "type": "str", "default": "chloe p"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_match", "arguments": "{\"fname\": \"Katniss\", \"sname\": \"Peeta\"}"}}, {"type": "function", "function": {"name": "get_match", "arguments": "{\"fname\": \"Katniss\", \"sname\": \"Gale\"}"}}]}, "messages": [{"role": "user", "content": "Compare the love match percentages between Katniss and Peeta, and Katniss and Gale from The Hunger Games."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_match", "arguments": "{\"fname\": \"Katniss\", \"sname\": \"Peeta\"}"}}, {"type": "function", "function": {"name": "get_match", "arguments": "{\"fname\": \"Katniss\", \"sname\": \"Gale\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_railway_period_for_utc_date", "description": "Fetch the railway period for a given UTC date provided in milliseconds.", "parameters": {"millis": {"description": "The UTC date in milliseconds since the Unix epoch.", "type": "int", "default": "1654470000000"}}}}, {"type": "function", "function": {"name": "getlearningresources", "description": "Fetches Power BI learning resources from the specified API page.", "parameters": {"page": {"description": "The page number of the learning resources to retrieve.", "type": "int", "default": "1"}}}}, {"type": "function", "function": {"name": "response_by_quizid", "description": "Fetch all responses for a given quiz ID from the MoodRing API.", "parameters": {"quizid": {"description": "The unique identifier for the quiz.", "type": "str", "default": "1"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_railway_period_for_utc_date", "arguments": "{\"millis\": 1654041600000}"}}, {"type": "function", "function": {"name": "getlearningresources", "arguments": "{\"page\": 2}"}}]}, "messages": [{"role": "user", "content": "Fetch the railway period for June 1, 2022, and list the learning resources from page 2 for Power BI."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_railway_period_for_utc_date", "arguments": "{\"millis\": 1654041600000}"}}, {"type": "function", "function": {"name": "getlearningresources", "arguments": "{\"page\": 2}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "getproductsku", "description": "Fetches price information for a product identified by its SKU from the RapidAPI price tracker service.", "parameters": {"product_sku": {"description": "The SKU (Stock Keeping Unit) of the product to retrieve price information for.", "type": "str", "default": "PLID12183283"}}}}, {"type": "function", "function": {"name": "main_endpoint", "description": "Fetches product information from the Amazon Pricing and Product Info API using the given ASIN and domain.", "parameters": {"asin": {"description": "The Amazon Standard Identification Number of the product.", "type": "str", "default": "B07GR5MSKD"}, "domain": {"description": "The domain from which to fetch the product information (e.g., 'com', 'co.uk').", "type": "str", "default": "de"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getproductsku", "arguments": "{\"product_sku\": \"VC78901234\"}"}}, {"type": "function", "function": {"name": "main_endpoint", "arguments": "{\"asin\": \"789012345678\", \"domain\": \"es\"}"}}]}, "messages": [{"role": "user", "content": "I need the current price for a vacuum cleaner with SKU 'VC78901234' and the product information for a smart bulb with ASIN '789012345678' from the Spanish Amazon site."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getproductsku", "arguments": "{\"product_sku\": \"VC78901234\"}"}}, {"type": "function", "function": {"name": "main_endpoint", "arguments": "{\"asin\": \"789012345678\", \"domain\": \"es\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "details", "description": "Gets the details and general information of a creator using their `creator_id`.", "parameters": {"creator_id": {"description": "The unique identifier of the creator. This can be obtained using the `/search` endpoint.", "type": "int", "default": "2416483"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "details", "arguments": "{\"creator_id\": 223344}"}}, {"type": "function", "function": {"name": "details", "arguments": "{\"creator_id\": 556677}"}}]}, "messages": [{"role": "user", "content": "Fetch details for creators 223344 and 556677. I'm compiling a list of influential creators."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "details", "arguments": "{\"creator_id\": 223344}"}}, {"type": "function", "function": {"name": "details", "arguments": "{\"creator_id\": 556677}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_campaign_from_url", "description": "Fetches campaign data from the Fomo API based on a specified campaign ID and optional URL.", "parameters": {"is_id": {"description": "The unique identifier of the campaign.", "type": "str", "default": "Lead"}, "url": {"description": "The URL to be included in the query. Defaults to 'gogofodo.com'.", "type": "str, optional", "default": "gogofodo.com"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_campaign_from_url", "arguments": "{\"is_id\": \"112233\", \"url\": \"demo.com\"}"}}, {"type": "function", "function": {"name": "get_campaign_from_url", "arguments": "{\"is_id\": \"445566\"}"}}]}, "messages": [{"role": "user", "content": "Fetch the campaign information for ID '112233' using the URL 'demo.com' and another for ID '445566' using the default URL."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_campaign_from_url", "arguments": "{\"is_id\": \"112233\", \"url\": \"demo.com\"}"}}, {"type": "function", "function": {"name": "get_campaign_from_url", "arguments": "{\"is_id\": \"445566\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "bacterial_growth", "description": "Calculates the bacterial population after a given time based on the initial population and growth rate.", "parameters": {"initial_population": {"description": "The initial bacterial population.", "type": "int", "default": 20}, "growth_rate": {"description": "The growth rate per unit time.", "type": "float", "default": 20}, "time": {"description": "The time elapsed.", "type": "float"}, "doubling_time": {"description": "The doubling time of the bacteria in minutes. Defaults to 20.", "type": "float, optional"}}}}, {"type": "function", "function": {"name": "dice_roll_probability", "description": "Calculates the probability of rolling a specific sum with a given number of dice, each having a certain number of faces.", "parameters": {"target_sum": {"description": "The target sum to calculate the probability for.", "type": "int", "default": 6}, "num_dice": {"description": "The number of dice being rolled.", "type": "int", "default": 6}, "num_faces": {"description": "The number of faces on each die. Defaults to 6.", "type": "int, optional"}}}}, {"type": "function", "function": {"name": "final_velocity", "description": "Calculates the final velocity of an object given its initial velocity, acceleration, and time.", "parameters": {"initial_velocity": {"description": "The initial velocity of the object.", "type": "float"}, "acceleration": {"description": "The acceleration of the object.", "type": "float"}, "time": {"description": "The time elapsed.", "type": "float"}}}}, {"type": "function", "function": {"name": "batting_average", "description": "Calculates the batting average of a baseball player based on the number of hits and at-bats.", "parameters": {"num_hits": {"description": "The number of hits.", "type": "int", "default": 3}, "num_at_bats": {"description": "The number of at-bats.", "type": "int", "default": 3}, "precision": {"description": "The number of decimal places to round the batting average. Defaults to 3.", "type": "int, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "bacterial_growth", "arguments": "{\"initial_population\": 500, \"growth_rate\": 0.05, \"time\": 60, \"doubling_time\": 15}"}}, {"type": "function", "function": {"name": "dice_roll_probability", "arguments": "{\"target_sum\": 15, \"num_dice\": 4, \"num_faces\": 8}"}}]}, "messages": [{"role": "user", "content": "Imagine you're a scientist studying bacterial growth. You start with an initial population of 500 bacteria that have a growth rate of 0.05 per minute and double every 15 minutes. After 60 minutes, what is the new population? Additionally, calculate the probability of rolling a sum of 15 with 4 eight-sided dice."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "bacterial_growth", "arguments": "{\"initial_population\": 500, \"growth_rate\": 0.05, \"time\": 60, \"doubling_time\": 15}"}}, {"type": "function", "function": {"name": "dice_roll_probability", "arguments": "{\"target_sum\": 15, \"num_dice\": 4, \"num_faces\": 8}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "retrieve_user", "description": "Retrieves details of a user based on the provided user ID from the rapidapi service.", "parameters": {"user_id": {"description": "The ID of the user whose details are to be retrieved.", "type": "str", "default": "yKscUgpDShWKaf6zCLjyZw"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "retrieve_user", "arguments": "{\"user_id\": \"12345\"}"}}, {"type": "function", "function": {"name": "retrieve_user", "arguments": "{\"user_id\": \"67890\"}"}}]}, "messages": [{"role": "user", "content": "Retrieve the details of users with IDs '12345' and '67890'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "retrieve_user", "arguments": "{\"user_id\": \"12345\"}"}}, {"type": "function", "function": {"name": "retrieve_user", "arguments": "{\"user_id\": \"67890\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "product_by_id", "description": "Fetches detailed information about a specific product from the AliExpress API using the provided product ID.", "parameters": {"product_id": {"description": "The unique identifier for the product on AliExpress.", "type": "int", "default": "32841070485"}}}}, {"type": "function", "function": {"name": "search_on_ebay", "description": "Searches for items on eBay using the provided search query and RapidAPI key.", "parameters": {"searchquery": {"description": "The search term used to look for items on eBay.", "type": "str", "default": "iphone"}}}}, {"type": "function", "function": {"name": "categories", "description": "Fetches categories from the AliExpress unofficial API, optionally filtered by locale and country.", "parameters": {"locale": {"description": "The locale to filter categories by. Defaults to None.", "type": "str, optional", "default": ""}, "country": {"description": "The country to filter categories by. Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "feedbacks_id", "description": "Fetches feedbacks for a given product ID from the AliExpress unofficial API.", "parameters": {"is_id": {"description": "The product ID for which feedbacks are to be fetched.", "type": "int", "default": "4000886597329"}, "withpictures": {"description": "Indicates whether to include feedbacks with pictures (1 by default).", "type": "int, optional", "default": 1}, "page": {"description": "Specifies the page number of feedback results to fetch (1 by default).", "type": "int, optional", "default": 1}}}}, {"type": "function", "function": {"name": "get_product", "description": "Fetches product details from an API using the given product ID.", "parameters": {"is_id": {"description": "The product ID for which to retrieve details.", "type": "int", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "categories", "arguments": "{\"country\": \"US\"}"}}]}, "messages": [{"role": "user", "content": "List all categories available on AliExpress for the US market."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "categories", "arguments": "{\"country\": \"US\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "binary_search", "description": "Performs binary search on a sorted list to find the index of a target value.", "parameters": {"arr": {"description": "The sorted list of integers.", "type": "List[int]"}, "target": {"description": "The target value to search for.", "type": "int"}}}}, {"type": "function", "function": {"name": "find_missing_number", "description": "Finds the missing number in a list of integers from 0 to n.", "parameters": {"nums": {"description": "The list of integers.", "type": "List[int]"}}}}, {"type": "function", "function": {"name": "reverse_string", "description": "Reverses the characters in a string.", "parameters": {"text": {"description": "The input string.", "type": "str"}}}}, {"type": "function", "function": {"name": "split_list", "description": "Splits a list into chunks of a specified size.", "parameters": {"lst": {"description": "The input list.", "type": "List"}, "chunk_size": {"description": "The size of each chunk.", "type": "int"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_missing_number", "arguments": "{\"nums\": [0, 1, 2, 4, 5]}"}}]}, "messages": [{"role": "user", "content": "Find the missing number in the list [0, 1, 2, 4, 5]."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_missing_number", "arguments": "{\"nums\": [0, 1, 2, 4, 5]}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_user_dialog_string", "description": "Fetches the dialog string for a given user from the Waifu API.", "parameters": {"user_id": {"description": "A unique identifier for the user.", "type": "str", "default": "sample_user_id"}}}}, {"type": "function", "function": {"name": "get_extra_character_details", "description": "Fetch additional details about a character using the provided character ID and RapidAPI key.", "parameters": {"is_id": {"description": "The unique identifier of the character for which details are being fetched.", "type": "str", "default": ""}}}}, {"type": "function", "function": {"name": "list_titles", "description": "Fetches a listing of titles that match specified parameters from the Watchmode API.", "parameters": {"genres": {"description": "Filter results to only include certain genre(s). Pass in a single genre ID or multiple comma-separated IDs. Default is '4,9'.", "type": "str", "default": "4,9"}, "limit": {"description": "Set how many titles to return per page. Default and maximum is 250.", "type": "int", "default": "250"}, "source_ids": {"description": "Filter the results to titles available on specific sources by passing individual IDs or multiple comma-separated IDs. Default is '23,206'. Note: Only a single region can be set if this is populated.", "type": "str", "default": "23,206"}, "source_types": {"description": "Filter results to only include titles available on specific types of sources (e.g., subscription, free). Default is 'sub,free'. Note: Only a single region can be set if this is populated.", "type": "str", "default": "sub,free"}, "types": {"description": "Filter results to only include titles available on specific types of sources (e.g., subscription, free). Default is 'sub,free'. Note: Only a single region can be set if this is populated.", "type": "str", "default": "movie,tv_series"}, "regions": {"description": "Filter results to only include sources active in specific regions. Currently supported regions: US, GB, CA, AU. Default is 'US'. Note: Only a single region can be set if source_ids or source_types are populated.", "type": "str", "default": "US"}, "sort_by": {"description": "Sort order of results. Possible values include: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default is 'relevance_desc'.", "type": "str", "default": "relevance_desc"}, "page": {"description": "Set the page of results to return. Default is 1.", "type": "int", "default": "1"}, "network_ids": {"description": "Filter results to titles that originally aired on specific TV networks by passing individual IDs or multiple comma-separated IDs. Default is '1,8,12'.", "type": "str", "default": "1,8,12"}, "release_date_start": {"description": "Filter results to only include titles released on or after a specific date. Format: YYYYMMDD. Default is 20010101.", "type": "int", "default": "20010101"}, "release_date_end": {"description": "Filter results to only include titles released on or before a specific date. Format: YYYYMMDD. Default is 20201211.", "type": "int", "default": "20201211"}}}}, {"type": "function", "function": {"name": "search", "description": "Search for games using the Epic Games Store RapidAPI.", "parameters": {"page": {"description": "The page number of the search results to retrieve.", "type": "int", "default": "1"}, "locale": {"description": "The locale for the search results (e.g., 'en-US').", "type": "str", "default": "en"}, "country": {"description": "The country code for the search results (e.g., 'US').", "type": "str", "default": "US"}, "term": {"description": "The search term to query.", "type": "str", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_extra_character_details", "arguments": "{\"is_id\": \"char_456\"}"}}]}, "messages": [{"role": "user", "content": "I need some detailed info, like extra stuff, about the character with ID 'char_456'. Can you help?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_extra_character_details", "arguments": "{\"is_id\": \"char_456\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "theme_detail", "description": "Fetches the details of a theme using its ID from the specified API.", "parameters": {"dtid": {"description": "The ID of the theme to be fetched.", "type": "int", "default": ""}}}}, {"type": "function", "function": {"name": "get_all_kfc_locations_by_state", "description": "Fetches all KFC locations in a specified state using the given RapidAPI key and returns the results.", "parameters": {"page": {"description": "The page number for paginated results.", "type": "int", "default": "0"}, "state": {"description": "The two-letter state code for which to fetch KFC locations.", "type": "str", "default": "AZ"}}}}, {"type": "function", "function": {"name": "get_models", "description": "Fetches all models from a given manufacturer using the Toolbench RapidAPI service.", "parameters": {"manufacturer": {"description": "The name of the manufacturer for which to retrieve models.", "type": "str", "default": "Audi"}}}}, {"type": "function", "function": {"name": "obd2_code", "description": "Retrieve the human-readable version of a requested OBD2 code using the Toolbench RapidAPI.", "parameters": {"code": {"description": "The OBD2 code to be translated into human-readable format.", "type": "str", "default": "P0001"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_models", "arguments": "{\"manufacturer\": \"Toyota\"}"}}, {"type": "function", "function": {"name": "obd2_code", "arguments": "{\"code\": \"P0420\"}"}}]}, "messages": [{"role": "user", "content": "Retrieve all car models from the manufacturer 'Toyota' and translate the OBD2 code 'P0420' into human-readable format."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_models", "arguments": "{\"manufacturer\": \"Toyota\"}"}}, {"type": "function", "function": {"name": "obd2_code", "arguments": "{\"code\": \"P0420\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_generations_by_model_id", "description": "Returns a list of generations for a given car model specified by its model ID.", "parameters": {"modelid": {"description": "The ID of the car model for which generations are to be retrieved.", "type": "int", "default": ""}}}}, {"type": "function", "function": {"name": "app_reviews", "description": "Fetches app reviews from a specified app store using various filters.", "parameters": {"app_id": {"description": "The app ID for which to get reviews.", "type": "str", "default": "com.snapchat.android"}, "device": {"description": "Only return reviews made on a specific device type. Allowed values are `PHONE`, `TABLET`, `CHROMEBOOK`. Default is `PHONE`.", "type": "str, optional", "default": ""}, "region": {"description": "The country code to use, specified as a 2-letter code (ISO 3166-1 alpha-2). Default is `us`.", "type": "str, optional", "default": "us"}, "sort_by": {"description": "How to sort the reviews in the results. Allowed values are `MOST_RELEVANT`, `NEWEST`, `RATING`. Default is `MOST_RELEVANT`.", "type": "str, optional", "default": ""}, "rating": {"description": "Only return reviews with a certain star rating. Allowed values are `ANY`, `ONE_STAR`, `TWO_STARS`, `THREE_STARS`, `FOUR_STARS`, `FIVE_STARS`. Default is `ANY`.", "type": "str, optional", "default": ""}, "limit": {"description": "Maximum number of reviews in the results. Default is 10.", "type": "int, optional", "default": "10"}, "cursor": {"description": "Specify a cursor from the previous request to get the next set of results.", "type": "str, optional", "default": ""}, "language": {"description": "The language to use, specified as a 2-letter language code (ISO 639-1 alpha-2). Default is `en`.", "type": "str, optional", "default": "en"}}}}, {"type": "function", "function": {"name": "summary", "description": "Fetches a summary of property records by units given an address.", "parameters": {"number": {"description": "The street number of the property.", "type": "str", "default": "220"}, "street": {"description": "The name of the street.", "type": "str", "default": "Central Park S"}, "zipcode": {"description": "The zipcode of the property. Defaults to '10019'.", "type": "str, optional", "default": "10019"}}}}, {"type": "function", "function": {"name": "getpeople", "description": "Fetches Power BI influencers data from the specified page using the RapidAPI service.", "parameters": {"page": {"description": "The page number to retrieve Power BI influencers from.", "type": "int", "default": "1"}}}}, {"type": "function", "function": {"name": "steps", "description": "Fetches a random selection of WikiHow steps.", "parameters": {"count": {"description": "The number of step strings to retrieve (maximum 100).", "type": "int", "default": "3"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "app_reviews", "arguments": "{\"app_id\": \"com.whatsapp\", \"device\": \"PHONE\", \"region\": \"de\", \"sort_by\": \"MOST_RELEVANT\", \"limit\": 25}"}}, {"type": "function", "function": {"name": "steps", "arguments": "{\"count\": 15}"}}]}, "messages": [{"role": "user", "content": "Retrieve the latest 25 reviews of the WhatsApp app on a phone in Germany, sorted by most relevant, and fetch 15 random WikiHow steps."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "app_reviews", "arguments": "{\"app_id\": \"com.whatsapp\", \"device\": \"PHONE\", \"region\": \"de\", \"sort_by\": \"MOST_RELEVANT\", \"limit\": 25}"}}, {"type": "function", "function": {"name": "steps", "arguments": "{\"count\": 15}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "getteam", "description": "Fetches the details of an NHL team based on the provided team ID, with optional query parameters to expand the response and specify the season.", "parameters": {"is_id": {"description": "The ID of the team.", "type": "int", "default": 28}, "expand": {"description": "Additional data to expand in the response. Defaults to 'team.roster'.", "type": "str, optional", "default": "team.roster"}, "season": {"description": "The specific season for which to return team data. Defaults to 20172018.", "type": "int, optional", "default": 20172018}}}}, {"type": "function", "function": {"name": "leagueshotactionsareasregularseason", "description": "Retrieve the shot actions areas for a specific basketball league tournament during the regular season.", "parameters": {"tournamentid": {"description": "The unique identifier for the tournament.", "type": "int", "default": 132}, "seasonid": {"description": "The unique identifier for the season.", "type": "int", "default": 45096}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getteam", "arguments": "{\"is_id\": 7, \"expand\": \"team.roster\", \"season\": 20232024}"}}, {"type": "function", "function": {"name": "leagueshotactionsareasregularseason", "arguments": "{\"tournamentid\": 7, \"seasonid\": 20222023}"}}]}, "messages": [{"role": "user", "content": "Provide the details of the NHL team with ID 7, including their roster and statistics for the 2023-2024 season. Also, retrieve the shot actions areas for the NBA regular season in 2022-2023 for the tournament with ID 7."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getteam", "arguments": "{\"is_id\": 7, \"expand\": \"team.roster\", \"season\": 20232024}"}}, {"type": "function", "function": {"name": "leagueshotactionsareasregularseason", "arguments": "{\"tournamentid\": 7, \"seasonid\": 20222023}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "analyze_social_group_dynamics", "description": "Analyzes the social dynamics within a group based on the personality traits and group size.", "parameters": {"total": {"description": "The total group size.", "type": "int"}, "extroverts": {"description": "The number of extroverted members in the group.", "type": "int"}, "introverts": {"description": "The number of introverted members in the group.", "type": "int"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "analyze_social_group_dynamics", "arguments": "{\"total\": 20, \"extroverts\": 12, \"introverts\": 8}"}}]}, "messages": [{"role": "user", "content": "In a group of 20 people, how does the presence of 12 extroverts and 8 introverts affect social dynamics?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "analyze_social_group_dynamics", "arguments": "{\"total\": 20, \"extroverts\": 12, \"introverts\": 8}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "user_likes", "description": "Fetches the liked tweets of a specified user from the Twitter API using RapidAPI.", "parameters": {"user_id": {"description": "The ID of the user for whom to fetch liked tweets.", "type": "str", "default": "44196397"}, "limit": {"description": "The maximum number of liked tweets to return. Defaults to 40.", "type": "int, optional", "default": "40"}, "cursor": {"description": "The cursor for pagination to fetch the next set of results. Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "get_user_follower_list", "description": "Fetches the follower list for a specified user from the TikTok API.", "parameters": {"user_id": {"description": "The ID of the user whose followers are to be fetched.", "type": "str", "default": "107955"}, "count": {"description": "The number of followers to retrieve, with a maximum of 200. Defaults to '50'.", "type": "str, optional", "default": "50"}, "time": {"description": "A timestamp indicating the starting point for the followers list. If there are more followers to retrieve, this value should be updated. Defaults to '0'.", "type": "str, optional", "default": "0"}}}}, {"type": "function", "function": {"name": "count", "description": "Fetches the total number of expired followers from an OnlyFans API endpoint.", "parameters": {"signstart": {"description": "The start of the signature used for authorization.", "type": "str", "default": ""}, "apptoken": {"description": "The application token.", "type": "str", "default": ""}, "signend": {"description": "The end of the signature used for authorization.", "type": "str", "default": ""}, "xbc": {"description": "The XBC token.", "type": "str", "default": ""}, "timezone": {"description": "The timezone setting.", "type": "str", "default": "America/Los_Angeles"}, "useragent": {"description": "The user agent string.", "type": "str", "default": ""}, "auth_id": {"description": "The authentication ID.", "type": "str", "default": "729369"}, "sess": {"description": "The session ID.", "type": "str", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "user_likes", "arguments": "{\"user_id\": \"1111111111\", \"limit\": 40, \"cursor\": \"previous_cursor_value\"}"}}, {"type": "function", "function": {"name": "get_user_follower_list", "arguments": "{\"user_id\": \"zzzzzzzzzz\", \"count\": \"100\", \"time\": \"previous_time_value\"}"}}]}, "messages": [{"role": "user", "content": "Retrieve the next set of liked tweets for user '1111111111' and the subsequent 100 followers for user 'zzzzzzzzzz' on TikTok."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "user_likes", "arguments": "{\"user_id\": \"1111111111\", \"limit\": 40, \"cursor\": \"previous_cursor_value\"}"}}, {"type": "function", "function": {"name": "get_user_follower_list", "arguments": "{\"user_id\": \"zzzzzzzzzz\", \"count\": \"100\", \"time\": \"previous_time_value\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "resort_view", "description": "Fetches and returns information about a specific resort using the RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the resort to fetch information for.", "type": "str", "default": "whistler-blackcomb"}}}}, {"type": "function", "function": {"name": "list_of_room_types", "description": "Returns data related to room types from the Booking.com API. This function optionally takes a room type ID and an API key to fetch specific room type details.", "parameters": {"room_type_id": {"description": "The ID of the room type to be retrieved. Defaults to None.", "type": "str, optional", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "list_of_room_types", "arguments": "{\"room_type_id\": \"RT008\"}"}}, {"type": "function", "function": {"name": "resort_view", "arguments": "{\"is_id\": \"SKI013\"}"}}]}, "messages": [{"role": "user", "content": "Can you list the room types for 'RT008' and provide information about the resort 'SKI013'?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "list_of_room_types", "arguments": "{\"room_type_id\": \"RT008\"}"}}, {"type": "function", "function": {"name": "resort_view", "arguments": "{\"is_id\": \"SKI013\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "equity_splits", "description": "Fetches the splits history data for a given security from the Quotient API.", "parameters": {"symbol": {"description": "The symbol of the asset to look for, e.g., `AAPL` (Apple Inc), `MSFT` (Microsoft Corporation).", "type": "str", "default": "MSFT"}, "is_from": {"description": "The query start date (supported format is **YYYY-mm-dd**), e.g., `2019-01-01`.", "type": "str", "default": "1991-01-01"}, "to": {"description": "The query end date (supported format is **YYYY-mm-dd**), e.g., `2020-04-17`.", "type": "str", "default": "2020-04-17"}}}}, {"type": "function", "function": {"name": "typical_price", "description": "Fetches the Typical Price Indicator for a given market, exchange, symbol, and interval.", "parameters": {"market": {"description": "The market type. Available options are 'spot', 'usdt-perpetual', and 'inverse-perpetual'.", "type": "str", "default": "spot"}, "exchange": {"description": "The exchange name.", "type": "str", "default": "binance"}, "symbol": {"description": "The symbol representing the security (e.g., \"BTCUSD\").", "type": "str", "default": "btcusdt"}, "interval": {"description": "The interval for which the typical price is calculated (e.g., '1m', '5m', '1h').", "type": "str", "default": "1m"}, "backtracks": {"description": "The number of intervals back to retrieve. Default is 1.", "type": "int, optional", "default": "1"}, "length": {"description": "The number of periods used in calculating the typical price. Default is 18.", "type": "int, optional", "default": "18"}, "is_from": {"description": "The start time in Unix timestamp format. Default is '1683895800'.", "type": "str, optional", "default": "1683895800"}}}}, {"type": "function", "function": {"name": "get_exchange_rate", "description": "Fetches the exchange rate between two currency codes using the RapidAPI service.", "parameters": {"to": {"description": "The target currency code for which you want to get the exchange rate.", "type": "str", "default": ""}, "is_from": {"description": "The base currency code from which you are converting.", "type": "str", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_exchange_rate", "arguments": "{\"to\": \"GBP\", \"is_from\": \"EUR\"}"}}, {"type": "function", "function": {"name": "equity_splits", "arguments": "{\"symbol\": \"GOOGL\", \"is_from\": \"2017-01-01\", \"to\": \"2019-12-31\"}"}}]}, "messages": [{"role": "user", "content": "Get the exchange rate from EUR to GBP, and find the equity splits history data for Alphabet Inc. from the year 2017 to 2019."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_exchange_rate", "arguments": "{\"to\": \"GBP\", \"is_from\": \"EUR\"}"}}, {"type": "function", "function": {"name": "equity_splits", "arguments": "{\"symbol\": \"GOOGL\", \"is_from\": \"2017-01-01\", \"to\": \"2019-12-31\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "today", "description": "Fetches the treasure of the day from the Uncovered Treasure API.", "parameters": {"callback": {"description": "Optional JSONP callback for the request. Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "downloadmovie", "description": "Downloads a movie in the specified format using the given parameters.", "parameters": {"is_id": {"description": "Unique identifier for the movie.", "type": "str", "default": "VXvX5"}, "format": {"description": "Format to download the movie in. Supported formats are 'mp4', 'webm', or 'flv'.", "type": "str", "default": "mp4"}, "hq": {"description": "If set to True, downloads a higher-quality version of the movie. This is only valid for 'mp4' format.", "type": "bool, optional", "default": "checked"}}}}, {"type": "function", "function": {"name": "onyomi_reading", "description": "Fetches Kanji information based on the provided Onyomi (O-N) reading using the KanjiaLive API.", "parameters": {"on": {"description": "The Onyomi reading of the Kanji, provided in Katakana or romaji.", "type": "str", "default": "\u30b7\u30f3"}}}}, {"type": "function", "function": {"name": "getmediumquestion", "description": "Fetches the number of medium-level questions solved by the given user from the LeetCode API.", "parameters": {"username": {"description": "The username of the LeetCode user whose medium-level questions solved count is to be fetched.", "type": "str", "default": "mujtabah258"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "today", "arguments": "{}"}}]}, "messages": [{"role": "user", "content": "Can you fetch the treasure of the day without specifying a JSONP callback?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "today", "arguments": "{}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "light_travel_time", "description": "Calculate the time taken for light to travel from one celestial body to another.", "parameters": {"distance_in_light_years": {"description": "The distance between the two celestial bodies in light years.", "type": "int", "default": 299792458}, "speed_of_light": {"description": "The speed of light in vacuum, in m/s. Default value is 299792458 m/s.", "type": "int", "default": 299792458}}}}, {"type": "function", "function": {"name": "mean_confidence_interval", "description": "Calculates the confidence interval for a sample mean.", "parameters": {"std_dev": {"description": "The standard deviation of the sample.", "type": "float", "default": 0.95}, "sample_size": {"description": "The size of the sample.", "type": "int", "default": 0.95}, "mean": {"description": "The mean of the sample.", "type": "float"}, "confidence": {"description": "The desired confidence level. Default is 0.95.", "type": "float, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "light_travel_time", "arguments": "{\"distance_in_light_years\": 5000}"}}, {"type": "function", "function": {"name": "mean_confidence_interval", "arguments": "{\"std_dev\": 12, \"sample_size\": 150, \"mean\": 60, \"confidence\": 0.98}"}}]}, "messages": [{"role": "user", "content": "How long does light take to travel from a quasar 5000 light years away? Also, calculate the 98% confidence interval for a population with a mean of 60, a standard deviation of 12, and a sample size of 150."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "light_travel_time", "arguments": "{\"distance_in_light_years\": 5000}"}}, {"type": "function", "function": {"name": "mean_confidence_interval", "arguments": "{\"std_dev\": 12, \"sample_size\": 150, \"mean\": 60, \"confidence\": 0.98}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_by_common_name", "description": "Retrieves all plants that match a given common plant name using the House Plants API on RapidAPI.", "parameters": {"common_name": {"description": "Common name of the plant to search for. Default is 'coralberry'.", "type": "str", "default": "coralberry"}}}}, {"type": "function", "function": {"name": "get_all_kfc_locations", "description": "Fetches a list of KFC locations from the KFC Locations API for a given page number.", "parameters": {"page": {"description": "The page number of results to retrieve, with each page typically containing 10 results.", "type": "int", "default": "0"}}}}, {"type": "function", "function": {"name": "get_all_family_by_brand_name", "description": "Fetches all family names associated with a given brand name from the watch database via the RapidAPI service.", "parameters": {"brandname": {"description": "The name of the brand for which to fetch family names.", "type": "str", "default": "Omega"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_all_kfc_locations", "arguments": "{\"page\": 1}"}}, {"type": "function", "function": {"name": "get_all_kfc_locations", "arguments": "{\"page\": 5}"}}]}, "messages": [{"role": "user", "content": "Please provide the KFC locations from page 1 and page 5 of the KFC locations API."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_all_kfc_locations", "arguments": "{\"page\": 1}"}}, {"type": "function", "function": {"name": "get_all_kfc_locations", "arguments": "{\"page\": 5}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "bus_trolley_locations", "description": "Retrieves the current bus and trolley locations for a specified route.", "parameters": {"route": {"description": "The route identifier for which to retrieve bus and trolley locations.", "type": "str", "default": "17"}}}}, {"type": "function", "function": {"name": "locations_v3_search", "description": "Search for related locations and suggestions based on the provided query string using the RapidAPI 'locations/v3/search' endpoint.", "parameters": {"q": {"description": "The query string representing names of countries, cities, districts, places, etc.", "type": "str", "default": "new york"}, "langid": {"description": "The language identifier. Default is 1033.", "type": "int, optional", "default": "1033"}, "siteid": {"description": "The site identifier. Default is 300000001.", "type": "int, optional", "default": "300000001"}, "locale": {"description": "The locale code. Default is 'en_US'.", "type": "str, optional", "default": "en_US"}}}}, {"type": "function", "function": {"name": "get_fare", "description": "Retrieves the fare details for a specified train number and route using the IRCTC RapidAPI service.", "parameters": {"trainno": {"description": "The train number for which the fare is to be retrieved.", "type": "int", "default": "19038"}, "tostationcode": {"description": "The station code of the destination.", "type": "str", "default": "BVI"}, "fromstationcode": {"description": "The station code of the starting station.", "type": "str", "default": "ST"}}}}, {"type": "function", "function": {"name": "hotel_details", "description": "Fetches detailed information about a specified hotel from the Priceline API.", "parameters": {"hotel_id": {"description": "The PPN Hotel ID identifying the desired property.", "type": "str", "default": "700008849"}, "airport_limit": {"description": "Limit the number of nearby airports included in the response.", "type": "int, optional", "default": ""}, "check_in": {"description": "Check-in date in 'YYYY-MM-DD' or 'MM/DD/YYYY' format.", "type": "str, optional", "default": ""}, "promo": {"description": "Flag to include promotional data. Default is False.", "type": "bool, optional", "default": true}, "photos": {"description": "Flag to include photo data. Default is False.", "type": "bool, optional", "default": "1"}, "videos": {"description": "Flag to include video data. Default is False.", "type": "bool, optional", "default": true}, "guest_score_breakdown": {"description": "Flag to include guest score breakdown data. Default is False.", "type": "bool, optional", "default": true}, "reviews": {"description": "Flag to include hotel review data. Default is False.", "type": "bool, optional", "default": "1"}, "city_limit": {"description": "Limit the number of cities included in the response.", "type": "int, optional", "default": ""}, "sid": {"description": "Session ID. Default is 'iSiX639'.", "type": "str, optional", "default": "iSiX639"}, "important_info": {"description": "Flag to include extra details about the hotel. Default is False.", "type": "bool, optional", "default": true}, "recent": {"description": "Flag to include recent sales data. Default is False.", "type": "bool, optional", "default": true}, "poi_limit": {"description": "Limit the number of points of interest included in the response.", "type": "int, optional", "default": ""}, "plugins": {"description": "Flag to include plugin information. Default is False.", "type": "bool, optional", "default": true}, "image_size": {"description": "The size of the images returned. Options are 'small', 'medium', or 'large'.", "type": "str, optional", "default": ""}, "id_lookup": {"description": "Flag to search non-PPN Hotel IDs. Default is False.", "type": "bool, optional", "default": true}, "check_out": {"description": "Check-out date in 'YYYY-MM-DD' or 'MM/DD/YYYY' format.", "type": "str, optional", "default": ""}, "currency": {"description": "The currency format for the results, in ISO 4217 format.", "type": "str, optional", "default": ""}, "nearby": {"description": "Flag to include nearby location data such as city, airport, and points of interest. Default is False.", "type": "bool, optional", "default": true}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "locations_v3_search", "arguments": "{\"q\": \"Sydney\", \"siteid\": 300000001, \"locale\": \"en_US\", \"langid\": 1033}"}}]}, "messages": [{"role": "user", "content": "Find locations related to 'Sydney' in English and limit the results to 5."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "locations_v3_search", "arguments": "{\"q\": \"Sydney\", \"siteid\": 300000001, \"locale\": \"en_US\", \"langid\": 1033}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "calculate_distance", "description": "Calculates the Euclidean distance between two points in n-dimensional space.", "parameters": {"point1": {"description": "The coordinates of the first point.", "type": "List[float]"}, "point2": {"description": "The coordinates of the second point.", "type": "List[float]"}}}}, {"type": "function", "function": {"name": "sort_numbers", "description": "Sorts a list of numbers in ascending or descending order.", "parameters": {"numbers": {"description": "The list of numbers to be sorted.", "type": "List[float]"}, "descending": {"description": "If True, sorts the numbers in descending order. Defaults to False.", "type": "bool, optional"}}}}, {"type": "function", "function": {"name": "can_attend_all_meetings", "description": "Determines if a person can attend all meetings given a list of meeting time intervals.", "parameters": {"intervals": {"description": "A list of meeting time intervals, where each interval is represented as [start_time, end_time].", "type": "List[List[int]]"}}}}, {"type": "function", "function": {"name": "final_velocity", "description": "Calculates the final velocity of an object given its initial velocity, acceleration, and time.", "parameters": {"initial_velocity": {"description": "The initial velocity of the object.", "type": "float"}, "acceleration": {"description": "The acceleration of the object.", "type": "float"}, "time": {"description": "The time elapsed.", "type": "float"}}}}, {"type": "function", "function": {"name": "average", "description": "Calculates the arithmetic mean of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[float]"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_distance", "arguments": "{\"point1\": [1, 2, 3], \"point2\": [4, 5, 6]}"}}, {"type": "function", "function": {"name": "sort_numbers", "arguments": "{\"numbers\": [3.2, 1.5, 2.7], \"descending\": true}"}}]}, "messages": [{"role": "user", "content": "Calculate the distance between two points in 3D space, where the first point is (1, 2, 3) and the second point is (4, 5, 6). Also, sort the list [3.2, 1.5, 2.7] in descending order."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_distance", "arguments": "{\"point1\": [1, 2, 3], \"point2\": [4, 5, 6]}"}}, {"type": "function", "function": {"name": "sort_numbers", "arguments": "{\"numbers\": [3.2, 1.5, 2.7], \"descending\": true}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "main_endpoint", "description": "Fetches product information from the Amazon Pricing and Product Info API using the given ASIN and domain.", "parameters": {"asin": {"description": "The Amazon Standard Identification Number of the product.", "type": "str", "default": "B07GR5MSKD"}, "domain": {"description": "The domain from which to fetch the product information (e.g., 'com', 'co.uk').", "type": "str", "default": "de"}}}}, {"type": "function", "function": {"name": "auto_complete", "description": "Fetches auto-complete suggestions for a given word using an external API.", "parameters": {"word": {"description": "The term or phrase for which to get auto-complete suggestions.", "type": "str", "default": "bikini top"}, "currency": {"description": "The 3-letter currency code. Defaults to 'USD'.", "type": "str, optional", "default": "USD"}, "country": {"description": "The 2-letter country code. Defaults to 'US'.", "type": "str, optional", "default": "US"}, "language": {"description": "The 2-letter language code. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "main_endpoint", "arguments": "{\"asin\": \"B07D2J4YZS\", \"domain\": \"com\"}"}}, {"type": "function", "function": {"name": "auto_complete", "arguments": "{\"word\": \"book\", \"currency\": \"USD\", \"country\": \"US\", \"language\": \"en\"}"}}]}, "messages": [{"role": "user", "content": "Fetch details for the product with ASIN B07D2J4YZS from Amazon.com. Also, what are the auto-complete suggestions for 'book' in USD, US, and English?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "main_endpoint", "arguments": "{\"asin\": \"B07D2J4YZS\", \"domain\": \"com\"}"}}, {"type": "function", "function": {"name": "auto_complete", "arguments": "{\"word\": \"book\", \"currency\": \"USD\", \"country\": \"US\", \"language\": \"en\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "search_by_keyword", "description": "Searches for products using a specified keyword on the 1688 platform through the Taobao-Tmall Product Detail API.", "parameters": {"keyword": {"description": "The search keyword to look for products.", "type": "str", "default": "\u6d77\u4e45\u6c34\u74f6"}, "page": {"description": "The page number for paginated results.", "type": "int", "default": "1"}}}}, {"type": "function", "function": {"name": "products_detail", "description": "Fetches detailed information of a product based on the given product ID and optional query parameters.", "parameters": {"goods_id": {"description": "The value of 'goods_id' field returned from the .../products/list or .../products/search endpoint.", "type": "str", "default": "2506647"}, "currency": {"description": "The 3-letter currency code. Defaults to 'USD'.", "type": "str, optional", "default": "USD"}, "country": {"description": "The 2-letter country code. Defaults to 'US'.", "type": "str, optional", "default": "US"}, "language": {"description": "The 2-letter language code. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "search_by_keyword", "arguments": "{\"keyword\": \"LED lights\", \"page\": 1}"}}, {"type": "function", "function": {"name": "products_detail", "arguments": "{\"goods_id\": \"2468101214\", \"currency\": \"EUR\", \"country\": \"US\", \"language\": \"en\"}"}}]}, "messages": [{"role": "user", "content": "Please search for 'LED lights' on the 1688 platform and provide me with the details of a product from Shein with ID '2468101214' in Euros."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "search_by_keyword", "arguments": "{\"keyword\": \"LED lights\", \"page\": 1}"}}, {"type": "function", "function": {"name": "products_detail", "arguments": "{\"goods_id\": \"2468101214\", \"currency\": \"EUR\", \"country\": \"US\", \"language\": \"en\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "airport_info", "description": "Fetches and returns detailed information about an airport using its IATA code from the Airports Info API.", "parameters": {"iata": {"description": "The IATA code of the airport for which information is being requested.", "type": "str", "default": "JFK"}}}}, {"type": "function", "function": {"name": "get_currency", "description": "Fetches the currency information from the Airbnb Search API.", "parameters": {"language_code": {"description": "The language code to use for retrieving the currency information from the API. Defaults to 'en-US'.", "type": "str", "default": "en-US"}}}}, {"type": "function", "function": {"name": "listing_availability", "description": "Retrieve listing availability and stay length rules for a specified month and year from the Airbnb API.", "parameters": {"year": {"description": "The year for which to retrieve listing availability.", "type": "int", "default": "2024"}, "is_id": {"description": "The unique identifier for the listing.", "type": "str", "default": "619966061834034729"}, "month": {"description": "The month for which to retrieve listing availability.", "type": "int", "default": "1"}}}}, {"type": "function", "function": {"name": "webcams_list_region_region_region", "description": "Fetch a list of webcams for the specified region(s) with optional parameters for language and content detail.", "parameters": {"region": {"description": "A comma-separated list of ISO 3166-1-alpha-2 country codes and region codes separated by a dot.", "type": "str", "default": ""}, "lang": {"description": "The language code to localize the results, if available. Default is 'en'.", "type": "str, optional", "default": "en"}, "show": {"description": "Specifies the content details to include in the response. Default is 'webcams:image,location'.", "type": "str, optional", "default": "webcams:image,location"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "listing_availability", "arguments": "{\"year\": 2023, \"is_id\": \"123456789\", \"month\": 8}"}}]}, "messages": [{"role": "user", "content": "Check the availability of a specific Airbnb listing with ID '123456789' for the month of August 2023."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "listing_availability", "arguments": "{\"year\": 2023, \"is_id\": \"123456789\", \"month\": 8}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "email_endpoint", "description": "Queries an email bounce detection API to check the deliverability status of an email address.", "parameters": {"email_string": {"description": "The email address to be checked.", "type": "str", "default": "mike.2023@gmail.com"}}}}, {"type": "function", "function": {"name": "verify_an_email", "description": "Verifies a single email address using the Blaze Verify API. If a verification request takes longer than the specified timeout, retries are allowed for up to 5 minutes. The verification result is returned once available.", "parameters": {"email": {"description": "The email address to be verified.", "type": "str", "default": ""}, "accept_all": {"description": "Whether to perform an accept-all check, which can increase response time. Default is False.", "type": "bool, optional", "default": ""}, "smtp": {"description": "Whether to include the SMTP step in the verification, which can also increase response time. Default is True.", "type": "bool, optional", "default": ""}, "timeout": {"description": "The timeout in seconds to wait for a response. Minimum is 2, and maximum is 30. Default is 5.", "type": "int, optional", "default": ""}}}}, {"type": "function", "function": {"name": "validate_email", "description": "Validates an email address using the Easy Email Validation API provided by RapidAPI.", "parameters": {"email": {"description": "The email address to validate.", "type": "str", "default": "example@gmail.com"}}}}, {"type": "function", "function": {"name": "bouncer_email_checker", "description": "Validates an email address using the Bouncer Email Checker API.", "parameters": {"email": {"description": "The email address to be validated.", "type": "str", "default": "example@gmail.com"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "validate_email", "arguments": "{\"email\": \"test@example.com\"}"}}]}, "messages": [{"role": "user", "content": "Validate the email address 'test@example.com' using the Easy Email Validation API."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "validate_email", "arguments": "{\"email\": \"test@example.com\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "calculate_electric_field", "description": "Calculate the electric field produced by a charge at a certain distance.", "parameters": {"charge": {"description": "Charge in coulombs producing the electric field.", "type": "int", "default": 8.854e-12}, "distance": {"description": "Distance from the charge in meters where the field is being measured.", "type": "int", "default": 8.854e-12}, "permitivity": {"description": "Permitivity of the space where field is being calculated, default is 8.854e-12.", "type": "float"}}}}, {"type": "function", "function": {"name": "integrate", "description": "Calculate the area under a curve for a specified function between two x values.", "parameters": {"function": {"description": "The function to integrate, represented as a string. For example, 'x^3'", "type": "str", "default": "trapezoid"}, "start_x": {"description": "The starting x-value to integrate over.", "type": "int", "default": "trapezoid"}, "end_x": {"description": "The ending x-value to integrate over.", "type": "int"}, "method": {"description": "The method of numerical integration to use. Choices are 'trapezoid' or 'simpson'.", "type": "str"}}}}, {"type": "function", "function": {"name": "calculate_investment_return", "description": "Calculates the return on investment based on the initial deposit amount, annual interest rate, and investment period.", "parameters": {"initial_amount": {"description": "The initial deposit amount.", "type": "int"}, "interest_rate": {"description": "The annual interest rate provided by the bank.", "type": "float"}, "num_years": {"description": "The number of years the money is invested.", "type": "int"}}}}, {"type": "function", "function": {"name": "find_n_largest_numbers", "description": "Finds the n largest numbers in a list.", "parameters": {"nums": {"description": "The list of numbers.", "type": "List[int]"}, "n": {"description": "The number of largest numbers to find.", "type": "int"}}}}, {"type": "function", "function": {"name": "sort_numbers", "description": "Sorts a list of numbers in ascending or descending order.", "parameters": {"numbers": {"description": "The list of numbers to be sorted.", "type": "List[float]"}, "descending": {"description": "If True, sorts the numbers in descending order. Defaults to False.", "type": "bool, optional"}}}}, {"type": "function", "function": {"name": "solve_quadratic", "description": "Computes the roots of a quadratic equation given its coefficients.", "parameters": {"a": {"description": "The coefficient of the quadratic term (x^2).", "type": "float"}, "b": {"description": "The coefficient of the linear term (x).", "type": "float"}, "c": {"description": "The constant term.", "type": "float"}}}}, {"type": "function", "function": {"name": "find_minimum_rotated_sorted_array", "description": "Finds the minimum element in a rotated sorted array.", "parameters": {"nums": {"description": "The rotated sorted array.", "type": "List[int]"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "integrate", "arguments": "{\"function\": \"x**3\", \"start_x\": 0, \"end_x\": 2, \"method\": \"simpson\"}"}}]}, "messages": [{"role": "user", "content": "Integrate the function 'x^3' from x=0 to x=2 using the Simpson's rule."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "integrate", "arguments": "{\"function\": \"x**3\", \"start_x\": 0, \"end_x\": 2, \"method\": \"simpson\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "time_zone_converter", "description": "Converts a given datetime from one time zone to another, taking into account Daylight Saving Time (DST).", "parameters": {"datetime": {"description": "The date and time in ISO 8601 format.", "type": "str", "default": "2021-03-21T20:10:00"}, "from_tzname": {"description": "The source time zone name. Defaults to 'UTC'.", "type": "str, optional", "default": "UTC"}, "to_tzname": {"description": "The target time zone name. Defaults to 'UTC'.", "type": "str, optional", "default": "UTC"}}}}, {"type": "function", "function": {"name": "market_aggressive_small_caps", "description": "Fetch data for aggressive small cap stocks with earnings growth rates greater than 25% using the mboum-finance API.", "parameters": {"start": {"description": "The starting index for fetching the data. Defaults to 0.", "type": "int, optional", "default": "0"}}}}, {"type": "function", "function": {"name": "getlistbysecuritiescode", "description": "Fetches the securities report data for a specified company using its securities code.", "parameters": {"securities_code": {"description": "The securities code of the company whose report data is to be fetched.", "type": "int", "default": "7203"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "market_aggressive_small_caps", "arguments": "{\"start\": 100}"}}]}, "messages": [{"role": "user", "content": "Fetch data for aggressive small cap stocks with earnings growth rates greater than 25% starting from index 100."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "market_aggressive_small_caps", "arguments": "{\"start\": 100}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "searchcnit", "description": "Fetches information related to a French vehicle identification number (CNIT) using the specified license plate and function.", "parameters": {"plate": {"description": "The vehicle license plate number to search for. Defaults to '021A13'.", "type": "str", "default": "021A13"}, "function": {"description": "The specific API function to call. Defaults to 'getktypefornumplatefrancemineplate'.", "type": "str", "default": "getktypefornumplatefrancemineplate"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "searchcnit", "arguments": "{\"plate\": \"789ABC\", \"function\": \"getktypefornumplatefrancemineplate\"}"}}, {"type": "function", "function": {"name": "searchcnit", "arguments": "{\"plate\": \"123XYZ\", \"function\": \"getktypefornumplatefrancemineplate\"}"}}]}, "messages": [{"role": "user", "content": "Find the information for the vehicle with license plate '789ABC' and get the k-type using the function 'getktypefornumplatefrancemineplate'. Also, find the information for the vehicle with license plate '123XYZ' using the same function."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "searchcnit", "arguments": "{\"plate\": \"789ABC\", \"function\": \"getktypefornumplatefrancemineplate\"}"}}, {"type": "function", "function": {"name": "searchcnit", "arguments": "{\"plate\": \"123XYZ\", \"function\": \"getktypefornumplatefrancemineplate\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "getteam", "description": "Fetches the details of an NHL team based on the provided team ID, with optional query parameters to expand the response and specify the season.", "parameters": {"is_id": {"description": "The ID of the team.", "type": "int", "default": 28}, "expand": {"description": "Additional data to expand in the response. Defaults to 'team.roster'.", "type": "str, optional", "default": "team.roster"}, "season": {"description": "The specific season for which to return team data. Defaults to 20172018.", "type": "int, optional", "default": 20172018}}}}, {"type": "function", "function": {"name": "leagueshotactionsareasregularseason", "description": "Retrieve the shot actions areas for a specific basketball league tournament during the regular season.", "parameters": {"tournamentid": {"description": "The unique identifier for the tournament.", "type": "int", "default": 132}, "seasonid": {"description": "The unique identifier for the season.", "type": "int", "default": 45096}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getteam", "arguments": "{\"is_id\": 6, \"expand\": \"team.roster\", \"season\": 20222023}"}}, {"type": "function", "function": {"name": "leagueshotactionsareasregularseason", "arguments": "{\"tournamentid\": 6, \"seasonid\": 20212022}"}}]}, "messages": [{"role": "user", "content": "Retrieve the details of the NHL team with ID 6 and their roster for the 2022-2023 season. Additionally, get the shot actions areas for the NBA regular season in 2021-2022 for the tournament with ID 6."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getteam", "arguments": "{\"is_id\": 6, \"expand\": \"team.roster\", \"season\": 20222023}"}}, {"type": "function", "function": {"name": "leagueshotactionsareasregularseason", "arguments": "{\"tournamentid\": 6, \"seasonid\": 20212022}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "reverse_string", "description": "Reverses the characters in a string.", "parameters": {"text": {"description": "The input string.", "type": "str"}}}}, {"type": "function", "function": {"name": "word_frequency", "description": "Calculates the frequency of each word in a text.", "parameters": {"text": {"description": "The input text.", "type": "str"}}}}, {"type": "function", "function": {"name": "is_sum_of_cubes", "description": "Checks if a number is the sum of the cubes of its digits.", "parameters": {"num": {"description": "The number to check.", "type": "int"}}}}, {"type": "function", "function": {"name": "generate_password", "description": "Generates a random password of specified length and character types.", "parameters": {"length": {"description": "The length of the password. Defaults to 12.", "type": "int, optional", "default": 12}, "include_special": {"description": "Whether to include special characters in the password. Defaults to True.", "type": "bool, optional", "default": true}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "generate_password", "arguments": "{\"length\": 10, \"include_special\": false}"}}]}, "messages": [{"role": "user", "content": "I need a password with a length of 10 characters, but this time without any special characters."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "generate_password", "arguments": "{\"length\": 10, \"include_special\": false}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "product_offers", "description": "Fetches a list of offers for a specific product on Amazon based on the given ASIN.", "parameters": {"asin": {"description": "Product ASIN to get offers for. Supports batching up to 10 ASINs in a single request, separated by a comma (e.g., 'B08PPDJWC8,B07ZPKBL9V,B08BHXG144').", "type": "str", "default": "B07ZPKBL9V"}, "delivery": {"description": "[EXPERIMENTAL] Find products with specific delivery options, specified as a comma-delimited list. Valid values: 'PRIME_ELIGIBLE', 'FREE_DELIVERY'. Default is None.", "type": "str, optional", "default": ""}, "limit": {"description": "Maximum number of offers to return. Default is 100.", "type": "int, optional", "default": "100"}, "product_condition": {"description": "Filter products by condition, specified as a comma-delimited list. Valid values: 'NEW', 'USED_LIKE_NEW', 'USED_VERY_GOOD', 'USED_GOOD', 'USED_ACCEPTABLE'. Default is None.", "type": "str, optional", "default": ""}, "country": {"description": "Sets the marketplace country, language, and currency. Allowed values: 'US', 'AU', 'BR', 'CA', 'CN', 'FR', 'DE', 'IN', 'IT', 'MX', 'NL', 'SG', 'ES', 'TR', 'AE', 'GB', 'JP'. Default is 'US'.", "type": "str, optional", "default": "US"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "product_offers", "arguments": "{\"asin\": \"B08BHXG144\", \"country\": \"US\"}"}}, {"type": "function", "function": {"name": "product_offers", "arguments": "{\"asin\": \"B07ZPKBL9V\", \"product_condition\": \"USED_VERY_GOOD\", \"country\": \"MX\"}"}}]}, "messages": [{"role": "user", "content": "Fetch all the offers for 'B08BHXG144' in the US and the used very good condition offers for 'B07ZPKBL9V' in Mexico."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "product_offers", "arguments": "{\"asin\": \"B08BHXG144\", \"country\": \"US\"}"}}, {"type": "function", "function": {"name": "product_offers", "arguments": "{\"asin\": \"B07ZPKBL9V\", \"product_condition\": \"USED_VERY_GOOD\", \"country\": \"MX\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "triangle_area", "description": "Computes the area of a triangle given its base and height.", "parameters": {"base": {"description": "The length of the base of the triangle.", "type": "float"}, "height": {"description": "The height of the triangle.", "type": "float"}}}}, {"type": "function", "function": {"name": "batting_average", "description": "Calculates the batting average of a baseball player based on the number of hits and at-bats.", "parameters": {"num_hits": {"description": "The number of hits.", "type": "int", "default": 3}, "num_at_bats": {"description": "The number of at-bats.", "type": "int", "default": 3}, "precision": {"description": "The number of decimal places to round the batting average. Defaults to 3.", "type": "int, optional"}}}}, {"type": "function", "function": {"name": "fibonacci_numbers", "description": "Generates the first n Fibonacci numbers.", "parameters": {"n": {"description": "The number of Fibonacci numbers to generate.", "type": "int"}}}}, {"type": "function", "function": {"name": "investment_profit", "description": "Calculates the profit from an investment based on the initial amount, annual return rate, and time.", "parameters": {"amount": {"description": "The initial investment amount.", "type": "float"}, "rate": {"description": "The annual return rate expressed as a decimal.", "type": "float"}, "years": {"description": "The number of years the investment is held.", "type": "int"}}}}, {"type": "function", "function": {"name": "california_alimony", "description": "Calculates the total alimony one spouse would have to pay to the other in California over a given duration.", "parameters": {"payor_monthly_income": {"description": "The monthly gross income of the payor spouse.", "type": "int"}, "recipient_monthly_income": {"description": "The monthly gross income of the recipient spouse.", "type": "int"}, "duration_years": {"description": "The duration of the alimony in years.", "type": "int"}}}}, {"type": "function", "function": {"name": "potential_energy", "description": "Calculates the electrostatic potential energy given the charge and voltage.", "parameters": {"charge": {"description": "The electric charge.", "type": "float"}, "voltage": {"description": "The electric potential difference (voltage).", "type": "float"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "potential_energy", "arguments": "{\"charge\": 2, \"voltage\": 100}"}}]}, "messages": [{"role": "user", "content": "Compute the electrostatic potential energy for a charge of 2 Coulombs at a voltage of 100 volts."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "potential_energy", "arguments": "{\"charge\": 2, \"voltage\": 100}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "search", "description": "Search for public repositories of a given GitHub user using the Toolbench RapidAPI.", "parameters": {"user": {"description": "The GitHub username whose public repositories are to be searched.", "type": "str", "default": "samuk-a"}}}}, {"type": "function", "function": {"name": "convert_hsl", "description": "Converts an HSL color code to other color codes such as Hex, RGB, and CMYK using the Convexity API.", "parameters": {"s": {"description": "The saturation component of the HSL color code.", "type": "int", "default": "78"}, "h": {"description": "The hue component of the HSL color code.", "type": "int", "default": "250"}, "l": {"description": "The lightness component of the HSL color code.", "type": "int", "default": "45"}}}}, {"type": "function", "function": {"name": "generate_uuid", "description": "Generates one or more UUID v4 strings with optional formatting.", "parameters": {"timestamp_first": {"description": "If set to True, the generated UUID will have the timestamp first.", "type": "bool, optional", "default": "false"}, "remove_dash": {"description": "If set to True, the generated UUIDs will not contain dashes.", "type": "bool, optional", "default": "true"}, "count": {"description": "The number of UUIDs to generate. Default is '5'.", "type": "str, optional", "default": "5"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "generate_uuid", "arguments": "{\"count\": \"10\"}"}}]}, "messages": [{"role": "user", "content": "Generate 10 UUIDs."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "generate_uuid", "arguments": "{\"count\": \"10\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "section_list", "description": "Returns a list of sections from the RapidAPI sports score service.", "parameters": {"page": {"description": "Page number to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}}}}, {"type": "function", "function": {"name": "fights", "description": "Fetches fights for either upcoming or previous events from the Spectation Sports Events API.", "parameters": {"outcome": {"description": "The outcome of the fights to filter by. Defaults to None.", "type": "str, optional", "default": ""}, "sport": {"description": "The type of sport to filter the fights by. Defaults to None.", "type": "str, optional", "default": ""}, "type": {"description": "The type of fights to fetch (e.g., 'upcoming' or 'previous'). Defaults to 'upcoming'.", "type": "str, optional", "default": "upcoming"}, "category": {"description": "The category or weight division of the fights. Defaults to None.", "type": "str, optional", "default": ""}, "event": {"description": "The ID of the event to fetch fights for. Defaults to None.", "type": "int, optional", "default": ""}, "page": {"description": "The page number of results to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}, "fighter": {"description": "The ID of the fighter to fetch fights for. Defaults to None.", "type": "int, optional", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "fights", "arguments": "{\"fighter\": 5678}"}}]}, "messages": [{"role": "user", "content": "Show me the fights for the fighter with ID 5678."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "fights", "arguments": "{\"fighter\": 5678}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "autosuggest", "description": "Fetches and returns keyword autosuggestions from the RapidAPI service.", "parameters": {"q": {"description": "The keyword to search for related suggestions. Default is 'rabbit'.", "type": "str", "default": "rabbit"}}}}, {"type": "function", "function": {"name": "vin_decoder_lite", "description": "This function decodes a given Vehicle Identification Number (VIN) using the RapidAPI VIN Decoder Lite service and returns the decoded information.", "parameters": {"vin": {"description": "The Vehicle Identification Number (VIN) to be decoded. It must be 17 characters long.", "type": "str", "default": "5YJ3E1EA6PF384836"}}}}, {"type": "function", "function": {"name": "similar", "description": "Search for visually similar images to a given image ID from a previous search result.", "parameters": {"image_id": {"description": "The image ID of the image from the search results for which to find visually similar images.", "type": "str", "default": "7TJ6HT2DAUMDFITP4LSIJLWICKWRCQOE"}, "number": {"description": "The number of similar images to retrieve. Defaults to 10.", "type": "int, optional", "default": "10"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "autosuggest", "arguments": "{\"q\": \"vegan recipes\"}"}}, {"type": "function", "function": {"name": "vin_decoder_lite", "arguments": "{\"vin\": \"WVWZZZ1JZ9M600363\"}"}}]}, "messages": [{"role": "user", "content": "What are some related keywords for 'vegan recipes' and what information can be decoded from the VIN 'WVWZZZ1JZ9M600363'?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "autosuggest", "arguments": "{\"q\": \"vegan recipes\"}"}}, {"type": "function", "function": {"name": "vin_decoder_lite", "arguments": "{\"vin\": \"WVWZZZ1JZ9M600363\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_tile_json", "description": "Returns the tile JSON for the given style type from the Mapilion Vector and Raster Map Tiles API. ", "parameters": {"type": {"description": "Style type for the tile JSON to be retrieved.", "type": "str", "default": "v3"}}}}, {"type": "function", "function": {"name": "fetch_details_of_multiple_records", "description": "Fetches details of multiple records given their IDs using the Magical Taske API.", "parameters": {"is_id": {"description": "A comma-separated string of record IDs for which to fetch details. Maximum 10 IDs allowed, no spaces between commas.", "type": "str", "default": "b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c"}}}}, {"type": "function", "function": {"name": "fetch_by_region", "description": "Fetches records by region from the Magical Taske API.", "parameters": {"region": {"description": "The region for which to fetch records.", "type": "str", "default": "Central"}, "limit": {"description": "The maximum number of records to return.", "type": "int", "default": "5"}}}}, {"type": "function", "function": {"name": "map", "description": "Fetches a map image in WMTS format based on the given parameters.", "parameters": {"tilerow": {"description": "The WMTS tile row number (latitude direction).", "type": "int", "default": "25806"}, "tilematrix": {"description": "The tile matrix, specified in the format `[EPSG code]:[Scale value]`.", "type": "str", "default": "EPSG:3857:16"}, "tilecol": {"description": "The WMTS tile column number (longitude direction).", "type": "int", "default": "58211"}, "rotationangle": {"description": "Angle to rotate the map image. Valid range is 0 to 359, default is 0.", "type": "int, optional", "default": ""}, "mapstyle": {"description": "Design of the map. Format is `[design]_[annotation size]`, default is `std_pc`.", "type": "str, optional", "default": ""}, "landmarkicon": {"description": "Display of landmark icons. `on` for display, `off` for hide, default is `off`.", "type": "str, optional", "default": ""}, "resolution": {"description": "Resolution of the map image. Values can be `1`, `2`, or `4`, default is `1`.", "type": "str, optional", "default": ""}, "contour": {"description": "Display of contour lines. `on` for display, `off` for hide, default is `on`.", "type": "str, optional", "default": ""}, "bldgname": {"description": "Display of building names. `on` for display, `off` for hide, default is `off`.", "type": "str, optional", "default": ""}, "logo": {"description": "Display of brand logos. `on` for display, `off` for hide, default is `off`.", "type": "str, optional", "default": ""}, "target": {"description": "Display contents of the map. Values can be `1` for background only, `2` for annotations only, `3` for both, default is `3`.", "type": "str, optional", "default": ""}, "format": {"description": "Output image format. Values can be `image/png` or `image/jpeg`, default is `image/png`.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "query_for_ldu_boundary_by_h3index", "description": "Queries for a Local Delivery Unit (LDU) boundary by its H3 index.", "parameters": {"h3ndex": {"description": "The H3 index used to query the LDU boundary.", "type": "int", "default": "635775751926485631"}}}}, {"type": "function", "function": {"name": "query_for_city_boundary_by_name", "description": "Queries the city boundary information by the given city name using the Boundaries API.", "parameters": {"name": {"description": "The name of the city for which to query boundary information.", "type": "str", "default": "Karlsruhe"}}}}, {"type": "function", "function": {"name": "planet_vector_tiles", "description": "Retrieves global planet vector tiles in Protocolbuffer Binary Format (PBF) from the specified map service.", "parameters": {"y": {"description": "The y coordinate (tile row) of the map tile.", "type": "str", "default": "1"}, "x": {"description": "The x coordinate (tile column) of the map tile.", "type": "str", "default": "1"}, "z": {"description": "The zoom level of the map tile.", "type": "str", "default": "1"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_tile_json", "arguments": "{\"type\": \"hillshading-v2\"}"}}]}, "messages": [{"role": "user", "content": "Retrieve the map tile JSON for the 'hillshading-v2' style."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_tile_json", "arguments": "{\"type\": \"hillshading-v2\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "sort_numbers", "description": "Sorts a list of numbers in ascending or descending order.", "parameters": {"numbers": {"description": "The list of numbers to be sorted.", "type": "List[float]"}, "descending": {"description": "If True, sorts the numbers in descending order. Defaults to False.", "type": "bool, optional"}}}}, {"type": "function", "function": {"name": "cell_density", "description": "Calculates the cell density based on the optical density (OD) and dilution factor.", "parameters": {"od": {"description": "The optical density of the sample.", "type": "float", "default": 1000000000.0}, "dilution": {"description": "The dilution factor applied to the sample.", "type": "int", "default": 1000000000.0}, "factor": {"description": "The calibration factor for converting OD to cell density. Defaults to 1e9.", "type": "float, optional"}}}}, {"type": "function", "function": {"name": "is_power", "description": "Checks if a number is a power of a given base.", "parameters": {"num": {"description": "The number to check.", "type": "int"}, "base": {"description": "The base to check against.", "type": "int"}}}}, {"type": "function", "function": {"name": "light_travel_time", "description": "Calculate the time taken for light to travel from one celestial body to another.", "parameters": {"distance_in_light_years": {"description": "The distance between the two celestial bodies in light years.", "type": "int", "default": 299792458}, "speed_of_light": {"description": "The speed of light in vacuum, in m/s. Default value is 299792458 m/s.", "type": "int", "default": 299792458}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "sort_numbers", "arguments": "{\"numbers\": [4.2, 2.3, 7.8, 1.2, 5.6], \"descending\": true}"}}]}, "messages": [{"role": "user", "content": "Sort the following list of numbers in descending order: [4.2, 2.3, 7.8, 1.2, 5.6]."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "sort_numbers", "arguments": "{\"numbers\": [4.2, 2.3, 7.8, 1.2, 5.6], \"descending\": true}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "getrandomsolution", "description": "Fetches a JSON data consisting of a random optimal solution for a given cube position.", "parameters": {"position": {"description": "The cube position for which to retrieve the random optimal solution.", "type": "str", "default": "GBWGYOGYRYOORWROBRWYGWBB"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getrandomsolution", "arguments": "{\"position\": \"UFR URF ULF ULB UDB ULB DBL DFR DFL UBR\"}"}}]}, "messages": [{"role": "user", "content": "What is a random optimal solution for the cube position 'UFR URF ULF ULB UDB ULB DBL DFR DFL UBR'?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getrandomsolution", "arguments": "{\"position\": \"UFR URF ULF ULB UDB ULB DBL DFR DFL UBR\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "cell_density", "description": "Calculates the cell density based on the optical density (OD) and dilution factor.", "parameters": {"od": {"description": "The optical density of the sample.", "type": "float", "default": 1000000000.0}, "dilution": {"description": "The dilution factor applied to the sample.", "type": "int", "default": 1000000000.0}, "factor": {"description": "The calibration factor for converting OD to cell density. Defaults to 1e9.", "type": "float, optional"}}}}, {"type": "function", "function": {"name": "independent_samples_t_test", "description": "Conducts a two-sample independent t-test and returns the t-statistic, p-value, and conclusion.", "parameters": {"sample1": {"description": "The first sample of observations.", "type": "List[float]", "default": 0.05}, "sample2": {"description": "The second sample of observations.", "type": "List[float]", "default": 0.05}, "alpha": {"description": "The significance level of the test. Defaults to 0.05.", "type": "float, optional"}}}}, {"type": "function", "function": {"name": "is_valid_sudoku", "description": "Checks if a 9x9 Sudoku board is valid.", "parameters": {"board": {"description": "The Sudoku board represented as a 2D list of strings.", "type": "List[List[str]]"}}}}, {"type": "function", "function": {"name": "numerical_derivative", "description": "Estimates the derivative of a function at a given point using the central difference formula.", "parameters": {"function": {"description": "The function to calculate the derivative of.", "type": "Callable[[float], float]"}, "x": {"description": "The point at which to estimate the derivative.", "type": "float"}}}}, {"type": "function", "function": {"name": "euclidean_distance", "description": "Computes the Euclidean distance between two points in a 2D plane.", "parameters": {"point_a": {"description": "The coordinates of the first point (x, y).", "type": "Tuple[float, float]"}, "point_b": {"description": "The coordinates of the second point (x, y).", "type": "Tuple[float, float]"}}}}, {"type": "function", "function": {"name": "trapezoidal_integration", "description": "Calculates the definite integral of a function using the trapezoidal rule.", "parameters": {"func": {"description": "The function to integrate, expressed as a string (e.g., \"x**2 + 2*x\").", "type": "str", "default": 10000}, "a": {"description": "The lower limit of integration.", "type": "float", "default": 10000}, "b": {"description": "The upper limit of integration.", "type": "float"}, "n": {"description": "The number of subdivisions for the trapezoidal approximation. Defaults to 10000.", "type": "int, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "numerical_derivative", "arguments": "{\"function\": \"lambda x: x ** 2 + 3 * x - 2\", \"x\": 1}"}}]}, "messages": [{"role": "user", "content": "Estimate the derivative of the function f(x) = x^2 + 3x - 2 at x = 1 using numerical methods."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "numerical_derivative", "arguments": "{\"function\": \"lambda x: x ** 2 + 3 * x - 2\", \"x\": 1}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "consulta_receita_federal", "description": "Fetch data from the Receita Federal using a given tax ID.", "parameters": {"taxid": {"description": "The tax ID to search for in the Receita Federal database.", "type": "str", "default": "37335118000180"}, "maxage": {"description": "The maximum age of the data to be fetched. Defaults to 30.", "type": "int, optional", "default": "30"}}}}, {"type": "function", "function": {"name": "search_social_links", "description": "Search for social profile links based on a given query or keywords.", "parameters": {"query": {"description": "The search query or keywords to find social profile links.", "type": "str", "default": "John Smith"}, "social_networks": {"description": "A comma-delimited list of social networks to search for.", "type": "str, optional", "default": "facebook,tiktok,instagram,snapchat,twitter,youtube,linkedin,github,pinterest"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "search_social_links", "arguments": "{\"query\": \"Fashion Blogger Jane\", \"social_networks\": \"instagram,pinterest,youtube\"}"}}]}, "messages": [{"role": "user", "content": "Find social links for 'Fashion Blogger Jane' on Instagram, Pinterest, and YouTube."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "search_social_links", "arguments": "{\"query\": \"Fashion Blogger Jane\", \"social_networks\": \"instagram,pinterest,youtube\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "reverse", "description": "Performs reverse geocoding to obtain location details from longitude and latitude coordinates.", "parameters": {"lon": {"description": "The longitude of the location to be reverse geocoded.", "type": "str", "default": "16.3523667"}, "lat": {"description": "The latitude of the location to be reverse geocoded.", "type": "str", "default": "48.200702"}, "polygon": {"description": "If specified, includes polygon details in the response.", "type": "str, optional", "default": ""}, "language": {"description": "Language for the response data. Must be a valid ISO 639-1 language code.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "en_map_v1_z_x_y_png", "description": "Download an English map tile as a PNG image from the RapidAPI offline-maptiles service.", "parameters": {"z": {"description": "Zoom factor, between 0 and 19.", "type": "int", "default": "3"}, "y": {"description": "Y tile number.", "type": "int", "default": "3"}, "x": {"description": "X tile number.", "type": "int", "default": "6"}}}}, {"type": "function", "function": {"name": "mapimage", "description": "Retrieves a map image with specified parameters such as coordinates, scale, size, and various display options.", "parameters": {"lonlat": {"description": "The latitude and longitude in the format \"longitude,latitude\".", "type": "str", "default": "139.767231,35.681196"}, "scale": {"description": "The map scale. Valid range is from 6 to 21.", "type": "int", "default": "16"}, "size": {"description": "The image size in the format \"width,height\" in pixels.", "type": "str", "default": "320,240"}, "icon": {"description": "Icon settings in the format \"[icon_type,longitude,latitude]|...\". Defaults to None.", "type": "str, optional", "default": ""}, "centericon": {"description": "Whether to display the center icon (on/off). Defaults to None (\"off\").", "type": "str, optional", "default": ""}, "logo": {"description": "Whether to display the brand logo (on/off). Defaults to None (\"off\").", "type": "str, optional", "default": ""}, "landmarkicon": {"description": "Whether to display landmark icons (on/off). Defaults to None (\"off\").", "type": "str, optional", "default": ""}, "format": {"description": "The output image format, either \"image/png\" or \"image/jpeg\". Defaults to \"image/png\".", "type": "str, optional", "default": ""}, "resolution": {"description": "The image resolution. \"1\" for standard size, \"2\" for double size. Defaults to \"1\".", "type": "str, optional", "default": ""}, "rotationangle": {"description": "The angle to rotate the map. Valid range is from 0 to 359 degrees. Defaults to 0.", "type": "int, optional", "default": ""}, "routeresultid": {"description": "The route result ID to display the route on the map. Defaults to None.", "type": "str, optional", "default": ""}, "routeicon": {"description": "Route icon settings, \"0\" for none, \"1\" for standard icons. Defaults to \"1\".", "type": "str, optional", "default": ""}, "scaler": {"description": "Whether to display the scale (on/off). Defaults to \"off\".", "type": "str, optional", "default": ""}, "bldgname": {"description": "Whether to display building names (on/off). Defaults to \"off\".", "type": "str, optional", "default": ""}, "contour": {"description": "Whether to display contour lines (on/off). Defaults to \"on\".", "type": "str, optional", "default": ""}, "target": {"description": "The map display content. \"1\" for background, \"2\" for notes, \"3\" for both. Defaults to \"3\".", "type": "str, optional", "default": ""}, "mapstyle": {"description": "Map design parameter in the format \"[design]_[note_size]\". Defaults to \"std_pc\".", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "autosuggest", "description": "Fetches suggestions for a search term near a specified geographic point, filtered by various parameters.", "parameters": {"name": {"description": "The query term on which to search.", "type": "str", "default": "don"}, "lon": {"description": "Longitude of the selected point.", "type": "int", "default": "-70.65"}, "radius": {"description": "Maximum distance from the selected point in meters.", "type": "int", "default": "5000"}, "lang": {"description": "Language code (2 characters, ISO639-1). Available values include 'en' for English and 'ru' for Russian.", "type": "str", "default": ""}, "lat": {"description": "Latitude of the selected point.", "type": "int", "default": "-33.437"}, "kinds": {"description": "Object category. Multiple comma-separated categories may be stated with OR logic. Defaults to 'foods'.", "type": "str, optional", "default": "foods"}, "rate": {"description": "Minimum rating of the object popularity. Available values include 1, 2, 3 for basic ratings, and 1h, 2h, 3h for cultural heritage ratings. Defaults to None.", "type": "str, optional", "default": ""}, "src_attr": {"description": "The source of the object attributes. Multiple sources separated by commas are allowed. Defaults to None. Available sources include osm, wikidata, snow, cultura.ru, rosnedra, user.", "type": "str, optional", "default": ""}, "format": {"description": "The output format. Defaults to None, which uses GeoJSON. Available values include 'json' and 'geojson'.", "type": "str, optional", "default": ""}, "limit": {"description": "Maximum number of returned objects. Defaults to 10.", "type": "int, optional", "default": "10"}, "src_geom": {"description": "The source of the object geometry. Defaults to None. Available sources include osm, wikidata, snow, cultura.ru, rosnedra.", "type": "str, optional", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "autosuggest", "arguments": "{\"name\": \"restaurants\", \"lon\": -118.2437, \"radius\": 5000, \"lang\": \"en\", \"lat\": 34.0522, \"limit\": 20}"}}]}, "messages": [{"role": "user", "content": "I need suggestions for restaurants near 34.0522\u00b0 N, 118.2437\u00b0 W within a 5km radius. Please include ratings and limit to 20 results."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "autosuggest", "arguments": "{\"name\": \"restaurants\", \"lon\": -118.2437, \"radius\": 5000, \"lang\": \"en\", \"lat\": 34.0522, \"limit\": 20}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "stock_balance_sheet", "description": "Retrieves the balance sheet data for a specified stock symbol using the Yahoo Finance API.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve the balance sheet data.", "type": "str", "default": "AAPL"}}}}, {"type": "function", "function": {"name": "spac_sec_filings", "description": "Fetches the latest SPAC SEC filings, optionally filtered by a given SPAC symbol.", "parameters": {"symbol": {"description": "The SPAC symbol to filter the SEC filings by. Defaults to 'ITAC'.", "type": "str", "default": "ITAC"}}}}, {"type": "function", "function": {"name": "symbols_get_option_expirations", "description": "Fetches the option expiration dates for a given symbol from the Seeking Alpha API.", "parameters": {"symbol": {"description": "The stock symbol to query for option expiration data.", "type": "str", "default": "aapl"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "stock_balance_sheet", "arguments": "{\"symbol\": \"PFE\"}"}}, {"type": "function", "function": {"name": "spac_sec_filings", "arguments": "{\"symbol\": \"APXT\"}"}}, {"type": "function", "function": {"name": "symbols_get_option_expirations", "arguments": "{\"symbol\": \"NVDA\"}"}}]}, "messages": [{"role": "user", "content": "Could you retrieve the balance sheet for Pfizer (PFE) and the latest SEC filings for SPAC 'APXT'? Also, provide the option expiration dates for Nvidia (NVDA)."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "stock_balance_sheet", "arguments": "{\"symbol\": \"PFE\"}"}}, {"type": "function", "function": {"name": "spac_sec_filings", "arguments": "{\"symbol\": \"APXT\"}"}}, {"type": "function", "function": {"name": "symbols_get_option_expirations", "arguments": "{\"symbol\": \"NVDA\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "regular_dice", "description": "Roll a specified number of regular dice using the RapidAPI Dice Roll Simulator.", "parameters": {"dice": {"description": "Number of dice to roll. Defaults to 3.", "type": "int, optional", "default": "3"}}}}, {"type": "function", "function": {"name": "eventgames", "description": "Fetches games associated with a specific E-Sports event using the event ID and RapidAPI key.", "parameters": {"is_id": {"description": "The ID of the E-Sports event for which to retrieve game details.", "type": "int", "default": 10945127}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "regular_dice", "arguments": "{\"dice\": 2}"}}, {"type": "function", "function": {"name": "eventgames", "arguments": "{\"is_id\": 178}"}}]}, "messages": [{"role": "user", "content": "What are the results of rolling 2 regular dice? What games are associated with E-Sports event with ID 178?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "regular_dice", "arguments": "{\"dice\": 2}"}}, {"type": "function", "function": {"name": "eventgames", "arguments": "{\"is_id\": 178}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "video", "description": "Fetches all available information for a specific YouTube video using the provided video ID.", "parameters": {"is_id": {"description": "The unique identifier of the YouTube video.", "type": "str", "default": "dQw4w9WgXcQ"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "video", "arguments": "{\"is_id\": \"Mhj5j9FgXcQ\"}"}}, {"type": "function", "function": {"name": "video", "arguments": "{\"is_id\": \"Nkl6k0HhYdI\"}"}}]}, "messages": [{"role": "user", "content": "I need information on the video 'Mhj5j9FgXcQ' and also 'Nkl6k0HhYdI'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "video", "arguments": "{\"is_id\": \"Mhj5j9FgXcQ\"}"}}, {"type": "function", "function": {"name": "video", "arguments": "{\"is_id\": \"Nkl6k0HhYdI\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_channel_panels", "description": "Fetches the channel panels for a specified Twitch channel using the Twitch API.", "parameters": {"channel": {"description": "The name of the Twitch channel to retrieve panels for.", "type": "str", "default": "xQc"}}}}, {"type": "function", "function": {"name": "sticker_trending", "description": "Fetches the latest trending stickers from Giphy using the specified parameters.", "parameters": {"s": {"description": "The term or phrase to translate into a sticker.", "type": "str", "default": "hungry"}, "limit": {"description": "The number of results to return, with a maximum of 100. Defaults to 25.", "type": "str, optional", "default": ""}, "offset": {"description": "The results offset, defaults to 0.", "type": "str, optional", "default": ""}, "fmt": {"description": "The format in which to return results, either 'html' or 'json'.", "type": "str, optional", "default": ""}, "rating": {"description": "The content rating to limit results to, one of 'y', 'g', 'pg', 'pg-13', or 'r'.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "movie_details_json", "description": "Fetches detailed information about a specific movie from the YTS API.", "parameters": {"movie_id": {"description": "The ID of the movie.", "type": "int", "default": ""}, "with_cast": {"description": "If True, includes information about the cast. Defaults to None.", "type": "bool, optional", "default": ""}, "with_images": {"description": "If True, includes image URLs. Defaults to None.", "type": "bool, optional", "default": ""}}}}, {"type": "function", "function": {"name": "sticker_roulette", "description": "Fetches a randomly selected sticker from Giphy's sticker collection. Optionally, it allows the selection to be limited to a specific tag. The function interacts with the Giphy API to retrieve the sticker.", "parameters": {"tag": {"description": "The tag to limit the scope of the sticker search. Should be URL encoded and can include phrases separated by hyphens.", "type": "str", "default": "oops"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "movie_details_json", "arguments": "{\"movie_id\": 299530, \"with_cast\": true, \"with_images\": true}"}}]}, "messages": [{"role": "user", "content": "Get detailed information about the movie with ID 299530, including its cast and images."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "movie_details_json", "arguments": "{\"movie_id\": 299530, \"with_cast\": true, \"with_images\": true}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "autocomplete_zipcodes_zip4", "description": "Fetches autocomplete suggestions for USA Zip+4 zip codes using the provided zipcode and API key.", "parameters": {"zipcode": {"description": "The base ZIP code for which to fetch autocomplete suggestions.", "type": "str", "default": "110"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "autocomplete_zipcodes_zip4", "arguments": "{\"zipcode\": \"94102\"}"}}]}, "messages": [{"role": "user", "content": "Provide autocomplete for ZIP codes related to 94102 in San Francisco."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "autocomplete_zipcodes_zip4", "arguments": "{\"zipcode\": \"94102\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "qualifyingresults", "description": "Fetches the qualifying results for a specific year and round of the Formula 1 season.", "parameters": {"year": {"description": "The year of the Formula 1 season.", "type": "str", "default": "year"}, "round": {"description": "The round of the Formula 1 season.", "type": "str", "default": "round"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "qualifyingresults", "arguments": "{\"year\": \"2017\", \"round\": \"18\"}"}}]}, "messages": [{"role": "user", "content": "What were the qualifying results for the 18th round of the 2017 Formula 1 season?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "qualifyingresults", "arguments": "{\"year\": \"2017\", \"round\": \"18\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "amenities", "description": "Retrieves amenities IDs and descriptions from the Airbnb Listings API, returning up to 50 results starting from the specified offset.", "parameters": {"offset": {"description": "The index to start retrieving the amenities from.", "type": "int", "default": "0"}}}}, {"type": "function", "function": {"name": "properties_get_facilities", "description": "Fetches the facilities of a property given its hotel ID.", "parameters": {"hotel_ids": {"description": "The value of the hotel_id field from the properties/list API.", "type": "int", "default": "1528418"}, "languagecode": {"description": "The language code for the response. Default is 'en-us'. Possible values include en, en-us, ar, bg, ca, cs, da, de, el, es, es-ar, et, fi, fr, he, hr, hu, id, is, it, ja, ko, lt, lv, ms, nl, no, pl, pt, pt-br, ro, ru, sk, sl, sr, sv, th, tl, tr, uk, vi, zh, zh-tw.", "type": "str, optional", "default": "en-us"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "amenities", "arguments": "{\"offset\": 50}"}}, {"type": "function", "function": {"name": "properties_get_facilities", "arguments": "{\"hotel_ids\": 654321, \"languagecode\": \"es\"}"}}]}, "messages": [{"role": "user", "content": "Retrieve the amenities IDs and descriptions from the Airbnb Listings API starting from the 50th result, and then fetch the facilities of a property given its hotel ID 654321 in Spanish."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "amenities", "arguments": "{\"offset\": 50}"}}, {"type": "function", "function": {"name": "properties_get_facilities", "arguments": "{\"hotel_ids\": 654321, \"languagecode\": \"es\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "is_anagram", "description": "Checks if two words are anagrams of each other.", "parameters": {"word1": {"description": "The first word.", "type": "str"}, "word2": {"description": "The second word.", "type": "str"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "is_anagram", "arguments": "{\"word1\": \"Debit Card\", \"word2\": \"bad credit\"}"}}]}, "messages": [{"role": "user", "content": "Check if 'Debit Card' and 'bad credit' are anagrams, ignoring case."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "is_anagram", "arguments": "{\"word1\": \"Debit Card\", \"word2\": \"bad credit\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "is_palindrome", "description": "Checks if a string is a palindrome.", "parameters": {"text": {"description": "The input string.", "type": "str"}}}}, {"type": "function", "function": {"name": "reverse_string", "description": "Reverses the characters in a string.", "parameters": {"text": {"description": "The input string.", "type": "str"}}}}, {"type": "function", "function": {"name": "is_subset", "description": "Checks if one set is a subset of another set.", "parameters": {"set1": {"description": "The first set.", "type": "set"}, "set2": {"description": "The second set.", "type": "set"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "reverse_string", "arguments": "{\"text\": \"hello\"}"}}]}, "messages": [{"role": "user", "content": "What is 'hello' spelled backwards?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "reverse_string", "arguments": "{\"text\": \"hello\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "t3ma", "description": "Fetches the Triple Exponential Moving Average (T3MA) for a given financial instrument.", "parameters": {"symbol": {"description": "Instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').", "type": "str", "default": "AAPL"}, "interval": {"description": "Interval between two consecutive points in the time series. Supported intervals include '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', and '1month'.", "type": "str", "default": "1min"}, "format": {"description": "Format of the response data, either 'CSV' or 'JSON'. Default is 'json'.", "type": "str, optional", "default": "json"}, "v_factor": {"description": "Volume factor used in the calculation of the T3MA.", "type": "int, optional", "default": 0.7}, "series_type": {"description": "Type of series to use in the calculation. Supported values are 'open', 'high', 'low', and 'close'. Default is 'close'.", "type": "str, optional", "default": "close"}, "outputsize": {"description": "Number of data points to return. Default is 30.", "type": "int, optional", "default": 30}, "time_period": {"description": "Number of periods over which to calculate the T3MA. Default is 9.", "type": "int, optional", "default": 9}}}}, {"type": "function", "function": {"name": "get_equity_latest_data", "description": "Fetches the latest equity data for a given equity slug.", "parameters": {"slug": {"description": "The unique identifier for the equity, retrieved from screener results.", "type": "str", "default": "saudi-aramco"}, "lang": {"description": "Language code for the data. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}}, {"type": "function", "function": {"name": "block", "description": "Fetch detailed data for a specific block on the Binance Smart Chain using the RapidAPI service.", "parameters": {"block": {"description": "The block identifier you want to query on the Binance Smart Chain.", "type": "str", "default": "123"}, "network": {"description": "The network to use, either 'mainnet' or 'testnet'. Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "get_markets_of_coin", "description": "Fetches the top 50 markets for a given cryptocurrency coin.", "parameters": {"is_id": {"description": "The ID of the cryptocurrency coin.", "type": "int", "default": "90"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "block", "arguments": "{\"block\": \"12345678\", \"network\": \"mainnet\"}"}}]}, "messages": [{"role": "user", "content": "Fetch the details for block number 12345678 on the Binance Smart Chain mainnet."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "block", "arguments": "{\"block\": \"12345678\", \"network\": \"mainnet\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "getcountrycode", "description": "Retrieves all available country codes using the specified API.", "parameters": {"getcountrycodes": {"description": "A flag to specify whether to retrieve country codes. Defaults to 'true'.", "type": "str", "default": "true"}}}}, {"type": "function", "function": {"name": "links_finder", "description": "Fetches relevant links based on a given query using the ExplorArc's Link Finder API.", "parameters": {"query": {"description": "The search query to find relevant links. Defaults to 'roadmap'.", "type": "str", "default": "roadmap"}}}}, {"type": "function", "function": {"name": "pagesblanches", "description": "This function retrieves data from the Pages Blanches API for extracting email and phone information based on the given parameters.", "parameters": {"pbpage": {"description": "The page number of the search results to retrieve.", "type": "int", "default": "1"}, "pbkeyword": {"description": "The search keyword or term for the Pages Blanches query.", "type": "str", "default": "Patrick"}, "pblocation": {"description": "The location to filter the search results.", "type": "str", "default": "Paris"}}}}, {"type": "function", "function": {"name": "searchcontent", "description": "The function searches for videos, playlists, and channels on YouTube using the specified query and RapidAPI key.", "parameters": {"q": {"description": "The search query for finding content on YouTube. Defaults to None.", "type": "str, optional", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "links_finder", "arguments": "{\"query\": \"artificial intelligence\"}"}}]}, "messages": [{"role": "user", "content": "Find relevant links related to 'artificial intelligence' using the ExplorArc's Link Finder API."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "links_finder", "arguments": "{\"query\": \"artificial intelligence\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "cell_density", "description": "Calculates the cell density based on the optical density (OD) and dilution factor.", "parameters": {"od": {"description": "The optical density of the sample.", "type": "float", "default": 1000000000.0}, "dilution": {"description": "The dilution factor applied to the sample.", "type": "int", "default": 1000000000.0}, "factor": {"description": "The calibration factor for converting OD to cell density. Defaults to 1e9.", "type": "float, optional"}}}}, {"type": "function", "function": {"name": "independent_samples_t_test", "description": "Conducts a two-sample independent t-test and returns the t-statistic, p-value, and conclusion.", "parameters": {"sample1": {"description": "The first sample of observations.", "type": "List[float]", "default": 0.05}, "sample2": {"description": "The second sample of observations.", "type": "List[float]", "default": 0.05}, "alpha": {"description": "The significance level of the test. Defaults to 0.05.", "type": "float, optional"}}}}, {"type": "function", "function": {"name": "is_valid_sudoku", "description": "Checks if a 9x9 Sudoku board is valid.", "parameters": {"board": {"description": "The Sudoku board represented as a 2D list of strings.", "type": "List[List[str]]"}}}}, {"type": "function", "function": {"name": "numerical_derivative", "description": "Estimates the derivative of a function at a given point using the central difference formula.", "parameters": {"function": {"description": "The function to calculate the derivative of.", "type": "Callable[[float], float]"}, "x": {"description": "The point at which to estimate the derivative.", "type": "float"}}}}, {"type": "function", "function": {"name": "euclidean_distance", "description": "Computes the Euclidean distance between two points in a 2D plane.", "parameters": {"point_a": {"description": "The coordinates of the first point (x, y).", "type": "Tuple[float, float]"}, "point_b": {"description": "The coordinates of the second point (x, y).", "type": "Tuple[float, float]"}}}}, {"type": "function", "function": {"name": "trapezoidal_integration", "description": "Calculates the definite integral of a function using the trapezoidal rule.", "parameters": {"func": {"description": "The function to integrate, expressed as a string (e.g., \"x**2 + 2*x\").", "type": "str", "default": 10000}, "a": {"description": "The lower limit of integration.", "type": "float", "default": 10000}, "b": {"description": "The upper limit of integration.", "type": "float"}, "n": {"description": "The number of subdivisions for the trapezoidal approximation. Defaults to 10000.", "type": "int, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "independent_samples_t_test", "arguments": "{\"sample1\": [170, 175, 180, 172, 174], \"sample2\": [165, 168, 170, 167, 169], \"alpha\": 0.05}"}}]}, "messages": [{"role": "user", "content": "Conduct a t-test comparing the heights of two groups: [170, 175, 180, 172, 174] and [165, 168, 170, 167, 169] with a significance level of 0.05."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "independent_samples_t_test", "arguments": "{\"sample1\": [170, 175, 180, 172, 174], \"sample2\": [165, 168, 170, 167, 169], \"alpha\": 0.05}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_artist_s_albums", "description": "Fetches and returns basic details about the albums of an artist from a given Spotify URL.", "parameters": {"spotify_url": {"description": "The URL of the artist's Spotify page.", "type": "str", "default": "https://open.spotify.com/artist/1nIUhcKHnK6iyumRyoV68C"}}}}, {"type": "function", "function": {"name": "artist_albums", "description": "Fetches the albums of a specified artist from the Spotify API using the provided RapidAPI key.", "parameters": {"is_id": {"description": "The ID of the artist.", "type": "str", "default": "2w9zwq3AktTeYYMuhMjju8"}, "offset": {"description": "The index of the first album to return. Defaults to 0.", "type": "int, optional", "default": "0"}, "limit": {"description": "The maximum number of albums to return. Defaults to 100.", "type": "int, optional", "default": "100"}}}}, {"type": "function", "function": {"name": "album_tracks", "description": "Fetches all tracks of a specific Spotify album using the provided RapidAPI key.", "parameters": {"album_id": {"description": "The unique identifier of the Spotify album whose tracks are to be fetched.", "type": "str", "default": "2DOgJMDXu4A2V4u0sV1b56"}}}}, {"type": "function", "function": {"name": "artists_get_details", "description": "Retrieve detailed information about an artist using the Shazam API.", "parameters": {"is_id": {"description": "The unique identifier of the artist. This value can be obtained from various Shazam API endpoints, such as 'artist->adamid' from /search, /songs/v2/detect, or /songs/get-details, or 'artists->id' from /shazam-songs/get-details, /albums/get-details, or /albums/get-related-artist.", "type": "str", "default": "567072"}, "l": {"description": "The language code for the response. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "artist_albums", "arguments": "{\"is_id\": \"12345\"}"}}, {"type": "function", "function": {"name": "artists_get_details", "arguments": "{\"is_id\": \"12345\", \"l\": \"en-US\"}"}}]}, "messages": [{"role": "user", "content": "Can you fetch the albums of the artist with Spotify ID '12345' and then retrieve detailed information about this artist in English?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "artist_albums", "arguments": "{\"is_id\": \"12345\"}"}}, {"type": "function", "function": {"name": "artists_get_details", "arguments": "{\"is_id\": \"12345\", \"l\": \"en-US\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "generate_random_string", "description": "Generates a random string of specified length and character types.", "parameters": {"length": {"description": "The length of the random string.", "type": "int", "default": true}, "uppercase": {"description": "Include uppercase letters. Defaults to True.", "type": "bool, optional", "default": true}, "lowercase": {"description": "Include lowercase letters. Defaults to True.", "type": "bool, optional", "default": true}, "digits": {"description": "Include digits. Defaults to True.", "type": "bool, optional"}, "special_chars": {"description": "Include special characters. Defaults to False.", "type": "bool, optional", "default": true}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "generate_random_string", "arguments": "{\"length\": 5, \"uppercase\": false, \"lowercase\": true, \"digits\": false, \"special_chars\": false}"}}]}, "messages": [{"role": "user", "content": "I need a 5-character code with only lowercase letters."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "generate_random_string", "arguments": "{\"length\": 5, \"uppercase\": false, \"lowercase\": true, \"digits\": false, \"special_chars\": false}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "market_auto_complete", "description": "Fetches market auto-complete suggestions based on a query term or phrase.", "parameters": {"query": {"description": "The query term or phrase for which to get auto-complete suggestions.", "type": "str", "default": "apple"}}}}, {"type": "function", "function": {"name": "spac_price_targets", "description": "Fetches the latest SPAC (Special Purpose Acquisition Company) price targets from analysts, filtered by a specific SPAC symbol.", "parameters": {"symbol": {"description": "The SPAC symbol to filter the price targets by. Defaults to 'SOFI'.", "type": "str", "default": "SOFI"}}}}, {"type": "function", "function": {"name": "get_the_market_calendar", "description": "Fetches the market calendar for a given month and year using the Tradier API.", "parameters": {"month": {"description": "The month for which to retrieve the market calendar. Defaults to '11'.", "type": "str", "default": "11"}, "year": {"description": "The year for which to retrieve the market calendar. Defaults to '2013'.", "type": "str", "default": "2013"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_the_market_calendar", "arguments": "{\"month\": \"04\", \"year\": \"2021\"}"}}, {"type": "function", "function": {"name": "get_the_market_calendar", "arguments": "{\"month\": \"11\", \"year\": \"2024\"}"}}]}, "messages": [{"role": "user", "content": "Can you show me the market calendar for April 2021 and November 2024?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_the_market_calendar", "arguments": "{\"month\": \"04\", \"year\": \"2021\"}"}}, {"type": "function", "function": {"name": "get_the_market_calendar", "arguments": "{\"month\": \"11\", \"year\": \"2024\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_details_by_asn_number", "description": "Fetch details related to a given Autonomous System Number (ASN) such as IP ranges, country, organization, and CIDR.", "parameters": {"asn_number": {"description": "The ASN number for which details need to be retrieved.", "type": "int", "default": "100"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_details_by_asn_number", "arguments": "{\"asn_number\": 32934}"}}]}, "messages": [{"role": "user", "content": "What organization is associated with ASN 32934?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_details_by_asn_number", "arguments": "{\"asn_number\": 32934}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "flightstatistics", "description": "Fetches and returns statistics for a given flight number, with optional filtering by departure and arrival airports.", "parameters": {"flnr": {"description": "The flight number to request statistics for.", "type": "str", "default": ""}, "aptfrom": {"description": "The IATA code of the departure airport. Defaults to None.", "type": "str, optional", "default": ""}, "aptto": {"description": "The IATA code of the arrival airport. Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "rental_availability", "description": "Fetches the availability information for a specific rental property using the given rental ID.", "parameters": {"rentalid": {"description": "The unique identifier of the rental property obtained from the Rental Search API in the Vacation Rentals collection.", "type": "str", "default": "VacationRentalReview-g60763-d24816619-Deluxe_Double_Queen_with_Balcony-New_York_City_New_York"}}}}, {"type": "function", "function": {"name": "airport_arrivals", "description": "Fetch the flight arrivals for a specified airport on a given date, optionally filtered by carrier.", "parameters": {"airportcode": {"description": "The IATA code of the airport.", "type": "str", "default": "LHR"}, "carriercode": {"description": "The IATA code of the airline carrier. Defaults to None.", "type": "str, optional", "default": ""}, "date": {"description": "The date for which to fetch the arrivals, in the format YYYY-MM-DD. Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "get_stations", "description": "Retrieve the nearest electric vehicle charging stations within a specified distance.", "parameters": {"distance": {"description": "The radius in miles to search for charging stations. Defaults to '100'.", "type": "str, optional", "default": "100"}, "longitude": {"description": "The longitude coordinate for the search location. Defaults to '2.4379392'.", "type": "str, optional", "default": "2.4379392"}, "latitude": {"description": "The latitude coordinate for the search location. Defaults to '44.351488'.", "type": "str, optional", "default": "44.351488"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_stations", "arguments": "{\"distance\": \"50\", \"longitude\": \"48.8566\", \"latitude\": \"2.2944\"}"}}]}, "messages": [{"role": "user", "content": "What are the nearest electric vehicle charging stations within a 50-mile radius of the location with longitude 48.8566 and latitude 2.2944?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_stations", "arguments": "{\"distance\": \"50\", \"longitude\": \"48.8566\", \"latitude\": \"2.2944\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "v1_category", "description": "Fetches a list of trending categories from the Tokapi Mobile API using specified query parameters.", "parameters": {"count": {"description": "Number of categories to fetch. Defaults to 10.", "type": "int", "default": 10}, "offset": {"description": "Offset for pagination. Defaults to 0.", "type": "int", "default": 0}, "region": {"description": "Region code for filtering categories. Defaults to 'US'.", "type": "str", "default": "US"}}}}, {"type": "function", "function": {"name": "user_tweets_replies_by_screen_name", "description": "Fetches the tweets and replies of a specified user by their screen name using the Twitter API.", "parameters": {"username": {"description": "The screen name of the user whose tweets and replies are to be fetched.", "type": "str", "default": "elonmusk"}, "cursor": {"description": "The cursor for pagination, if any. Defaults to None.", "type": "str, optional", "default": ""}, "limit": {"description": "The maximum number of tweets and replies to fetch. Defaults to '40'.", "type": "str, optional", "default": "40"}}}}, {"type": "function", "function": {"name": "search", "description": "Searches for a profile on the specified API using the given username and API key.", "parameters": {"username": {"description": "The username to be searched. Defaults to 'kim'.", "type": "str", "default": "kim"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "v1_category", "arguments": "{\"count\": 20, \"offset\": 10}"}}]}, "messages": [{"role": "user", "content": "Get the first 20 categories from Tokapi Mobile API with an offset of 10."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "v1_category", "arguments": "{\"count\": 20, \"offset\": 10}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "specific_skin", "description": "Retrieves details such as name, price, icon, class, and weapon for a specific Counter-Strike skin in field-tested condition (prices in USD).", "parameters": {"skin_name": {"description": "The name of the Counter-Strike skin, with underscores instead of spaces. Example: 'AK-47_Redline'.", "type": "str", "default": "AK-47_Slate"}}}}, {"type": "function", "function": {"name": "random_skin_from_class", "description": "Fetches information about a random Counter-Strike skin from a specified class using the CS Skin API.", "parameters": {"class_name": {"description": "The class of Counter-Strike skin to retrieve, e.g., \"Rifle\".", "type": "str", "default": "Knife"}}}}, {"type": "function", "function": {"name": "get_pokemon_data_by_name", "description": "Fetches data for a specified Pokemon using its name from the Pokemon Unite API.", "parameters": {"name": {"description": "The name of the Pokemon for which data is to be fetched.", "type": "str", "default": "Azumarill"}}}}, {"type": "function", "function": {"name": "royal_matches", "description": "Fetch recent royal matches from the Trackmania API.", "parameters": {"page": {"description": "The page number of the results to fetch, where each page contains a defined number of results. The default is `0`.", "type": "int", "default": "0"}, "limit": {"description": "The maximum number of results to return. The default is `50`.", "type": "int", "default": "50"}}}}, {"type": "function", "function": {"name": "top_players_by_matchmaking", "description": "Fetch the top players by their matchmaking rank from the TrackMania API.", "parameters": {"limit": {"description": "The number of results to be returned. Default is `50`.", "type": "int, optional", "default": "50"}, "page": {"description": "The page number for the results, each containing 50 results. Default is `0`.", "type": "int, optional", "default": "0"}}}}, {"type": "function", "function": {"name": "game_lookup", "description": "Fetches detailed information for a specific game from the CheapShark API, including a list of all deals associated with the game.", "parameters": {"is_id": {"description": "The unique identifier for the game to look up.", "type": "int", "default": "612"}}}}, {"type": "function", "function": {"name": "get_card_by_slug", "description": "Fetches card information by slug from the Hearthstone API.", "parameters": {"slug": {"description": "The slug identifier for the card.", "type": "str", "default": "a-light-in-the-darkness"}}}}, {"type": "function", "function": {"name": "group_profile", "description": "Fetches the profile information of a Steam community group using the provided group ID.", "parameters": {"is_id": {"description": "The identifier of the Steam community group.", "type": "str", "default": "l4d"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "royal_matches", "arguments": "{\"page\": 1, \"limit\": 100}"}}]}, "messages": [{"role": "user", "content": "Get recent royal matches from Trackmania on page 1 with a limit of 100 results."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "royal_matches", "arguments": "{\"page\": 1, \"limit\": 100}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "most_expensive", "description": "Retrieves the list of most expensive artworks.", "parameters": {"sort": {"description": "The criterion by which to sort the artworks. Defaults to 'usd_price'.", "type": "str", "default": "usd_price"}, "page": {"description": "The page number of the results to retrieve. Defaults to '1'.", "type": "str", "default": "1"}, "gallery": {"description": "The gallery to filter results by. Possible values include:", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "loginuser", "description": "Logs in a user to the pet store service using the provided credentials and returns the server's response.", "parameters": {"username": {"description": "The username for login.", "type": "str", "default": ""}, "password": {"description": "The password for login in clear text.", "type": "str", "default": ""}}}}, {"type": "function", "function": {"name": "get_ip_information", "description": "Fetches information about a given IP address using the Toolbench API.", "parameters": {"query": {"description": "The IP address to query information about.", "type": "str", "default": "188.68.223.26"}, "lang": {"description": "The language of the response. Default is 'en'.", "type": "str, optional", "default": "en"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "most_expensive", "arguments": "{\"gallery\": \"Foundation\"}"}}, {"type": "function", "function": {"name": "loginuser", "arguments": "{\"username\": \"jenny_doe\", \"password\": \"mypassword123\"}"}}]}, "messages": [{"role": "user", "content": "I want to find the most expensive NFT artworks from the 'Foundation' gallery. Can you also provide the login details for a user with the username 'jenny_doe' and password 'mypassword123' in the pet store service?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "most_expensive", "arguments": "{\"gallery\": \"Foundation\"}"}}, {"type": "function", "function": {"name": "loginuser", "arguments": "{\"username\": \"jenny_doe\", \"password\": \"mypassword123\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "whois", "description": "Fetch the WhoIS lookup data for a given domain using the specified Toolbench RapidAPI key.", "parameters": {"domain": {"description": "The domain name for which to retrieve the WhoIS data.", "type": "str", "default": "peekdomain.com"}}}}, {"type": "function", "function": {"name": "check", "description": "Checks and returns SSL information for a given domain. Optionally, additional information can be requested by setting the extended property.", "parameters": {"domain": {"description": "The domain name to check SSL information for.", "type": "str", "default": "test.com"}, "extended": {"description": "Optional; Set to 'true' for additional information. Default is 'true'.", "type": "str", "default": "true"}}}}, {"type": "function", "function": {"name": "newlyregistereddomains", "description": "Fetch a list of newly registered domains from a REST API.", "parameters": {"page": {"description": "The page number of domains to retrieve. Default is 1.", "type": "int, optional", "default": 1}, "exclude": {"description": "Keywords to exclude from the domain search. Default is None.", "type": "str, optional", "default": ""}, "date": {"description": "The registration date of the domains to be searched in 'YYYY-MM-DD' format. Default is '2023-06-12'.", "type": "str, optional", "default": "2023-06-12"}, "keywords": {"description": "Keywords that must be included in the domain search. Default is None.", "type": "str, optional", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "whois", "arguments": "{\"domain\": \"wikipedia.org\"}"}}]}, "messages": [{"role": "user", "content": "Retrieve WhoIS data for wikipedia.org."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "whois", "arguments": "{\"domain\": \"wikipedia.org\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "calculate_standard_deviation", "description": "Calculates the standard deviation of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[Union[int, float]]"}}}}, {"type": "function", "function": {"name": "cell_density", "description": "Calculates the cell density based on the optical density (OD) and dilution factor.", "parameters": {"od": {"description": "The optical density of the sample.", "type": "float", "default": 1000000000.0}, "dilution": {"description": "The dilution factor applied to the sample.", "type": "int", "default": 1000000000.0}, "factor": {"description": "The calibration factor for converting OD to cell density. Defaults to 1e9.", "type": "float, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_standard_deviation", "arguments": "{\"numbers\": [20, 30, 40, 50, 60]}"}}]}, "messages": [{"role": "user", "content": "What is the standard deviation of the dataset: 20, 30, 40, 50, 60?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_standard_deviation", "arguments": "{\"numbers\": [20, 30, 40, 50, 60]}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "followers", "description": "Retrieves the list of followers for a given Instagram user.", "parameters": {"user_id": {"description": "The ID of the Instagram user whose followers are to be retrieved.", "type": "str", "default": "25025320"}, "batch_size": {"description": "The number of followers to retrieve in one batch. Default is 20.", "type": "int, optional", "default": "20"}, "next_cursor": {"description": "A cursor for pagination to fetch the next set of followers. Default is None.", "type": "str, optional", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "followers", "arguments": "{\"user_id\": \"555555555\", \"batch_size\": 5}"}}, {"type": "function", "function": {"name": "followers", "arguments": "{\"user_id\": \"555555555\", \"batch_size\": 5, \"next_cursor\": \"cursor_value_from_previous_response\"}"}}, {"type": "function", "function": {"name": "followers", "arguments": "{\"user_id\": \"666666666\", \"batch_size\": 5}"}}, {"type": "function", "function": {"name": "followers", "arguments": "{\"user_id\": \"777777777\", \"batch_size\": 5}"}}]}, "messages": [{"role": "user", "content": "Can you retrieve the first 5 followers of the user with the id '555555555' and then fetch the next 5 followers? After that, can you retrieve the first 5 followers each for the users with ids '666666666' and '777777777'?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "followers", "arguments": "{\"user_id\": \"555555555\", \"batch_size\": 5}"}}, {"type": "function", "function": {"name": "followers", "arguments": "{\"user_id\": \"555555555\", \"batch_size\": 5, \"next_cursor\": \"cursor_value_from_previous_response\"}"}}, {"type": "function", "function": {"name": "followers", "arguments": "{\"user_id\": \"666666666\", \"batch_size\": 5}"}}, {"type": "function", "function": {"name": "followers", "arguments": "{\"user_id\": \"777777777\", \"batch_size\": 5}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "by_zip_code", "description": "Fetches weather data based on a given zip code using the Toolbench RapidAPI service.", "parameters": {"zip": {"description": "The zip code for which to fetch the weather data. If the country is not specified, the search defaults to the USA.", "type": "str", "default": "94040"}, "lang": {"description": "Language in which to receive the output. Defaults to None.", "type": "str, optional", "default": ""}, "units": {"description": "Units of measurement to use. Available options are 'standard', 'metric', and 'imperial'. If not specified, 'standard' units will be used by default. Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "weather_statistics", "description": "Fetches the average weather statistics for a specified location for the next 30 days.", "parameters": {"units": {"description": "Unit system to be used. Available values are:", "type": "str", "default": "auto"}, "place_id": {"description": "Identifier of a place. If not provided, the location can be specified using `lat` and `lon`.", "type": "str, optional", "default": ""}, "lon": {"description": "Longitude in the format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. Defaults to '-122.42282'.", "type": "str, optional", "default": "-122.42282"}, "lat": {"description": "Latitude in the format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. Defaults to '37.81021'.", "type": "str, optional", "default": "37.81021"}}}}, {"type": "function", "function": {"name": "by_geographic_coordinates", "description": "Fetches weather data based on geographic coordinates.", "parameters": {"lon": {"description": "Longitude of the geographic coordinates.", "type": "int", "default": "139"}, "lat": {"description": "Latitude of the geographic coordinates.", "type": "int", "default": "35"}, "units": {"description": "Units of measurement. Options are 'standard', 'metric', and 'imperial'. Defaults to 'standard' if not specified.", "type": "str, optional", "default": ""}, "lang": {"description": "Language for the output. Defaults to the API's default language if not specified.", "type": "str, optional", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "by_geographic_coordinates", "arguments": "{\"lon\": 151, \"lat\": -33.86882, \"units\": \"metric\"}"}}]}, "messages": [{"role": "user", "content": "I'm planning a trip to Sydney, Australia. What's the weather like there in metric units?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "by_geographic_coordinates", "arguments": "{\"lon\": 151, \"lat\": -33.86882, \"units\": \"metric\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "dns_lookup", "description": "Fetches DNS data for a given domain using the specified record type.", "parameters": {"domain": {"description": "The domain to search for DNS records.", "type": "str", "default": "google.com"}, "rtype": {"description": "The type of DNS record to fetch. Available records: A, PTR, MX, CNAME, TXT, NS.", "type": "str", "default": "NS"}}}}, {"type": "function", "function": {"name": "agent_details", "description": "Fetch the details of an agent using their ID from the RapidAPI service.", "parameters": {"is_id": {"description": "The unique ID of the agent.", "type": "str", "default": "569e892a89a68901006bdb99"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "dns_lookup", "arguments": "{\"domain\": \"example.com\", \"rtype\": \"A\"}"}}, {"type": "function", "function": {"name": "dns_lookup", "arguments": "{\"domain\": \"example.com\", \"rtype\": \"MX\"}"}}]}, "messages": [{"role": "user", "content": "Can you find the A and MX records for example.com?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "dns_lookup", "arguments": "{\"domain\": \"example.com\", \"rtype\": \"A\"}"}}, {"type": "function", "function": {"name": "dns_lookup", "arguments": "{\"domain\": \"example.com\", \"rtype\": \"MX\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "is_sum_of_cubes", "description": "Checks if a number is the sum of the cubes of its digits.", "parameters": {"num": {"description": "The number to check.", "type": "int"}}}}, {"type": "function", "function": {"name": "reverse_string", "description": "Reverses the characters in a string.", "parameters": {"text": {"description": "The input string.", "type": "str"}}}}, {"type": "function", "function": {"name": "calculate_factorial", "description": "Calculates the factorial of a non-negative integer.", "parameters": {"n": {"description": "The non-negative integer.", "type": "int"}}}}, {"type": "function", "function": {"name": "find_longest_word", "description": "Finds the longest word in a list of words.", "parameters": {"words": {"description": "A list of words.", "type": "List[str]"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "reverse_string", "arguments": "{\"text\": \"Hello, World!\"}"}}]}, "messages": [{"role": "user", "content": "What is the reverse of the string 'Hello, World!'?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "reverse_string", "arguments": "{\"text\": \"Hello, World!\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "retrieve_audio_file", "description": "Retrieve an audio file in MP3 format from a previously submitted text-to-speech conversion.", "parameters": {"transactionid": {"description": "The transaction ID for the previously submitted text-to-speech conversion.", "type": "str", "default": "string"}}}}, {"type": "function", "function": {"name": "contacts", "description": "Fetches the contacts list from a specified WhatsApp instance using the Maytapi API.", "parameters": {"phone_id": {"description": "The unique identifier for the phone instance in the Maytapi WhatsApp service.", "type": "str", "default": ""}}}}, {"type": "function", "function": {"name": "article_index", "description": "Fetches an indexed list of articles from the RapidAPI endpoint with an optional limit on the number of articles returned.", "parameters": {"limit": {"description": "The maximum number of articles to return. Defaults to 1.", "type": "int, optional", "default": "1"}}}}, {"type": "function", "function": {"name": "user_login", "description": "Logs in a user with the given username and password, and returns a JSON object containing the account's session key.", "parameters": {"username": {"description": "Username for the user account. For US domestic users, this should be a 10-digit number. For international users, use the full E.164 format (e.g., US: 5555555555, E.164: +1155555555555).", "type": "str", "default": ""}, "password": {"description": "Password associated with the username.", "type": "str", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "retrieve_audio_file", "arguments": "{\"transactionid\": \"99999\"}"}}, {"type": "function", "function": {"name": "contacts", "arguments": "{\"phone_id\": \"1111111111\"}"}}]}, "messages": [{"role": "user", "content": "Retrieve the audio file for transaction ID '99999'. Also, get the contacts for phone ID '1111111111'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "retrieve_audio_file", "arguments": "{\"transactionid\": \"99999\"}"}}, {"type": "function", "function": {"name": "contacts", "arguments": "{\"phone_id\": \"1111111111\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_all_kfc_locations_by_state", "description": "Fetches all KFC locations in a specified state using the given RapidAPI key and returns the results.", "parameters": {"page": {"description": "The page number for paginated results.", "type": "int", "default": "0"}, "state": {"description": "The two-letter state code for which to fetch KFC locations.", "type": "str", "default": "AZ"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_all_kfc_locations_by_state", "arguments": "{\"page\": 5, \"state\": \"AZ\"}"}}, {"type": "function", "function": {"name": "get_all_kfc_locations_by_state", "arguments": "{\"page\": 5, \"state\": \"NM\"}"}}, {"type": "function", "function": {"name": "get_all_kfc_locations_by_state", "arguments": "{\"page\": 5, \"state\": \"UT\"}"}}]}, "messages": [{"role": "user", "content": "Find KFC locations in Arizona, New Mexico, and Utah on the fifth page."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_all_kfc_locations_by_state", "arguments": "{\"page\": 5, \"state\": \"AZ\"}"}}, {"type": "function", "function": {"name": "get_all_kfc_locations_by_state", "arguments": "{\"page\": 5, \"state\": \"NM\"}"}}, {"type": "function", "function": {"name": "get_all_kfc_locations_by_state", "arguments": "{\"page\": 5, \"state\": \"UT\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "is_valid_palindrome", "description": "Checks if a string is a valid palindrome, considering only alphanumeric characters and ignoring case.", "parameters": {"s": {"description": "The input string.", "type": "str"}}}}, {"type": "function", "function": {"name": "draw_cards", "description": "Shuffles a standard deck of 52 cards and draws a specified number of cards from the top.", "parameters": {"num_draw": {"description": "The number of cards to be drawn. Defaults to 1.", "type": "int, optional", "default": 1}}}}, {"type": "function", "function": {"name": "create_histogram", "description": "Create a histogram based on provided data.", "parameters": {"data": {"description": "The data for which histogram needs to be plotted.", "type": "list", "default": 10}, "bins": {"description": "The number of equal-width bins in the range. Default is 10.", "type": "int", "default": 10}}}}, {"type": "function", "function": {"name": "calculate_electric_field", "description": "Calculate the electric field produced by a charge at a certain distance.", "parameters": {"charge": {"description": "Charge in coulombs producing the electric field.", "type": "int", "default": 8.854e-12}, "distance": {"description": "Distance from the charge in meters where the field is being measured.", "type": "int", "default": 8.854e-12}, "permitivity": {"description": "Permitivity of the space where field is being calculated, default is 8.854e-12.", "type": "float"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "create_histogram", "arguments": "{\"data\": [10, 20, 20, 30, 40, 40, 40, 50, 50, 50, 50], \"bins\": 4}"}}]}, "messages": [{"role": "user", "content": "Create a histogram for the data set [10, 20, 20, 30, 40, 40, 40, 50, 50, 50, 50] with 4 bins."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "create_histogram", "arguments": "{\"data\": [10, 20, 20, 30, 40, 40, 40, 50, 50, 50, 50], \"bins\": 4}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "std_deviation", "description": "Calculates the standard deviation of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[float]"}}}}, {"type": "function", "function": {"name": "min_meeting_rooms", "description": "Finds the minimum number of meeting rooms required to accommodate all meetings.", "parameters": {"intervals": {"description": "A list of meeting time intervals, where each interval is represented as [start_time, end_time].", "type": "List[List[int]]"}}}}, {"type": "function", "function": {"name": "california_alimony", "description": "Calculates the total alimony one spouse would have to pay to the other in California over a given duration.", "parameters": {"payor_monthly_income": {"description": "The monthly gross income of the payor spouse.", "type": "int"}, "recipient_monthly_income": {"description": "The monthly gross income of the recipient spouse.", "type": "int"}, "duration_years": {"description": "The duration of the alimony in years.", "type": "int"}}}}, {"type": "function", "function": {"name": "calculate_angle", "description": "Calculates the angle between the hour and minute hands of a clock.", "parameters": {"hour": {"description": "The hour value (1-12).", "type": "int"}, "minute": {"description": "The minute value (0-59).", "type": "int"}}}}, {"type": "function", "function": {"name": "find_n_largest_numbers", "description": "Finds the n largest numbers in a list.", "parameters": {"nums": {"description": "The list of numbers.", "type": "List[int]"}, "n": {"description": "The number of largest numbers to find.", "type": "int"}}}}, {"type": "function", "function": {"name": "greatest_common_divisor", "description": "Computes the greatest common divisor (GCD) of two non-negative integers.", "parameters": {"a": {"description": "The first non-negative integer.", "type": "int"}, "b": {"description": "The second non-negative integer.", "type": "int"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "california_alimony", "arguments": "{\"payor_monthly_income\": 6000, \"recipient_monthly_income\": 2000, \"duration_years\": 5}"}}]}, "messages": [{"role": "user", "content": "Compute the total alimony to be paid in California over 5 years where the payor earns $6000 per month and the recipient earns $2000 per month."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "california_alimony", "arguments": "{\"payor_monthly_income\": 6000, \"recipient_monthly_income\": 2000, \"duration_years\": 5}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "crypto_exchanges", "description": "Fetches the list of cryptocurrency exchanges available at Twelve Data API.", "parameters": {"format": {"description": "The desired response format. Acceptable values are 'json' (default) and 'csv'.", "type": "str", "default": "json"}}}}, {"type": "function", "function": {"name": "market_get_movers", "description": "Fetch the latest information on market movers based on a specified template.", "parameters": {"is_id": {"description": "The ID value returned from the market auto-complete endpoint, used to specify the market segment.", "type": "str", "default": "nky:ind"}, "template": {"description": "A string representing the category of market movers to retrieve. Possible values are 'COMMODITY', 'CURRENCY', 'INDEX', 'INDEXFUTURE', 'RATE', or 'STOCK'. Defaults to 'INDEX'.", "type": "str, optional", "default": "INDEX"}}}}, {"type": "function", "function": {"name": "get_6_month_historical_daily_prices", "description": "Retrieves 6 months of historical daily stock prices for the given ticker, including adjusted Open, High, Low, and Close prices, as well as Daily Volume, Dividend, and Split information.", "parameters": {"ticker": {"description": "The stock ticker symbol for which to retrieve the historical prices.", "type": "str", "default": "AAPL"}}}}, {"type": "function", "function": {"name": "market_undervalued_large_caps", "description": "Fetches a list of potentially undervalued large cap stocks from the API.", "parameters": {"start": {"description": "The starting index for the results. Defaults to 0.", "type": "int, optional", "default": "0"}}}}, {"type": "function", "function": {"name": "stock_index_trend", "description": "Fetch the index trend earnings history information for a specific stock symbol from the Yahoo Finance API.", "parameters": {"symbol": {"description": "The stock symbol to fetch the index trend data for.", "type": "str", "default": "AAPL"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_6_month_historical_daily_prices", "arguments": "{\"ticker\": \"AAPL\"}"}}, {"type": "function", "function": {"name": "market_undervalued_large_caps", "arguments": "{\"start\": 0}"}}]}, "messages": [{"role": "user", "content": "What are the historical daily prices for the stock with the ticker 'AAPL' over the past 6 months, and which large cap stocks are currently undervalued starting from index 0?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_6_month_historical_daily_prices", "arguments": "{\"ticker\": \"AAPL\"}"}}, {"type": "function", "function": {"name": "market_undervalued_large_caps", "arguments": "{\"start\": 0}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "bacterial_growth", "description": "Calculates the bacterial population after a given time based on the initial population and growth rate.", "parameters": {"initial_population": {"description": "The initial bacterial population.", "type": "int", "default": 20}, "growth_rate": {"description": "The growth rate per unit time.", "type": "float", "default": 20}, "time": {"description": "The time elapsed.", "type": "float"}, "doubling_time": {"description": "The doubling time of the bacteria in minutes. Defaults to 20.", "type": "float, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "bacterial_growth", "arguments": "{\"initial_population\": 2500, \"growth_rate\": 0.6, \"time\": 8.25, \"doubling_time\": 30}"}}]}, "messages": [{"role": "user", "content": "What is the population of bacteria after 8 hours and 15 minutes, given an initial population of 2500, a growth rate of 0.6 per hour, and a doubling time of 30 minutes?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "bacterial_growth", "arguments": "{\"initial_population\": 2500, \"growth_rate\": 0.6, \"time\": 8.25, \"doubling_time\": 30}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "verify_plate_number_location", "description": "Fetches information about the state and LGA (Local Government Area) associated with a given Nigerian plate number code.", "parameters": {"platecodeloc": {"description": "The first three characters of a Nigerian plate number.", "type": "str", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "verify_plate_number_location", "arguments": "{\"platecodeloc\": \"ABC\"}"}}]}, "messages": [{"role": "user", "content": "What is the state and LGA associated with the Nigerian plate number 'ABC123'?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "verify_plate_number_location", "arguments": "{\"platecodeloc\": \"ABC\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "titles_x_titles_by_ids", "description": "Fetch movie or series titles by their IMDB IDs.", "parameters": {"idslist": {"description": "Comma-separated list of IMDB IDs (e.g., 'tt0001702,tt0001856,tt0001856').", "type": "str", "default": ""}, "list": {"description": "Comma-separated list of IMDB IDs (e.g., 'tt0001702,tt0001856,tt0001856').", "type": "str", "default": ""}, "info": {"description": "Structure of the information to be retrieved (e.g., 'base_info', 'mini_info', 'image'). Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "titles_random", "description": "Fetches a random list of movie titles from the Movies Database API based on the provided query parameters.", "parameters": {"startyear": {"description": "The starting year range filter (e.g., 2020).", "type": "int, optional", "default": ""}, "genre": {"description": "The genre filter (e.g., 'Drama').", "type": "str, optional", "default": ""}, "titletype": {"description": "The type of title to filter by (e.g., 'movie').", "type": "str, optional", "default": ""}, "sort": {"description": "Sorting order (e.g., 'year.incr' or 'year.decr').", "type": "str, optional", "default": ""}, "limit": {"description": "The number of titles per page (default is 10, maximum is 10).", "type": "int, optional", "default": ""}, "info": {"description": "Type of information to include (default is 'mini-info'; options include 'base_info', 'mini_info', 'image', etc.).", "type": "str, optional", "default": ""}, "endyear": {"description": "The ending year range filter (e.g., 2020).", "type": "int, optional", "default": ""}, "year": {"description": "The starting year range filter (e.g., 2020).", "type": "int, optional", "default": ""}, "list": {"description": "The selected list type (e.g., 'most_pop_movies', 'most_pop_series', 'top_rated_series_250', etc.).", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "get_movies_by_name", "description": "python", "parameters": {"movie_name": {"description": "The name of the movie to search for. Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "get_one_anime_by_ranking", "description": "Fetches the details of an anime based on its ranking from the Anime DB API.", "parameters": {"rank": {"description": "The ranking position of the desired anime.", "type": "int", "default": "1"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_one_anime_by_ranking", "arguments": "{\"rank\": 100}"}}]}, "messages": [{"role": "user", "content": "What is the anime ranked at number 100 in the Anime DB?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_one_anime_by_ranking", "arguments": "{\"rank\": 100}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "getrandomsolution", "description": "Fetches a JSON data consisting of a random optimal solution for a given cube position.", "parameters": {"position": {"description": "The cube position for which to retrieve the random optimal solution.", "type": "str", "default": "GBWGYOGYRYOORWROBRWYGWBB"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getrandomsolution", "arguments": "{\"position\": \"UFR URF ULF ULB UDB ULB DBL DFR DFL UBR\"}"}}]}, "messages": [{"role": "user", "content": "What is a random optimal solution for the cube position 'UFR URF ULF ULB UDB ULB DBL DFR DFL UBR'?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getrandomsolution", "arguments": "{\"position\": \"UFR URF ULF ULB UDB ULB DBL DFR DFL UBR\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "list_by_body_part", "description": "Fetch exercises based on the specified body part from the ExerciseDB API.", "parameters": {"bodypart": {"description": "The body part for which to fetch exercises (e.g., chest, legs).", "type": "str", "default": ""}}}}, {"type": "function", "function": {"name": "v1_exercises", "description": "Fetch up to 10 exercises from the API Ninjas Exercises API that satisfy the given search parameters.", "parameters": {"offset": {"description": "Number of results to offset for pagination. Default is 0.", "type": "int, optional", "default": ""}, "muscle": {"description": "Muscle group targeted by the exercise. Possible values include: 'abdominals', 'abductors', 'adductors', 'biceps', 'calves', 'chest', 'forearms', 'glutes', 'hamstrings', 'lats', 'lower_back', 'middle_back', 'neck', 'quadriceps', 'traps', 'triceps'. Default is 'biceps'.", "type": "str, optional", "default": "biceps"}, "type": {"description": "Exercise type. Possible values include: 'cardio', 'olympic_weightlifting', 'plyometrics', 'powerlifting', 'strength', 'stretching', 'strongman'.", "type": "str, optional", "default": ""}, "difficulty": {"description": "Difficulty level of the exercise. Possible values include: 'beginner', 'intermediate', 'expert'.", "type": "str, optional", "default": ""}, "name": {"description": "Name of the exercise. This value can be partial (e.g., 'press' will match 'Dumbbell Bench Press').", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "apgar", "description": "Makes a request to the APGAR scoring API and returns the observation result in JSON format.", "parameters": {"respirationscore": {"description": "Score for the respiratory effort.", "type": "str", "default": ""}, "skincolorscore": {"description": "Score for the baby's skin color.", "type": "str", "default": ""}, "heartrateinbpm": {"description": "Heart rate of the baby in beats per minute.", "type": "int", "default": ""}, "responsetoirritablestimuliscore": {"description": "Score for the baby's response to irritable stimuli.", "type": "str", "default": ""}, "activityscore": {"description": "Score for the baby's muscle tone and activity.", "type": "str", "default": ""}}}}, {"type": "function", "function": {"name": "triage_virtual", "description": "Determines if a patient should be attended via virtual consultation or in-person consultation based on their ID.", "parameters": {"is_id": {"description": "The unique identifier of the patient.", "type": "str", "default": "me duele la cabeza"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "triage_virtual", "arguments": "{\"is_id\": \"XYZ789\"}"}}]}, "messages": [{"role": "user", "content": "Determine if a patient with ID 'XYZ789' should have a virtual or in-person consultation."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "triage_virtual", "arguments": "{\"is_id\": \"XYZ789\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_vehicle_information", "description": "Fetch vehicle information from the Mexican Vehicle Registry using the provided license plate number and optional RapidAPI key.", "parameters": {"plates": {"description": "The license plate number for which to retrieve the vehicle information.", "type": "str", "default": "Y20BBG"}}}}, {"type": "function", "function": {"name": "syntax_status_syntax_ticket_get", "description": "Fetch the result of a syntax check using a provided ticket from the IFC BIM Services API via RapidAPI.", "parameters": {"ticket": {"description": "The unique identifier for the syntax check result to be retrieved.", "type": "str", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_vehicle_information", "arguments": "{\"plates\": \"ABC123\"}"}}, {"type": "function", "function": {"name": "syntax_status_syntax_ticket_get", "arguments": "{\"ticket\": \"12345\"}"}}]}, "messages": [{"role": "user", "content": "Can you provide the vehicle information for a car with license plate 'ABC123' in Mexico, and also check the syntax status for ticket '12345'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_vehicle_information", "arguments": "{\"plates\": \"ABC123\"}"}}, {"type": "function", "function": {"name": "syntax_status_syntax_ticket_get", "arguments": "{\"ticket\": \"12345\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "list_top_tracks", "description": "Fetches the weekly or daily top tracks from Spotify for a specified region and date.", "parameters": {"region": {"description": "The region code in ISO 3166 alpha-2 format (e.g., 'US'). Defaults to 'global'.", "type": "str, optional", "default": ""}, "type": {"description": "The time span for the chart. Defaults to 'weekly'.", "type": "str, optional", "default": ""}, "date": {"description": "The date in 'YYYY-MM-DD' format. Leave blank to get the latest chart.", "type": "str, optional", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "list_top_tracks", "arguments": "{\"region\": \"US\", \"type\": \"weekly\"}"}}, {"type": "function", "function": {"name": "list_top_tracks", "arguments": "{\"region\": \"UK\", \"type\": \"daily\"}"}}]}, "messages": [{"role": "user", "content": "Can you list the top weekly tracks for the US and daily tracks for the UK, both for the latest date?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "list_top_tracks", "arguments": "{\"region\": \"US\", \"type\": \"weekly\"}"}}, {"type": "function", "function": {"name": "list_top_tracks", "arguments": "{\"region\": \"UK\", \"type\": \"daily\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "sort_numbers", "description": "Sorts a list of numbers in ascending or descending order.", "parameters": {"numbers": {"description": "The list of numbers to be sorted.", "type": "List[float]"}, "descending": {"description": "If True, sorts the numbers in descending order. Defaults to False.", "type": "bool, optional"}}}}, {"type": "function", "function": {"name": "greatest_common_divisor", "description": "Computes the greatest common divisor (GCD) of two non-negative integers.", "parameters": {"a": {"description": "The first non-negative integer.", "type": "int"}, "b": {"description": "The second non-negative integer.", "type": "int"}}}}, {"type": "function", "function": {"name": "chi_square_independence_test", "description": "Performs a Chi-Square test for independence on a 2x2 contingency table.", "parameters": {"contingency_table": {"description": "A 2x2 contingency table represented as a list of lists.", "type": "List[List[int]]", "default": 0.05}, "significance_level": {"description": "The significance level for the Chi-Square test. Defaults to 0.05.", "type": "float, optional", "default": 0.05}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "greatest_common_divisor", "arguments": "{\"a\": 48, \"b\": 18}"}}]}, "messages": [{"role": "user", "content": "Find the greatest common divisor of 48 and 18."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "greatest_common_divisor", "arguments": "{\"a\": 48, \"b\": 18}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "tag_news", "description": "Fetch the latest news stories for a given tag using the BizToc RapidAPI.", "parameters": {"tag": {"description": "The tag for which to fetch the latest news stories.", "type": "str", "default": "apple"}}}}, {"type": "function", "function": {"name": "actors_get_all_images", "description": "Returns all images of a specific actor or actress based on their unique identifier (nconst).", "parameters": {"nconst": {"description": "The unique identifier of the actor/actress. It typically starts with 'nm' followed by a series of numbers (e.g., 'nm0001667').", "type": "str", "default": "nm0001667"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "tag_news", "arguments": "{\"tag\": \"politics\"}"}}, {"type": "function", "function": {"name": "actors_get_all_images", "arguments": "{\"nconst\": \"nm0000358\"}"}}]}, "messages": [{"role": "user", "content": "Get the latest news stories for the tag 'politics' and find all images of the actress with the unique identifier 'nm0000358'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "tag_news", "arguments": "{\"tag\": \"politics\"}"}}, {"type": "function", "function": {"name": "actors_get_all_images", "arguments": "{\"nconst\": \"nm0000358\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "single_strain", "description": "Fetches detailed information for a single strain by its ID using the Weed Strain API.", "parameters": {"is_id": {"description": "The ID of the strain for which details are to be fetched.", "type": "int", "default": "45"}}}}, {"type": "function", "function": {"name": "data_breach_checker_endpoint", "description": "Checks if the given email has been compromised in any known data breaches using the Data Breach Checker API.", "parameters": {"email": {"description": "The email address to be checked for data breaches.", "type": "str", "default": "example@xyz.com"}}}}, {"type": "function", "function": {"name": "city_data", "description": "Fetches a list of cities using the Toolbench RapidAPI.", "parameters": {"count": {"description": "The number of cities to retrieve. Defaults to 10. Maximum value is 1000.", "type": "int, optional", "default": "10"}}}}, {"type": "function", "function": {"name": "get_hsn_tsn", "description": "Fetch HSN/TSN data for a specified car query from the HSN-TSN API.", "parameters": {"query": {"description": "The search query for the car.", "type": "str", "default": "Audi A6"}, "year": {"description": "The year of the car. Defaults to 2018.", "type": "int, optional", "default": "2018"}}}}, {"type": "function", "function": {"name": "specifications_by_year_make_model", "description": "Retrieves motorcycle specifications for a given make, model, and year from the Motorcycle Specs Database.", "parameters": {"make": {"description": "The manufacturer of the motorcycle.", "type": "str", "default": "BMW"}, "model": {"description": "The model of the motorcycle.", "type": "str", "default": "F 800 GS Trophy"}, "year": {"description": "The production year of the motorcycle.", "type": "str", "default": "2012"}}}}, {"type": "function", "function": {"name": "get_watches_by_brand_family_model", "description": "Fetches a list of watches based on brand name, family, and model using the provided RapidAPI key.", "parameters": {"brandname": {"description": "The brand name of the watch.", "type": "str", "default": "Omega"}, "model": {"description": "The model name of the watch.", "type": "str", "default": "2005.75.00"}, "family": {"description": "The family category of the watch.", "type": "str", "default": "Aqua Terra"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "city_data", "arguments": "{\"count\": 5}"}}]}, "messages": [{"role": "user", "content": "Retrieve data for 5 cities from the Toolbench RapidAPI."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "city_data", "arguments": "{\"count\": 5}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_song_related", "description": "Fetches related content for a song using the YouTube Music API.", "parameters": {"browse_id": {"description": "The unique identifier for the song being queried.", "type": "str", "default": "MPTRt_ZXONnvFeQpN"}}}}, {"type": "function", "function": {"name": "multi_search", "description": "Performs a multi-search on Genius based on the given query, returning paginated results.", "parameters": {"q": {"description": "The search query string.", "type": "str", "default": ""}, "per_page": {"description": "The number of results to return per request. Defaults to 3.", "type": "int, optional", "default": "3"}, "page": {"description": "The number of results to return per request. Defaults to 3.", "type": "int, optional", "default": "1"}, "text_format": {"description": "The format for text bodies related to the document. Can be one or more of `dom`, `plain`, `markdown`, and `html`, separated by commas. Defaults to None.", "type": "str, optional", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_song_related", "arguments": "{\"browse_id\": \"UCoa6YKdbMKWx1Yh2tqXGqkg\"}"}}, {"type": "function", "function": {"name": "multi_search", "arguments": "{\"q\": \"Imagine by John Lennon\"}"}}]}, "messages": [{"role": "user", "content": "What are the related videos for the song with browse_id 'UCoa6YKdbMKWx1Yh2tqXGqkg' and can you get the first page of lyrics for 'Imagine' by John Lennon?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_song_related", "arguments": "{\"browse_id\": \"UCoa6YKdbMKWx1Yh2tqXGqkg\"}"}}, {"type": "function", "function": {"name": "multi_search", "arguments": "{\"q\": \"Imagine by John Lennon\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "companies_id_people", "description": "Fetches and returns information about people associated with the company with the given identifier from the German company database using RapidAPI.", "parameters": {"is_id": {"description": "The identifier of the company whose associated people's information is to be retrieved.", "type": "str", "default": "DEVFCLQFW054"}}}}, {"type": "function", "function": {"name": "read_a_link_or_token_by_its_id", "description": "Fetches the content of a link or token by its ID using the Token2Go API.", "parameters": {"is_id": {"description": "The ID of the link or token to be fetched.", "type": "str", "default": ""}, "t": {"description": "The type of content to fetch (either 'link' or 'token').", "type": "str", "default": "link"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "companies_id_people", "arguments": "{\"is_id\": \"DE864209753\"}"}}, {"type": "function", "function": {"name": "read_a_link_or_token_by_its_id", "arguments": "{\"is_id\": \"TKN005\", \"t\": \"token\"}"}}]}, "messages": [{"role": "user", "content": "I'm researching the management team at 'DE864209753'. Also, I need the details of a token with ID 'TKN005'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "companies_id_people", "arguments": "{\"is_id\": \"DE864209753\"}"}}, {"type": "function", "function": {"name": "read_a_link_or_token_by_its_id", "arguments": "{\"is_id\": \"TKN005\", \"t\": \"token\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "find_first_non_repeating_char", "description": "Finds the first non-repeating character in a string.", "parameters": {"s": {"description": "The input string.", "type": "str"}}}}, {"type": "function", "function": {"name": "longest_common_prefix", "description": "Finds the longest common prefix among a list of strings.", "parameters": {"strs": {"description": "The list of strings.", "type": "List[str]"}}}}, {"type": "function", "function": {"name": "generate_password", "description": "Generates a random password of specified length and character types.", "parameters": {"length": {"description": "The length of the password. Defaults to 12.", "type": "int, optional", "default": 12}, "include_special": {"description": "Whether to include special characters in the password. Defaults to True.", "type": "bool, optional", "default": true}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_first_non_repeating_char", "arguments": "{\"s\": \"The quick brown fox jumps over the lazy dog\"}"}}]}, "messages": [{"role": "user", "content": "Find the first non-repeating character in the sentence 'The quick brown fox jumps over the lazy dog'"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_first_non_repeating_char", "arguments": "{\"s\": \"The quick brown fox jumps over the lazy dog\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_content", "description": "Retrieves the content from the given URL using the RapidAPI service.", "parameters": {"url": {"description": "The URL of the webpage from which to extract content.", "type": "str", "default": "https://www.cnbc.com/2022/06/27/three-arrows-capital-crypto-hedge-fund-defaults-on-voyager-loan.html"}}}}, {"type": "function", "function": {"name": "dns", "description": "Fetches DNS records for a given domain using the RapidAPI domain checker service.", "parameters": {"domain": {"description": "The domain for which DNS records are to be retrieved.", "type": "str", "default": "rapidapi.com"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "dns", "arguments": "{\"domain\": \"apple.com\"}"}}, {"type": "function", "function": {"name": "get_content", "arguments": "{\"url\": \"https://support.apple.com\"}"}}]}, "messages": [{"role": "user", "content": "What are the DNS records for apple.com and can you fetch the content from their support page?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "dns", "arguments": "{\"domain\": \"apple.com\"}"}}, {"type": "function", "function": {"name": "get_content", "arguments": "{\"url\": \"https://support.apple.com\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_gifs_by_id", "description": "Fetches multiple GIF details from Giphy by their IDs.", "parameters": {"ids": {"description": "A comma-separated string of GIF IDs.", "type": "str", "default": "feqkVgjJpYtjy,7rzbxdu0ZEXLy"}}}}, {"type": "function", "function": {"name": "get_channel_goals", "description": "Fetches the goals for a specified Twitch channel using the provided RapidAPI key.", "parameters": {"channel": {"description": "The name of the Twitch channel for which to retrieve goals.", "type": "str", "default": "shadoune666"}}}}, {"type": "function", "function": {"name": "go", "description": "Convert textual content to .mp3 using a text-to-speech API.", "parameters": {"t": {"description": "The text content to be converted to speech.", "type": "str", "default": "Here is a text to be converted."}, "l": {"description": "The language code for the text-to-speech conversion. Supported languages include 'ru', 'en', 'de', 'es', 'pt', 'fr', 'nl', 'zh'.", "type": "str", "default": "en"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_gifs_by_id", "arguments": "{\"ids\": \"B8C9D0,E1F2G3,H4I5J6\"}"}}, {"type": "function", "function": {"name": "go", "arguments": "{\"t\": \"Hallo, Welt\", \"l\": \"de\"}"}}]}, "messages": [{"role": "user", "content": "Fetch details for GIFs 'B8C9D0', 'E1F2G3', and 'H4I5J6'. Convert the text 'Hallo, Welt' to speech in German."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_gifs_by_id", "arguments": "{\"ids\": \"B8C9D0,E1F2G3,H4I5J6\"}"}}, {"type": "function", "function": {"name": "go", "arguments": "{\"t\": \"Hallo, Welt\", \"l\": \"de\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "convert_cooking_measurements", "description": "Converts a quantity of a cooking ingredient from one measurement unit to another.", "parameters": {"quantity": {"description": "The quantity of the item to convert.", "type": "float"}, "from_unit": {"description": "The unit of the input quantity (e.g., 'cup', 'gram').", "type": "str"}, "to_unit": {"description": "The unit to which the quantity should be converted (e.g., 'ounce', 'kilogram').", "type": "str"}, "item": {"description": "The cooking ingredient being converted (e.g., 'flour', 'sugar').", "type": "str"}}}}, {"type": "function", "function": {"name": "find_equilibrium_index", "description": "Finds the equilibrium index of a list, where the sum of elements on the left is equal to the sum of elements on the right.", "parameters": {"arr": {"description": "The input list of integers.", "type": "List[int]"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "convert_cooking_measurements", "arguments": "{\"quantity\": 500.0, \"from_unit\": \"gram\", \"to_unit\": \"cup\", \"item\": \"sugar\"}"}}]}, "messages": [{"role": "user", "content": "For my recipe, I need 500 grams of sugar, but I only have measuring cups. How many cups do I need?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "convert_cooking_measurements", "arguments": "{\"quantity\": 500.0, \"from_unit\": \"gram\", \"to_unit\": \"cup\", \"item\": \"sugar\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "integrate", "description": "Calculate the area under a curve for a specified function between two x values.", "parameters": {"function": {"description": "The function to integrate, represented as a string. For example, 'x^3'", "type": "str", "default": "trapezoid"}, "start_x": {"description": "The starting x-value to integrate over.", "type": "int", "default": "trapezoid"}, "end_x": {"description": "The ending x-value to integrate over.", "type": "int"}, "method": {"description": "The method of numerical integration to use. Choices are 'trapezoid' or 'simpson'.", "type": "str"}}}}, {"type": "function", "function": {"name": "calculate_investment_return", "description": "Calculates the return on investment based on the initial deposit amount, annual interest rate, and investment period.", "parameters": {"initial_amount": {"description": "The initial deposit amount.", "type": "int"}, "interest_rate": {"description": "The annual interest rate provided by the bank.", "type": "float"}, "num_years": {"description": "The number of years the money is invested.", "type": "int"}}}}, {"type": "function", "function": {"name": "is_power", "description": "Checks if a number is a power of a given base.", "parameters": {"num": {"description": "The number to check.", "type": "int"}, "base": {"description": "The base to check against.", "type": "int"}}}}, {"type": "function", "function": {"name": "expand_around_center", "description": "Helper function to expand around a center for finding palindromic substrings.", "parameters": {"s": {"description": "The input string.", "type": "str"}, "left": {"description": "The left index of the center.", "type": "int"}, "right": {"description": "The right index of the center.", "type": "int"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_investment_return", "arguments": "{\"initial_amount\": 5000, \"interest_rate\": 0.03, \"num_years\": 5}"}}]}, "messages": [{"role": "user", "content": "Calculate the investment return for an initial amount of $5000, an interest rate of 3%, over 5 years."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_investment_return", "arguments": "{\"initial_amount\": 5000, \"interest_rate\": 0.03, \"num_years\": 5}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "find_duplicate_number", "description": "Finds the duplicate number in a list of integers.", "parameters": {"nums": {"description": "The list of integers.", "type": "List[int]"}}}}, {"type": "function", "function": {"name": "flatten_list", "description": "Flattens a nested list into a single-level list.", "parameters": {"nested_list": {"description": "The nested list to be flattened.", "type": "List"}}}}, {"type": "function", "function": {"name": "find_max_subarray_sum", "description": "Finds the maximum sum of a contiguous subarray within a list of integers.", "parameters": {"nums": {"description": "The input list of integers.", "type": "List[int]"}}}}, {"type": "function", "function": {"name": "calculate_factorial", "description": "Calculates the factorial of a non-negative integer.", "parameters": {"n": {"description": "The non-negative integer.", "type": "int"}}}}, {"type": "function", "function": {"name": "split_list", "description": "Splits a list into chunks of a specified size.", "parameters": {"lst": {"description": "The input list.", "type": "List"}, "chunk_size": {"description": "The size of each chunk.", "type": "int"}}}}, {"type": "function", "function": {"name": "get_range", "description": "Helper function to format the range string.", "parameters": {"start": {"description": "The start of the range.", "type": "int"}, "end": {"description": "The end of the range.", "type": "int"}}}}, {"type": "function", "function": {"name": "count_occurrences", "description": "Counts the occurrences of each element in a list and returns a dictionary with the counts.", "parameters": {"lst": {"description": "The input list.", "type": "List"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "split_list", "arguments": "{\"lst\": [1, 2, 3, 4, 5, 6, 7, 8, 9], \"chunk_size\": 3}"}}]}, "messages": [{"role": "user", "content": "Split the list [1, 2, 3, 4, 5, 6, 7, 8, 9] into chunks of size 3."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "split_list", "arguments": "{\"lst\": [1, 2, 3, 4, 5, 6, 7, 8, 9], \"chunk_size\": 3}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "fibonacci_numbers", "description": "Generates the first n Fibonacci numbers.", "parameters": {"n": {"description": "The number of Fibonacci numbers to generate.", "type": "int"}}}}, {"type": "function", "function": {"name": "calculate_median", "description": "Calculates the median of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[Union[int, float]]"}}}}, {"type": "function", "function": {"name": "bacterial_growth", "description": "Calculates the bacterial population after a given time based on the initial population and growth rate.", "parameters": {"initial_population": {"description": "The initial bacterial population.", "type": "int", "default": 20}, "growth_rate": {"description": "The growth rate per unit time.", "type": "float", "default": 20}, "time": {"description": "The time elapsed.", "type": "float"}, "doubling_time": {"description": "The doubling time of the bacteria in minutes. Defaults to 20.", "type": "float, optional"}}}}, {"type": "function", "function": {"name": "dice_roll_probability", "description": "Calculates the probability of rolling a specific sum with a given number of dice, each having a certain number of faces.", "parameters": {"target_sum": {"description": "The target sum to calculate the probability for.", "type": "int", "default": 6}, "num_dice": {"description": "The number of dice being rolled.", "type": "int", "default": 6}, "num_faces": {"description": "The number of faces on each die. Defaults to 6.", "type": "int, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_median", "arguments": "{\"numbers\": \"fibonacci_numbers(n=15)\"}"}}, {"type": "function", "function": {"name": "bacterial_growth", "arguments": "{\"initial_population\": 200, \"growth_rate\": 0.7, \"time\": 3, \"doubling_time\": 40}"}}, {"type": "function", "function": {"name": "dice_roll_probability", "arguments": "{\"target_sum\": 10, \"num_dice\": 3, \"num_faces\": 4}"}}]}, "messages": [{"role": "user", "content": "Calculate the median of the first 15 Fibonacci numbers, the bacterial population after 3 hours given an initial population of 200, a growth rate of 0.7 per hour, and a doubling time of 40 minutes, and the probability of rolling a sum of 10 with 3 four-sided dice."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "calculate_median", "arguments": "{\"numbers\": \"fibonacci_numbers(n=15)\"}"}}, {"type": "function", "function": {"name": "bacterial_growth", "arguments": "{\"initial_population\": 200, \"growth_rate\": 0.7, \"time\": 3, \"doubling_time\": 40}"}}, {"type": "function", "function": {"name": "dice_roll_probability", "arguments": "{\"target_sum\": 10, \"num_dice\": 3, \"num_faces\": 4}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "mean_confidence_interval", "description": "Calculates the confidence interval for a sample mean.", "parameters": {"std_dev": {"description": "The standard deviation of the sample.", "type": "float", "default": 0.95}, "sample_size": {"description": "The size of the sample.", "type": "int", "default": 0.95}, "mean": {"description": "The mean of the sample.", "type": "float"}, "confidence": {"description": "The desired confidence level. Default is 0.95.", "type": "float, optional"}}}}, {"type": "function", "function": {"name": "calculate_standard_deviation", "description": "Calculates the standard deviation of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[Union[int, float]]"}}}}, {"type": "function", "function": {"name": "greatest_common_divisor", "description": "Computes the greatest common divisor (GCD) of two non-negative integers.", "parameters": {"a": {"description": "The first non-negative integer.", "type": "int"}, "b": {"description": "The second non-negative integer.", "type": "int"}}}}, {"type": "function", "function": {"name": "euclidean_distance", "description": "Computes the Euclidean distance between two points in a 2D plane.", "parameters": {"point_a": {"description": "The coordinates of the first point (x, y).", "type": "Tuple[float, float]"}, "point_b": {"description": "The coordinates of the second point (x, y).", "type": "Tuple[float, float]"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "mean_confidence_interval", "arguments": "{\"std_dev\": 2.7, \"sample_size\": 75, \"mean\": 17.3, \"confidence\": 0.9}"}}]}, "messages": [{"role": "user", "content": "Find the confidence interval for a sample with a standard deviation of 2.7, a sample size of 75, and a mean of 17.3. The desired confidence level is 0.9."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "mean_confidence_interval", "arguments": "{\"std_dev\": 2.7, \"sample_size\": 75, \"mean\": 17.3, \"confidence\": 0.9}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "v1_city", "description": "Fetches city data from the API Ninjas City API endpoint with various filtering criteria.", "parameters": {"max_lat": {"description": "Maximum latitude coordinate.", "type": "int, optional", "default": ""}, "min_population": {"description": "Minimum city population.", "type": "int, optional", "default": ""}, "min_lon": {"description": "Minimum longitude coordinate.", "type": "int, optional", "default": ""}, "country": {"description": "Country filter. Must be an ISO-3166 alpha-2 code (default is 'US').", "type": "str, optional", "default": "US"}, "max_population": {"description": "Maximum city population.", "type": "int, optional", "default": ""}, "min_lat": {"description": "Minimum latitude coordinate.", "type": "int, optional", "default": ""}, "name": {"description": "Name of the city to search for (default is 'New York').", "type": "str, optional", "default": "New York"}, "max_lon": {"description": "Maximum longitude coordinate.", "type": "int, optional", "default": ""}, "limit": {"description": "Number of results to return. Must be between 1 and 30 (default is 1).", "type": "int, optional", "default": "1"}}}}, {"type": "function", "function": {"name": "ip_to_location", "description": "Retrieves location details based on the provided IP address using the RapidAPI service.", "parameters": {"ip": {"description": "The IP address for which to get location details. Defaults to '179.27.93.248'.", "type": "str, optional", "default": "179.27.93.248"}}}}, {"type": "function", "function": {"name": "get_city_by_id", "description": "Fetch details of a city by its ID using the RapidAPI Geography API.", "parameters": {"is_id": {"description": "The ID of the city to be fetched.", "type": "str", "default": "1796236"}}}}, {"type": "function", "function": {"name": "measure_distance", "description": "Calculates the distance between two geographic locations specified by their latitude and longitude coordinates, with an optional unit of measurement.", "parameters": {"lon2": {"description": "Longitude of the second location.", "type": "int", "default": "10.103167361330975"}, "lat2": {"description": "Latitude of the second location.", "type": "int", "default": "36.81395975"}, "lon1": {"description": "Longitude of the first location.", "type": "int", "default": "10.7603483"}, "lat1": {"description": "Latitude of the first location.", "type": "int", "default": "34.797783"}, "unit": {"description": "Unit of distance measurement. Valid options are \"km\" (default), \"mi\", \"ft\", and \"yd\".", "type": "str, optional", "default": "km"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_city_by_id", "arguments": "{\"is_id\": \"98765\"}"}}, {"type": "function", "function": {"name": "measure_distance", "arguments": "{\"lon1\": -0.1257, \"lat1\": 51.5085, \"lon2\": 2.3522, \"lat2\": 48.8566, \"unit\": \"km\"}"}}]}, "messages": [{"role": "user", "content": "Retrieve the city details for ID '98765' and measure the distance between London and Paris in kilometers."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_city_by_id", "arguments": "{\"is_id\": \"98765\"}"}}, {"type": "function", "function": {"name": "measure_distance", "arguments": "{\"lon1\": -0.1257, \"lat1\": 51.5085, \"lon2\": 2.3522, \"lat2\": 48.8566, \"unit\": \"km\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "min_meeting_rooms", "description": "Finds the minimum number of meeting rooms required to accommodate all meetings.", "parameters": {"intervals": {"description": "A list of meeting time intervals, where each interval is represented as [start_time, end_time].", "type": "List[List[int]]"}}}}, {"type": "function", "function": {"name": "is_valid_palindrome", "description": "Checks if a string is a valid palindrome, considering only alphanumeric characters and ignoring case.", "parameters": {"s": {"description": "The input string.", "type": "str"}}}}, {"type": "function", "function": {"name": "investment_profit", "description": "Calculates the profit from an investment based on the initial amount, annual return rate, and time.", "parameters": {"amount": {"description": "The initial investment amount.", "type": "float"}, "rate": {"description": "The annual return rate expressed as a decimal.", "type": "float"}, "years": {"description": "The number of years the investment is held.", "type": "int"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "investment_profit", "arguments": "{\"amount\": 2000, \"rate\": 0.03, \"years\": 3}"}}]}, "messages": [{"role": "user", "content": "If I invest $2000 at an annual return rate of 3% for 3 years, how much profit will I make?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "investment_profit", "arguments": "{\"amount\": 2000, \"rate\": 0.03, \"years\": 3}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "independent_samples_t_test", "description": "Conducts a two-sample independent t-test and returns the t-statistic, p-value, and conclusion.", "parameters": {"sample1": {"description": "The first sample of observations.", "type": "List[float]", "default": 0.05}, "sample2": {"description": "The second sample of observations.", "type": "List[float]", "default": 0.05}, "alpha": {"description": "The significance level of the test. Defaults to 0.05.", "type": "float, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "independent_samples_t_test", "arguments": "{\"sample1\": [1000, 2000, 3000, 4000, 5000], \"sample2\": [6000, 7000, 8000, 9000, 10000]}"}}]}, "messages": [{"role": "user", "content": "Perform a t-test for two samples [1000, 2000, 3000, 4000, 5000] and [6000, 7000, 8000, 9000, 10000] with the default significance level."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "independent_samples_t_test", "arguments": "{\"sample1\": [1000, 2000, 3000, 4000, 5000], \"sample2\": [6000, 7000, 8000, 9000, 10000]}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "quote", "description": "Retrieve the latest quote for the specified financial instrument.", "parameters": {"symbol": {"description": "The symbol of the financial instrument (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').", "type": "str", "default": "AMZN"}, "interval": {"description": "Time interval between data points. Supported values are `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1day"}, "outputsize": {"description": "The number of data points to retrieve. Defaults to 30.", "type": "int, optional", "default": 30}, "format": {"description": "The format of the response. Can be 'csv' or 'json'. Defaults to 'json'.", "type": "str, optional", "default": "json"}}}}, {"type": "function", "function": {"name": "get_10_year_historical_quarterly_prices", "description": "Fetch the 10-year historical quarterly prices for a given stock ticker.", "parameters": {"ticker": {"description": "The stock ticker symbol for which the historical data is to be fetched.", "type": "str", "default": "AAPL"}}}}, {"type": "function", "function": {"name": "market_get_movers", "description": "Fetch the latest information on market movers based on a specified template.", "parameters": {"is_id": {"description": "The ID value returned from the market auto-complete endpoint, used to specify the market segment.", "type": "str", "default": "nky:ind"}, "template": {"description": "A string representing the category of market movers to retrieve. Possible values are 'COMMODITY', 'CURRENCY', 'INDEX', 'INDEXFUTURE', 'RATE', or 'STOCK'. Defaults to 'INDEX'.", "type": "str, optional", "default": "INDEX"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_10_year_historical_quarterly_prices", "arguments": "{\"ticker\": \"TSLA\"}"}}, {"type": "function", "function": {"name": "quote", "arguments": "{\"symbol\": \"TSLA\", \"interval\": \"5min\"}"}}]}, "messages": [{"role": "user", "content": "Fetch the 10-year historical quarterly prices for Tesla Inc. (TSLA) and the latest quote for the same stock with a 5-minute interval."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_10_year_historical_quarterly_prices", "arguments": "{\"ticker\": \"TSLA\"}"}}, {"type": "function", "function": {"name": "quote", "arguments": "{\"symbol\": \"TSLA\", \"interval\": \"5min\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "event_managers", "description": "Fetch team managers by event ID using the Sofasport API.", "parameters": {"event_id": {"description": "The ID of the event for which to retrieve managers.", "type": "int", "default": "10236820"}}}}, {"type": "function", "function": {"name": "bans_esports", "description": "Fetches the esports bans for a given event using the provided event ID.", "parameters": {"event_id": {"description": "The ID of the esports event to fetch bans for.", "type": "int", "default": "10289011"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "event_managers", "arguments": "{\"event_id\": 12345}"}}, {"type": "function", "function": {"name": "bans_esports", "arguments": "{\"event_id\": 67890}"}}]}, "messages": [{"role": "user", "content": "Can you provide the managers for event ID 12345 and the esports bans for event ID 67890?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "event_managers", "arguments": "{\"event_id\": 12345}"}}, {"type": "function", "function": {"name": "bans_esports", "arguments": "{\"event_id\": 67890}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "is_valid_email", "description": "Checks if an email address is valid.", "parameters": {"email": {"description": "The email address to validate.", "type": "str"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "is_valid_email", "arguments": "{\"email\": \"admin@domain\"}"}}, {"type": "function", "function": {"name": "is_valid_email", "arguments": "{\"email\": \"admin@.com\"}"}}]}, "messages": [{"role": "user", "content": "Are 'admin@domain' and 'admin@.com' valid email addresses?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "is_valid_email", "arguments": "{\"email\": \"admin@domain\"}"}}, {"type": "function", "function": {"name": "is_valid_email", "arguments": "{\"email\": \"admin@.com\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_index_price_kline", "description": "Fetches the index price kline data for a specified symbol and category within a given time range.", "parameters": {"symbol": {"description": "The symbol for which the kline data is to be fetched.", "type": "str", "default": "BTCUSDT"}, "category": {"description": "The derivatives products category. Possible values are 'linear' and 'inverse', including inverse futures.", "type": "str", "default": "linear"}, "interval": {"description": "The interval for the kline data. Possible values are '1', '3', '5', '15', '30', '60', '120', '240', '360', '720', 'D', 'M', and 'W'.", "type": "str", "default": "D"}, "end": {"description": "The end timestamp point for the query results, in milliseconds.", "type": "int", "default": "1652544000000"}, "start": {"description": "The start timestamp point for the query results, in milliseconds.", "type": "int", "default": "1652112000000"}, "limit": {"description": "The limit for the data size per page, with a maximum size of 200. Defaults to None.", "type": "int, optional", "default": ""}}}}, {"type": "function", "function": {"name": "balance", "description": "Retrieves the balance sheet statements of a specified stock company.", "parameters": {"symbol": {"description": "The stock symbol of the company (e.g., 'AAPL' for Apple Inc.).", "type": "str", "default": "MSFT"}, "period": {"description": "The reporting period for the balance sheet, which can be 'annual' or 'quarterly'.", "type": "str", "default": "quarter"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "balance", "arguments": "{\"symbol\": \"MSFT\", \"period\": \"quarterly\"}"}}]}, "messages": [{"role": "user", "content": "Get the quarterly balance sheet for 'MSFT'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "balance", "arguments": "{\"symbol\": \"MSFT\", \"period\": \"quarterly\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "wire_resistance", "description": "Calculates the resistance of a wire based on its length, cross-sectional area, and material resistivity.", "parameters": {"length_m": {"description": "The length of the wire in meters.", "type": "int", "default": "copper"}, "area_sq_m": {"description": "The cross-sectional area of the wire in square meters.", "type": "float", "default": "copper"}, "material": {"description": "The material of the wire. Allowed values: \"copper\" (default) or \"aluminum\".", "type": "str, optional"}}}}, {"type": "function", "function": {"name": "find_equilibrium_index", "description": "Finds the equilibrium index of a list, where the sum of elements on the left is equal to the sum of elements on the right.", "parameters": {"arr": {"description": "The input list of integers.", "type": "List[int]"}}}}, {"type": "function", "function": {"name": "calculate_median", "description": "Calculates the median of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[Union[int, float]]"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_equilibrium_index", "arguments": "{\"arr\": [2, 4, 6, 8, 10, 12]}"}}]}, "messages": [{"role": "user", "content": "Is there an equilibrium index for the list [2, 4, 6, 8, 10, 12]?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_equilibrium_index", "arguments": "{\"arr\": [2, 4, 6, 8, 10, 12]}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "prime_factorization", "description": "Computes the prime factorization of a positive integer.", "parameters": {"number": {"description": "The positive integer to factorize.", "type": "int"}}}}, {"type": "function", "function": {"name": "calculate_card_game_probability", "description": "Calculate the probability of drawing a certain number of desired cards from a deck.", "parameters": {"total_cards": {"description": "Total number of cards in the deck.", "type": "int"}, "desired_cards": {"description": "Number of cards in the deck that satisfy the conditions.", "type": "int"}, "cards_drawn": {"description": "Number of cards drawn from the deck.", "type": "int"}}}}, {"type": "function", "function": {"name": "calculate_standard_deviation", "description": "Calculates the standard deviation of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[Union[int, float]]"}}}}, {"type": "function", "function": {"name": "is_valid_palindrome", "description": "Checks if a string is a valid palindrome, considering only alphanumeric characters and ignoring case.", "parameters": {"s": {"description": "The input string.", "type": "str"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "is_valid_palindrome", "arguments": "{\"s\": \"Able was I ere I saw Elba\"}"}}]}, "messages": [{"role": "user", "content": "Is 'Able was I ere I saw Elba' a valid palindrome?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "is_valid_palindrome", "arguments": "{\"s\": \"Able was I ere I saw Elba\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "staffs_list_by_club", "description": "Retrieves a list of staff members for a specific club from the Transfermarket API.", "parameters": {"is_id": {"description": "The ID of the club whose staff members are to be retrieved.", "type": "int", "default": "631"}, "domain": {"description": "The domain specification for the API request. One of the following: com, de, be, es, it, nl, pl, pt, com.tr, world. Defaults to 'de'.", "type": "str, optional", "default": "de"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "staffs_list_by_club", "arguments": "{\"is_id\": 8, \"domain\": \"it\"}"}}]}, "messages": [{"role": "user", "content": "Obtain the list of staff members for Juventus from the Transfermarket API with the Italian domain."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "staffs_list_by_club", "arguments": "{\"is_id\": 8, \"domain\": \"it\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "compound_interest", "description": "Calculates the compound interest of an investment.", "parameters": {"principal": {"description": "The initial investment amount.", "type": "float", "default": 1}, "rate": {"description": "The annual interest rate expressed as a decimal.", "type": "float", "default": 1}, "time": {"description": "The time in years for which the investment is held.", "type": "float"}, "n": {"description": "The number of times interest is compounded per year. Defaults to 1.", "type": "int, optional"}}}}, {"type": "function", "function": {"name": "california_alimony", "description": "Calculates the total alimony one spouse would have to pay to the other in California over a given duration.", "parameters": {"payor_monthly_income": {"description": "The monthly gross income of the payor spouse.", "type": "int"}, "recipient_monthly_income": {"description": "The monthly gross income of the recipient spouse.", "type": "int"}, "duration_years": {"description": "The duration of the alimony in years.", "type": "int"}}}}, {"type": "function", "function": {"name": "numerical_derivative", "description": "Estimates the derivative of a function at a given point using the central difference formula.", "parameters": {"function": {"description": "The function to calculate the derivative of.", "type": "Callable[[float], float]"}, "x": {"description": "The point at which to estimate the derivative.", "type": "float"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "compound_interest", "arguments": "{\"principal\": 10000, \"rate\": 0.05, \"time\": 5, \"n\": 12}"}}]}, "messages": [{"role": "user", "content": "What would be the final amount of a $10,000 investment with an annual interest rate of 5% compounded monthly over 5 years?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "compound_interest", "arguments": "{\"principal\": 10000, \"rate\": 0.05, \"time\": 5, \"n\": 12}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "top_players_by_matchmaking", "description": "Fetch the top players by their matchmaking rank from the TrackMania API.", "parameters": {"limit": {"description": "The number of results to be returned. Default is `50`.", "type": "int, optional", "default": "50"}, "page": {"description": "The page number for the results, each containing 50 results. Default is `0`.", "type": "int, optional", "default": "0"}}}}, {"type": "function", "function": {"name": "custom_die", "description": "Simulates rolling a custom die with a specified number of sides using the RapidAPI service.", "parameters": {"sides": {"description": "The number of sides on the custom die. Default is 8.", "type": "int, optional", "default": "8"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "top_players_by_matchmaking", "arguments": "{\"limit\": 15, \"page\": 3}"}}, {"type": "function", "function": {"name": "custom_die", "arguments": "{\"sides\": 4}"}}]}, "messages": [{"role": "user", "content": "Display the top 15 players from the third page of matchmaking. Also, perform a roll of a 4-sided die."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "top_players_by_matchmaking", "arguments": "{\"limit\": 15, \"page\": 3}"}}, {"type": "function", "function": {"name": "custom_die", "arguments": "{\"sides\": 4}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "compound_interest", "description": "Calculates the compound interest of an investment.", "parameters": {"principal": {"description": "The initial investment amount.", "type": "float", "default": 1}, "rate": {"description": "The annual interest rate expressed as a decimal.", "type": "float", "default": 1}, "time": {"description": "The time in years for which the investment is held.", "type": "float"}, "n": {"description": "The number of times interest is compounded per year. Defaults to 1.", "type": "int, optional"}}}}, {"type": "function", "function": {"name": "california_alimony", "description": "Calculates the total alimony one spouse would have to pay to the other in California over a given duration.", "parameters": {"payor_monthly_income": {"description": "The monthly gross income of the payor spouse.", "type": "int"}, "recipient_monthly_income": {"description": "The monthly gross income of the recipient spouse.", "type": "int"}, "duration_years": {"description": "The duration of the alimony in years.", "type": "int"}}}}, {"type": "function", "function": {"name": "numerical_derivative", "description": "Estimates the derivative of a function at a given point using the central difference formula.", "parameters": {"function": {"description": "The function to calculate the derivative of.", "type": "Callable[[float], float]"}, "x": {"description": "The point at which to estimate the derivative.", "type": "float"}}}}, {"type": "function", "function": {"name": "integrate", "description": "Calculate the area under a curve for a specified function between two x values.", "parameters": {"function": {"description": "The function to integrate, represented as a string. For example, 'x^3'", "type": "str", "default": "trapezoid"}, "start_x": {"description": "The starting x-value to integrate over.", "type": "int", "default": "trapezoid"}, "end_x": {"description": "The ending x-value to integrate over.", "type": "int"}, "method": {"description": "The method of numerical integration to use. Choices are 'trapezoid' or 'simpson'.", "type": "str"}}}}, {"type": "function", "function": {"name": "matrix_multiply", "description": "Multiplies two matrices.", "parameters": {"matrix_a": {"description": "The first matrix.", "type": "List[List[float]]"}, "matrix_b": {"description": "The second matrix.", "type": "List[List[float]]"}}}}, {"type": "function", "function": {"name": "bacterial_growth", "description": "Calculates the bacterial population after a given time based on the initial population and growth rate.", "parameters": {"initial_population": {"description": "The initial bacterial population.", "type": "int", "default": 20}, "growth_rate": {"description": "The growth rate per unit time.", "type": "float", "default": 20}, "time": {"description": "The time elapsed.", "type": "float"}, "doubling_time": {"description": "The doubling time of the bacteria in minutes. Defaults to 20.", "type": "float, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "compound_interest", "arguments": "{\"principal\": 5000, \"rate\": 0.03, \"time\": 10, \"n\": 12}"}}, {"type": "function", "function": {"name": "integrate", "arguments": "{\"function\": \"x^2\", \"start_x\": 0, \"end_x\": 3, \"method\": \"simpson\"}"}}]}, "messages": [{"role": "user", "content": "I'm planning to invest $5,000 at an annual interest rate of 3% compounded monthly for 10 years. How much will I have at the end of the period? Also, could you help me calculate the area under the curve for the function y = x^2 from x = 0 to x = 3 using the Simpson's rule?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "compound_interest", "arguments": "{\"principal\": 5000, \"rate\": 0.03, \"time\": 10, \"n\": 12}"}}, {"type": "function", "function": {"name": "integrate", "arguments": "{\"function\": \"x^2\", \"start_x\": 0, \"end_x\": 3, \"method\": \"simpson\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "google_videos", "description": "Fetches the JSON data of video results from the Google Search API based on the given search parameters.", "parameters": {"query": {"description": "The search query string.", "type": "str", "default": "football"}, "uule": {"description": "Encoded location parameter.", "type": "str, optional", "default": ""}, "duration": {"description": "Video duration filter.", "type": "str, optional", "default": ""}, "safe": {"description": "Safe search setting.", "type": "str, optional", "default": ""}, "hl": {"description": "Language of the search results (default is 'en_us').", "type": "str, optional", "default": "en_us"}, "num": {"description": "Number of results to return (default is '10').", "type": "str, optional", "default": "10"}, "lr": {"description": "Language restriction for the search.", "type": "str, optional", "default": ""}, "device": {"description": "Device type (default is 'desktop').", "type": "str, optional", "default": "desktop"}, "tbs": {"description": "Restrict results based on time.", "type": "str, optional", "default": ""}, "nfpr": {"description": "Enables or disables personal results (default is '0').", "type": "str, optional", "default": "0"}, "gl": {"description": "Country restrict for the search (default is 'us').", "type": "str, optional", "default": "us"}, "page": {"description": "Page number for the search results (default is '0').", "type": "str, optional", "default": "0"}}}}, {"type": "function", "function": {"name": "historical", "description": "Fetches the Fear and Greed Index for a given date from the RapidAPI service.", "parameters": {"date": {"description": "The date for which to retrieve the index, in the format 'YYYY-MM-DD'.", "type": "str", "default": "2022-06-01"}}}}, {"type": "function", "function": {"name": "rental_ratings", "description": "Fetches rental ratings for a specified location using the AirDNA API.", "parameters": {"location": {"description": "The location for which rental ratings are to be fetched.", "type": "str", "default": "santa monica"}, "currency": {"description": "The currency code for the rental ratings. Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "get_cities", "description": "Fetches a list of cities within a specified region of a country using the provided RapidAPI key.", "parameters": {"region_code": {"description": "The code of the region for which to retrieve cities.", "type": "str", "default": "abr"}, "country_code": {"description": "The code of the country which contains the region.", "type": "str", "default": "ph"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "historical", "arguments": "{\"date\": \"2023-03-15\"}"}}]}, "messages": [{"role": "user", "content": "Retrieve the Fear and Greed Index for the date of March 15, 2023."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "historical", "arguments": "{\"date\": \"2023-03-15\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "label_template_brands", "description": "Returns the list of blank label sheet brands supported by Ecardify on the given date.", "parameters": {"format": {"description": "The paper size format, which can be either \"Letter\" (8.5 inch by 11 inch) or \"A4\" (210 mm by 297 mm).", "type": "str", "default": "a4"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "label_template_brands", "arguments": "{\"format\": \"Letter\"}"}}, {"type": "function", "function": {"name": "label_template_brands", "arguments": "{\"format\": \"A4\"}"}}]}, "messages": [{"role": "user", "content": "Can you provide me with a list of blank label sheet brands that support both Letter and A4 formats on Ecardify?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "label_template_brands", "arguments": "{\"format\": \"Letter\"}"}}, {"type": "function", "function": {"name": "label_template_brands", "arguments": "{\"format\": \"A4\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "cell_density", "description": "Calculates the cell density based on the optical density (OD) and dilution factor.", "parameters": {"od": {"description": "The optical density of the sample.", "type": "float", "default": 1000000000.0}, "dilution": {"description": "The dilution factor applied to the sample.", "type": "int", "default": 1000000000.0}, "factor": {"description": "The calibration factor for converting OD to cell density. Defaults to 1e9.", "type": "float, optional"}}}}, {"type": "function", "function": {"name": "expand_around_center", "description": "Helper function to expand around a center for finding palindromic substrings.", "parameters": {"s": {"description": "The input string.", "type": "str"}, "left": {"description": "The left index of the center.", "type": "int"}, "right": {"description": "The right index of the center.", "type": "int"}}}}, {"type": "function", "function": {"name": "convert_cooking_measurements", "description": "Converts a quantity of a cooking ingredient from one measurement unit to another.", "parameters": {"quantity": {"description": "The quantity of the item to convert.", "type": "float"}, "from_unit": {"description": "The unit of the input quantity (e.g., 'cup', 'gram').", "type": "str"}, "to_unit": {"description": "The unit to which the quantity should be converted (e.g., 'ounce', 'kilogram').", "type": "str"}, "item": {"description": "The cooking ingredient being converted (e.g., 'flour', 'sugar').", "type": "str"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "convert_cooking_measurements", "arguments": "{\"quantity\": 2, \"from_unit\": \"cup\", \"to_unit\": \"gram\", \"item\": \"flour\"}"}}]}, "messages": [{"role": "user", "content": "Convert 2 cups of flour to grams."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "convert_cooking_measurements", "arguments": "{\"quantity\": 2, \"from_unit\": \"cup\", \"to_unit\": \"gram\", \"item\": \"flour\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "matchschedules", "description": "Fetches the cricket match schedules for a given date, including match timings, teams, and other relevant information.", "parameters": {"year": {"description": "The year for which to retrieve the cricket match schedules (e.g., 2022).", "type": "int", "default": 2022}, "day": {"description": "The day of the month for which to retrieve the cricket match schedules (1-31).", "type": "int", "default": 14}, "month": {"description": "The month for which to retrieve the cricket match schedules (1-12).", "type": "int", "default": 8}}}}, {"type": "function", "function": {"name": "categorytournaments", "description": "Retrieves all handball tournaments by category using the given category ID.", "parameters": {"is_id": {"description": "The category ID for which you want to retrieve all tournaments.", "type": "int", "default": 71}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "matchschedules", "arguments": "{\"year\": 2020, \"day\": 15, \"month\": 8}"}}, {"type": "function", "function": {"name": "categorytournaments", "arguments": "{\"is_id\": 321}"}}]}, "messages": [{"role": "user", "content": "Fetch the cricket match schedules for August 15, 2020 and the handball tournaments for category ID 321."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "matchschedules", "arguments": "{\"year\": 2020, \"day\": 15, \"month\": 8}"}}, {"type": "function", "function": {"name": "categorytournaments", "arguments": "{\"is_id\": 321}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_weekly_popular_books_by_genre", "description": "Retrieve the most popular books from the past week based on a specified genre.", "parameters": {"genre": {"description": "The genre of books to retrieve.", "type": "str", "default": "horror"}, "number_results": {"description": "The number of results to return. Defaults to 10.", "type": "int, optional", "default": "10"}}}}, {"type": "function", "function": {"name": "get_anime_by_id", "description": "Retrieves detailed information about an anime given its unique identifier using the Toolbench RapidAPI service.", "parameters": {"is_id": {"description": "The unique identifier of the anime.", "type": "int", "default": "19"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_weekly_popular_books_by_genre", "arguments": "{\"genre\": \"fantasy\", \"number_results\": 10}"}}, {"type": "function", "function": {"name": "get_anime_by_id", "arguments": "{\"is_id\": 22222}"}}, {"type": "function", "function": {"name": "get_anime_by_id", "arguments": "{\"is_id\": 33333}"}}]}, "messages": [{"role": "user", "content": "Can you provide me with information about the top 10 popular books from the past week in the fantasy genre and the details of anime with ID 22222 and 33333?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_weekly_popular_books_by_genre", "arguments": "{\"genre\": \"fantasy\", \"number_results\": 10}"}}, {"type": "function", "function": {"name": "get_anime_by_id", "arguments": "{\"is_id\": 22222}"}}, {"type": "function", "function": {"name": "get_anime_by_id", "arguments": "{\"is_id\": 33333}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "rates", "description": "Fetches live currency conversion rates based on the specified parameters.", "parameters": {"output": {"description": "The output format of the response. Can be either 'JSON' or 'XML'. Default is 'JSON'.", "type": "str", "default": "JSON"}, "base": {"description": "The base currency for conversion rates. Examples include 'USD', 'GBP', or 'BTC'. Default is 'USD'.", "type": "str", "default": "USD"}}}}, {"type": "function", "function": {"name": "exchange", "description": "Converts an amount of money from one currency to another using a currency conversion API.", "parameters": {"base": {"description": "The currency code to convert from (e.g., 'USD', 'EUR').", "type": "str", "default": "USD"}, "to": {"description": "The target currency code to convert to.", "type": "str", "default": "EUR"}, "int": {"description": "The amount of money to convert, default is '1'.", "type": "str, optional", "default": "1"}}}}, {"type": "function", "function": {"name": "time_series", "description": "Fetches futures contracts over a specified date range for a given symbol using the provided API.", "parameters": {"is_from": {"description": "The start date of the range in 'YYYY-MM-DD' format.", "type": "str", "default": "2022-01-28"}, "symbol": {"description": "The symbol for which futures contracts are to be fetched.", "type": "str", "default": "CL"}, "offset": {"description": "Offset for pagination to fetch results beyond the first 100 objects. Defaults to None.", "type": "int, optional", "default": ""}, "to": {"description": "The end date of the range in 'YYYY-MM-DD' format. Defaults to '2022-01-30'.", "type": "str, optional", "default": "2022-01-30"}, "format": {"description": "The format of the response, such as 'json' or 'xml'. Defaults to 'json'.", "type": "str, optional", "default": "json"}, "month": {"description": "The specific month for which to retrieve contract data. Defaults to '8'.", "type": "str, optional", "default": "8"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "exchange", "arguments": "{\"base\": \"USD\", \"to\": \"EUR\", \"int\": \"100\"}"}}, {"type": "function", "function": {"name": "exchange", "arguments": "{\"base\": \"GBP\", \"to\": \"USD\", \"int\": \"50\"}"}}]}, "messages": [{"role": "user", "content": "What is the exchange rate of 100 USD to EUR and 50 GBP to USD as of today?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "exchange", "arguments": "{\"base\": \"USD\", \"to\": \"EUR\", \"int\": \"100\"}"}}, {"type": "function", "function": {"name": "exchange", "arguments": "{\"base\": \"GBP\", \"to\": \"USD\", \"int\": \"50\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_one_anime_by_ranking", "description": "Fetches the details of an anime based on its ranking from the Anime DB API.", "parameters": {"rank": {"description": "The ranking position of the desired anime.", "type": "int", "default": "1"}}}}, {"type": "function", "function": {"name": "get_quote_by_year", "description": "Fetches quotes from movies or TV shows for a given year.", "parameters": {"year": {"description": "The year for which to retrieve quotes.", "type": "int", "default": "1939"}}}}, {"type": "function", "function": {"name": "search_by_genre", "description": "Discover movies by genre using the RapidAPI.", "parameters": {"with_genres": {"description": "The genre code to filter movies by. Defaults to '80'.", "type": "str", "default": "80"}, "page": {"description": "The page number of results to retrieve. Defaults to 1.", "type": "int", "default": "1"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "search_by_genre", "arguments": "{\"with_genres\": \"10749\", \"page\": 1}"}}, {"type": "function", "function": {"name": "get_one_anime_by_ranking", "arguments": "{\"rank\": 100}"}}]}, "messages": [{"role": "user", "content": "Discover 6 movies in the genre of romance and also get the details of the anime ranked 100."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "search_by_genre", "arguments": "{\"with_genres\": \"10749\", \"page\": 1}"}}, {"type": "function", "function": {"name": "get_one_anime_by_ranking", "arguments": "{\"rank\": 100}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "product_groups_list", "description": "Fetches a list of product groups based on specified categories and types with optional pagination.", "parameters": {"size": {"description": "The number of items per response. Maximum is 500. Defaults to 100.", "type": "int, optional", "default": "100"}, "productgrouptypeid": {"description": "The ID representing the type of product group.", "type": "int, optional", "default": ""}, "page": {"description": "The page index starting from 0 for pagination purposes.", "type": "int, optional", "default": ""}, "parentproductgroupid": {"description": "The ID of the parent product group to filter the results.", "type": "int, optional", "default": ""}}}}, {"type": "function", "function": {"name": "get_random_user", "description": "Fetch a random user profile based on specified criteria using the ai-random-user-generator API.", "parameters": {"results": {"description": "Number of user profiles to fetch. Default is '7'.", "type": "str", "default": "7"}, "nation": {"description": "Nationality of the users. Default is 'en_US'.", "type": "str", "default": "en_US"}, "gender": {"description": "Gender of the users. Default is 'female'.", "type": "str", "default": "female"}}}}, {"type": "function", "function": {"name": "retrieve_aggregated_loan_offers", "description": "Retrieves the aggregated loan offers for a specified collection using the Blur API.", "parameters": {"collection": {"description": "The name or identifier of the collection for which to retrieve aggregated loan offers.", "type": "str", "default": "0x5af0d9827e0c53e4799bb226655a1de152a425a"}}}}, {"type": "function", "function": {"name": "getnews", "description": "Fetches Power BI news from the specified page using the given RapidAPI key.", "parameters": {"page": {"description": "The page number of the news to retrieve.", "type": "int", "default": "1"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_random_user", "arguments": "{\"results\": \"10\", \"nation\": \"en_GB\", \"gender\": \"male\"}"}}]}, "messages": [{"role": "user", "content": "Generate 10 random user profiles with nationality set to 'en_GB' and gender as 'male'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_random_user", "arguments": "{\"results\": \"10\", \"nation\": \"en_GB\", \"gender\": \"male\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "structural_analysis", "description": "Performs structural analysis on a building based on its ID, floor numbers, and analysis mode.", "parameters": {"building_id": {"description": "The unique identifier of the building.", "type": "str", "default": "static"}, "floor_numbers": {"description": "The list of floor numbers to be analyzed.", "type": "List[int]", "default": "static"}, "analysis_mode": {"description": "The mode of analysis, either \"static\" or \"dynamic\". Defaults to \"static\".", "type": "str, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "structural_analysis", "arguments": "{\"building_id\": \"Z789\", \"floor_numbers\": [7, 9, 11, 13]}"}}]}, "messages": [{"role": "user", "content": "I am looking to analyse floors 7, 9, 11, and 13 of building Z789. What would be the outcome if I choose static analysis?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "structural_analysis", "arguments": "{\"building_id\": \"Z789\", \"floor_numbers\": [7, 9, 11, 13]}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "shows_id", "description": "Fetches show information from the TVMaze API using a given show ID.", "parameters": {"is_id": {"description": "The ID of the show to retrieve information for.", "type": "int", "default": ""}}}}, {"type": "function", "function": {"name": "search", "description": "Searches the Steam shop for a given term and returns the results.", "parameters": {"term": {"description": "The search term to query in the Steam shop.", "type": "str", "default": "Counter"}, "page": {"description": "The page number of search results to retrieve. Default is 1.", "type": "int, optional", "default": "1"}}}}, {"type": "function", "function": {"name": "defaultroot", "description": "Fetches cat facts from the MeowFacts API based on the provided parameters.", "parameters": {"count": {"description": "The number of cat facts to return. If not specified, a default number of facts will be returned.", "type": "int, optional", "default": ""}, "factid": {"description": "An optional ID to retrieve a specific cat fact. If not specified, random facts will be returned.", "type": "str, optional", "default": ""}, "lang": {"description": "The locale in which to retrieve the cat facts. Defaults to 'eng' (English).", "type": "str, optional", "default": "eng"}}}}, {"type": "function", "function": {"name": "get_wisdom_quotes_by_page", "description": "Retrieves wisdom quotes from a specified page using the Toolbench RapidAPI.", "parameters": {"page": {"description": "The page number to retrieve quotes from.", "type": "str", "default": "12"}}}}, {"type": "function", "function": {"name": "community_post_details", "description": "Fetches details of a community post from YouTube using RapidAPI.", "parameters": {"is_id": {"description": "Community post ID. Default is 'UgkxCWeKPiIOLsnh_5a0MPHWCmYgbhifgwIZ'.", "type": "str", "default": "UgkxCWeKPiIOLsnh_5a0MPHWCmYgbhifgwIZ"}}}}, {"type": "function", "function": {"name": "new_titles", "description": "Fetches a listing of new title IDs added to Watchmode within a specific date range.", "parameters": {"page": {"description": "Specifies the page of results to return. Defaults to 1.", "type": "int, optional", "default": "1"}, "types": {"description": "Filters results to include specific types of titles. Acceptable values are: 'movie', 'tv_series', 'tv_special', 'tv_miniseries', 'short_film'. Multiple types can be passed as a comma-delimited string. Defaults to 'movie,tv_series'.", "type": "str, optional", "default": "movie,tv_series"}, "limit": {"description": "Specifies the number of titles to return per page. The default and maximum is 250. Defaults to 50.", "type": "int, optional", "default": "50"}, "end_date": {"description": "Sets the end date to include changes from a specific date range. The format is YYYYMMDD (e.g., 20210101 for January 1st, 2021). If not specified, the API returns changes since the beginning of yesterday.", "type": "int, optional", "default": ""}, "start_date": {"description": "Sets the start date to include changes from a specific date range. The format is YYYYMMDD (e.g., 20210101 for January 1st, 2021). If not specified, the API returns changes since the beginning of yesterday.", "type": "int, optional", "default": ""}}}}, {"type": "function", "function": {"name": "drawings_between_dates", "description": "Fetches all Cash4Life winning number sets between two specified dates.", "parameters": {"date1": {"description": "The beginning date in the format 'YYYY-MM-DD'.", "type": "str", "default": "2023-01-01"}, "date2": {"description": "The end date in the format 'YYYY-MM-DD'.", "type": "str", "default": "2023-01-05"}}}}, {"type": "function", "function": {"name": "downloadminecraftjar", "description": "Downloads the Minecraft .jar file for a specified version.", "parameters": {"minecraftversion": {"description": "The version of Minecraft for which to download the .jar file.", "type": "str", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "community_post_details", "arguments": "{\"is_id\": \"UgkxCWeKPiIOLsnh_5a0MPHWCmYgbhifgwIZ\"}"}}]}, "messages": [{"role": "user", "content": "Details of the YouTube community post with ID 'UgkxCWeKPiIOLsnh_5a0MPHWCmYgbhifgwIZ'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "community_post_details", "arguments": "{\"is_id\": \"UgkxCWeKPiIOLsnh_5a0MPHWCmYgbhifgwIZ\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_horoscope_multilingual", "description": "Fetches horoscope information in the specified language for a given sign, period, and type.", "parameters": {"language": {"description": "The language for the horoscope. Supported languages are:", "type": "str", "default": ""}, "period": {"description": "The period for which the horoscope is requested (e.g., 'daily', 'weekly').", "type": "str", "default": ""}, "sign": {"description": "The astrological sign for which the horoscope is requested (e.g., 'aries', 'taurus').", "type": "str", "default": ""}, "type": {"description": "The type of horoscope information to be fetched, depending on the period. Use the **Get Types** method to get available types for the selected period.", "type": "str", "default": "general"}}}}, {"type": "function", "function": {"name": "lines_line_abs", "description": "Fetches poems that contain a specific line using the Thundercomb Poetry DB API.", "parameters": {"line": {"description": "The exact line to search for in poems.", "type": "str", "default": ""}}}}, {"type": "function", "function": {"name": "search", "description": "Searches the Steam shop for a given term and returns the results.", "parameters": {"term": {"description": "The search term to query in the Steam shop.", "type": "str", "default": "Counter"}, "page": {"description": "The page number of search results to retrieve. Default is 1.", "type": "int, optional", "default": "1"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_horoscope_multilingual", "arguments": "{\"language\": \"fr\", \"period\": \"weekly\", \"sign\": \"libra\", \"type\": \"general\"}"}}]}, "messages": [{"role": "user", "content": "What's the weekly horoscope for a Libra in French?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_horoscope_multilingual", "arguments": "{\"language\": \"fr\", \"period\": \"weekly\", \"sign\": \"libra\", \"type\": \"general\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "minutely", "description": "Fetches minute-by-minute precipitation forecast for the next 60 minutes, updated in real-time using AI nowcasting models.", "parameters": {"place_id": {"description": "Identifier of a place. Used to specify the location. If not provided, use `lat` and `lon`. Defaults to None.", "type": "str, optional", "default": ""}, "timezone": {"description": "Timezone for the date fields. If not specified, local timezone of the forecast location will be used. Formats like 'Europe/Prague' or 'UTC' can be used, or 'auto' to use local timezone. Defaults to 'auto'.", "type": "str, optional", "default": "auto"}, "lat": {"description": "Latitude of the location. Specify in formats like '12N', '12.3N', '12.3', or '-13.4'. Defaults to '37.81021'.", "type": "str, optional", "default": "37.81021"}, "language": {"description": "Language for text summaries. Available languages are 'en' (default), 'es', 'fr', 'de', 'pl', 'cs'. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "units": {"description": "Unit system to be used. Values can be 'auto' (default), 'metric', 'us', 'uk', 'ca'. Defaults to 'auto'.", "type": "str, optional", "default": "auto"}, "lon": {"description": "Longitude of the location. Specify in formats like '12E', '12.3E', '12.3', or '-13.4'. Defaults to '-122.42282'.", "type": "str, optional", "default": "-122.42282"}}}}, {"type": "function", "function": {"name": "time_zone_api", "description": "Retrieves the current local time and UTC offset hour and minute for a specified location.", "parameters": {"q": {"description": "Location query such as city name, coordinates, or IP address.", "type": "str", "default": "53,-0.13"}, "format": {"description": "Desired response format, default is None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "get_weather", "description": "Fetch weather information including current, hourly, and daily data for a specific location.", "parameters": {"version": {"description": "The version of the API to be used.", "type": "str", "default": "v1"}, "lng": {"description": "Geographical coordinate of the location (longitude).", "type": "int", "default": "-73.999257"}, "lat": {"description": "Geographical coordinate of the location (latitude).", "type": "int", "default": "40.723558"}, "unit": {"description": "Unit of temperature ('F' for Fahrenheit, 'C' for Celsius, or default 'K' for Kelvin). Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "points_point_forecast_hourly", "description": "Fetches hourly weather forecast data for a given geographical point using the RapidAPI service.", "parameters": {"point": {"description": "A string specifying the geographical point in the format \"latitude,longitude\".", "type": "str", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_weather", "arguments": "{\"version\": \"1.0\", \"lng\": -74.0059, \"lat\": 40.7127, \"unit\": \"C\"}"}}, {"type": "function", "function": {"name": "time_zone_api", "arguments": "{\"q\": \"New York City\"}"}}]}, "messages": [{"role": "user", "content": "A meteorologist is studying the weather patterns in New York City and needs to fetch weather information including current, hourly, and daily data for the specific location. They also want to know the current local time and UTC offset hour and minute for the city. Provide the required information."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_weather", "arguments": "{\"version\": \"1.0\", \"lng\": -74.0059, \"lat\": 40.7127, \"unit\": \"C\"}"}}, {"type": "function", "function": {"name": "time_zone_api", "arguments": "{\"q\": \"New York City\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "displacement", "description": "Calculates the displacement of an object given its initial velocity, acceleration, and time.", "parameters": {"initial_velocity": {"description": "The initial velocity of the object.", "type": "float"}, "acceleration": {"description": "The acceleration of the object.", "type": "float"}, "time": {"description": "The time elapsed.", "type": "float"}}}}, {"type": "function", "function": {"name": "matrix_multiply", "description": "Multiplies two matrices.", "parameters": {"matrix_a": {"description": "The first matrix.", "type": "List[List[float]]"}, "matrix_b": {"description": "The second matrix.", "type": "List[List[float]]"}}}}, {"type": "function", "function": {"name": "min_meeting_rooms", "description": "Finds the minimum number of meeting rooms required to accommodate all meetings.", "parameters": {"intervals": {"description": "A list of meeting time intervals, where each interval is represented as [start_time, end_time].", "type": "List[List[int]]"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "displacement", "arguments": "{\"initial_velocity\": 0, \"acceleration\": 3, \"time\": 15}"}}]}, "messages": [{"role": "user", "content": "You are a student learning physics and you want to calculate the displacement of an object that starts from rest and accelerates at a rate of 3 m/s^2 for 15 seconds."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "displacement", "arguments": "{\"initial_velocity\": 0, \"acceleration\": 3, \"time\": 15}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_free_games", "description": "Fetches the current list of free games from the Epic Games Store based on the specified locale and country.", "parameters": {"locale": {"description": "The locale code for the desired language (e.g., 'en-US').", "type": "str", "default": "en"}, "country": {"description": "The country code to filter the games (e.g., 'US').", "type": "str", "default": "US"}}}}, {"type": "function", "function": {"name": "pet_pet", "description": "Generates a 'Pet Pet' meme GIF from a given image URL using the Memeados API.", "parameters": {"image": {"description": "The URL of the image to be used for generating the meme.", "type": "str", "default": "https://i.pravatar.cc/300"}}}}, {"type": "function", "function": {"name": "riddle_by_keyword", "description": "Fetches one random riddle based on a given keyword using the Toolbench RapidAPI service.", "parameters": {"keyword": {"description": "The subject or keyword to get a riddle for.", "type": "str", "default": "cat"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "riddle_by_keyword", "arguments": "{\"keyword\": \"space\"}"}}, {"type": "function", "function": {"name": "get_free_games", "arguments": "{\"locale\": \"fr-CA\", \"country\": \"CA\"}"}}]}, "messages": [{"role": "user", "content": "I'm looking for a riddle related to 'space'. Can you find one? Also, what are the free games in the Epic Games Store for Canada in French?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "riddle_by_keyword", "arguments": "{\"keyword\": \"space\"}"}}, {"type": "function", "function": {"name": "get_free_games", "arguments": "{\"locale\": \"fr-CA\", \"country\": \"CA\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_phone_image_ids_by_custom_id", "description": "Fetches up to 10 image IDs for a given phone using its custom ID.", "parameters": {"phonecustomid": {"description": "The custom ID of the phone for which image IDs are to be fetched.", "type": "int", "default": "103693"}}}}, {"type": "function", "function": {"name": "getphonedetails", "description": "Fetches all specifications and photos for a given phone based on its ID.", "parameters": {"phoneid": {"description": "The unique identifier of the phone.", "type": "int", "default": "1859"}}}}, {"type": "function", "function": {"name": "get_expired_certs", "description": "Fetches expired SSL/TLS certificates for a given firmware.", "parameters": {"firmware_hash": {"description": "SHA2 hash of the device firmware.", "type": "str", "default": "ac7c090c34338ea6a3b335004755e24578e7e4eee739c5c33736f0822b64907e"}}}}, {"type": "function", "function": {"name": "getphonesbybrandid", "description": "Fetches all phone IDs for a specific brand using the given brand ID.", "parameters": {"brandid": {"description": "The unique identifier for the brand whose phone IDs are to be retrieved.", "type": "int", "default": "237"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_expired_certs", "arguments": "{\"firmware_hash\": \"abcdefghijklmnopqrstuvwxyz123456\"}"}}, {"type": "function", "function": {"name": "getphonesbybrandid", "arguments": "{\"brandid\": 789}"}}]}, "messages": [{"role": "user", "content": "What are the expired SSL/TLS certificates for the firmware with SHA2 hash 'abcdefghijklmnopqrstuvwxyz123456', and what are the phone IDs for the brand with ID 789?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_expired_certs", "arguments": "{\"firmware_hash\": \"abcdefghijklmnopqrstuvwxyz123456\"}"}}, {"type": "function", "function": {"name": "getphonesbybrandid", "arguments": "{\"brandid\": 789}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "item_by_id", "description": "Fetch an item from the Hacker News API by its unique ID.", "parameters": {"is_id": {"description": "The unique identifier of the item to retrieve.", "type": "str", "default": "10000"}}}}, {"type": "function", "function": {"name": "companies_id_financials_exists", "description": "Checks if financial key figures for a company with the given identifier are available and returns the list of years for which these figures are available.", "parameters": {"is_id": {"description": "The identifier of the company to check for financial data.", "type": "str", "default": "DEVFCLQFW054"}}}}, {"type": "function", "function": {"name": "house_prices_get_sales_history", "description": "Retrieve the sales history for a given property using the Zoopla API.", "parameters": {"property_id": {"description": "The identifier for the property for which to retrieve the sales history.", "type": "int", "default": "27175510"}}}}, {"type": "function", "function": {"name": "list_target_languages", "description": "Retrieves a paginated list of target languages from the API.", "parameters": {"page": {"description": "Return search results starting at a given page. Defaults to 1.", "type": "int, optional", "default": "1"}, "per_page": {"description": "Number of entries to be returned per page. Only values between 1 and 100 (inclusive) are allowed. Defaults to 100.", "type": "int, optional", "default": "100"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "companies_id_financials_exists", "arguments": "{\"is_id\": \"JKL987\"}"}}, {"type": "function", "function": {"name": "companies_id_financials_exists", "arguments": "{\"is_id\": \"MNO012\"}"}}, {"type": "function", "function": {"name": "list_target_languages", "arguments": "{\"page\": 4, \"per_page\": 75}"}}]}, "messages": [{"role": "user", "content": "Check if financial data is available for companies with identifiers JKL987 and MNO012 and list the target languages from an API with pagination of page 4 and 75 entries per page."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "companies_id_financials_exists", "arguments": "{\"is_id\": \"JKL987\"}"}}, {"type": "function", "function": {"name": "companies_id_financials_exists", "arguments": "{\"is_id\": \"MNO012\"}"}}, {"type": "function", "function": {"name": "list_target_languages", "arguments": "{\"page\": 4, \"per_page\": 75}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "fixtures", "description": "Retrieves upcoming soccer fixtures for the next 7 days from the sports API.", "parameters": {"page": {"description": "The page of results to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}, "day": {"description": "The specific day of fixtures to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}}}}, {"type": "function", "function": {"name": "game", "description": "Fetch details of a specific baseball game using its game ID.", "parameters": {"gamepk": {"description": "The unique identifier for the baseball game.", "type": "str", "default": "633282"}}}}, {"type": "function", "function": {"name": "games_esports", "description": "Fetches information about esports games for a given event ID using the SofaSport API.", "parameters": {"event_id": {"description": "The ID of the event to retrieve esports games for.", "type": "int", "default": "10289011"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "fixtures", "arguments": "{\"day\": 3, \"page\": 1}"}}]}, "messages": [{"role": "user", "content": "Provide the soccer fixtures for the day after tomorrow on page 1."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "fixtures", "arguments": "{\"day\": 3, \"page\": 1}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "category_tags", "description": "Fetch a list of tags for a given category ID using the toolbench_rapidapi key.", "parameters": {"is_id": {"description": "The category ID to fetch tags for.", "type": "str", "default": "1"}}}}, {"type": "function", "function": {"name": "get_user_favorite_list", "description": "Retrieve the favorite video list for a TikTok user using their unique identifier.", "parameters": {"sec_uid": {"description": "The unique identifier of the TikTok user whose favorite list is to be retrieved.", "type": "str", "default": "MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM"}}}}, {"type": "function", "function": {"name": "get_sign_prediction_for_today_by_name", "description": "Fetches the zodiac sign prediction for today based on the provided sign name using the RapidAPI service.", "parameters": {"name": {"description": "The name of the zodiac sign for which the prediction is requested.", "type": "str", "default": "Aries"}}}}, {"type": "function", "function": {"name": "profile_stories", "description": "Fetch the Instagram stories for a specific profile using the provided RapidAPI key.", "parameters": {"username": {"description": "The Instagram username for which to fetch stories. Defaults to 'kimkardashian'.", "type": "str", "default": "kimkardashian"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "category_tags", "arguments": "{\"is_id\": \"33333\"}"}}, {"type": "function", "function": {"name": "get_user_favorite_list", "arguments": "{\"sec_uid\": \"qqqqqqq\"}"}}, {"type": "function", "function": {"name": "get_sign_prediction_for_today_by_name", "arguments": "{\"name\": \"Gemini\"}"}}, {"type": "function", "function": {"name": "profile_stories", "arguments": "{\"username\": \"jeffbezos\"}"}}]}, "messages": [{"role": "user", "content": "I want the tags for category '33333', favorite videos for user 'qqqqqqq', zodiac prediction for 'Gemini', and stories for 'jeffbezos'"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "category_tags", "arguments": "{\"is_id\": \"33333\"}"}}, {"type": "function", "function": {"name": "get_user_favorite_list", "arguments": "{\"sec_uid\": \"qqqqqqq\"}"}}, {"type": "function", "function": {"name": "get_sign_prediction_for_today_by_name", "arguments": "{\"name\": \"Gemini\"}"}}, {"type": "function", "function": {"name": "profile_stories", "arguments": "{\"username\": \"jeffbezos\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "find_n_largest_numbers", "description": "Finds the n largest numbers in a list.", "parameters": {"nums": {"description": "The list of numbers.", "type": "List[int]"}, "n": {"description": "The number of largest numbers to find.", "type": "int"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_n_largest_numbers", "arguments": "{\"nums\": [99, 88, 77, 66, 55, 44, 33, 22, 11], \"n\": 3}"}}]}, "messages": [{"role": "user", "content": "What are the 3 largest numbers in the list [99, 88, 77, 66, 55, 44, 33, 22, 11]?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "find_n_largest_numbers", "arguments": "{\"nums\": [99, 88, 77, 66, 55, 44, 33, 22, 11], \"n\": 3}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_place_by_ip", "description": "Retrieve the place information for a given IP address.", "parameters": {"is_id": {"description": "The IP address (IPv4 and IPv6 are supported) to look up.", "type": "str", "default": "200.194.51.97"}, "language": {"description": "Specifies the language (ISO 639-1) to get the", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "partenaire_par_id", "description": "Fetches a partner's details by their ID from the designated API.", "parameters": {"is_id": {"description": "The ID of the partner to be fetched, as provided by the API.", "type": "str", "default": "14"}}}}, {"type": "function", "function": {"name": "directions_between_2_locations", "description": "Fetches route information between two geographical locations, including distance, duration, and steps.", "parameters": {"end_lat": {"description": "Latitude of the ending location.", "type": "int", "default": "3.87598"}, "end_lon": {"description": "Longitude of the ending location.", "type": "int", "default": "11.51148"}, "start_lat": {"description": "Latitude of the starting location.", "type": "int", "default": "4.03966"}, "start_lon": {"description": "Longitude of the starting location.", "type": "int", "default": "9.69295"}, "distance_unit": {"description": "Unit of distance measurement. Valid options are 'km' (default) and 'mi'.", "type": "str, optional", "default": "km"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_place_by_ip", "arguments": "{\"is_id\": \"127.0.0.1\", \"language\": \"en\"}"}}, {"type": "function", "function": {"name": "get_place_by_ip", "arguments": "{\"is_id\": \"24.48.0.1\", \"language\": \"en\"}"}}, {"type": "function", "function": {"name": "partenaire_par_id", "arguments": "{\"is_id\": \"12345\"}"}}]}, "messages": [{"role": "user", "content": "Find the place information for IP addresses '127.0.0.1' and '24.48.0.1' in English and also fetch the partner details for ID '12345'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_place_by_ip", "arguments": "{\"is_id\": \"127.0.0.1\", \"language\": \"en\"}"}}, {"type": "function", "function": {"name": "get_place_by_ip", "arguments": "{\"is_id\": \"24.48.0.1\", \"language\": \"en\"}"}}, {"type": "function", "function": {"name": "partenaire_par_id", "arguments": "{\"is_id\": \"12345\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "getrandomuser", "description": "Fetches random user data such as name, e-mail, etc., from the specified API.", "parameters": {"count": {"description": "The number of user records to retrieve. Defaults to -2 if not specified.", "type": "int", "default": "-2"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getrandomuser", "arguments": "{\"count\": 5}"}}]}, "messages": [{"role": "user", "content": "Fetch information of 5 random users and display their usernames and email addresses."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getrandomuser", "arguments": "{\"count\": 5}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "fetch_details_of_multiple_records", "description": "Fetches details of multiple records given their IDs using the Magical Taske API.", "parameters": {"is_id": {"description": "A comma-separated string of record IDs for which to fetch details. Maximum 10 IDs allowed, no spaces between commas.", "type": "str", "default": "b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c"}}}}, {"type": "function", "function": {"name": "places_list_by_radius_nearby_search", "description": "Fetches objects closest to a selected point filtered by optional parameters.", "parameters": {"lang": {"description": "Language code (2 characters, ISO639-1). Available values include 'en' (English) and 'ru' (Russian).", "type": "str", "default": ""}, "radius": {"description": "Maximum distance from the selected point in meters.", "type": "int", "default": "500"}, "lon": {"description": "Longitude of the selected point.", "type": "int", "default": "38.364285"}, "lat": {"description": "Latitude of the selected point.", "type": "int", "default": "59.855685"}, "src_attr": {"description": "Source of the object attributes, multiple sources can be separated by commas. Defaults to None. Available values include 'osm', 'wikidata', 'snow', 'cultura.ru', 'rosnedra', 'user'.", "type": "str, optional", "default": ""}, "format": {"description": "The output format. Defaults to GeoJSON. Values can be 'json', 'geojson', or 'count'.", "type": "str, optional", "default": ""}, "kinds": {"description": "Object category, multiple categories can be separated by commas. Defaults to None. See object category hierarchy at 'https://dev.opentripmap.com/doc/en/'.", "type": "str, optional", "default": ""}, "src_geom": {"description": "Source of the object geometry. Defaults to None. Available values include 'osm', 'wikidata', 'snow', 'cultura.ru', 'rosnedra'.", "type": "str, optional", "default": ""}, "rate": {"description": "Minimum rating of the object popularity. Defaults to None. Available values are '1', '2', '3', '1h', '2h', '3h'.", "type": "str, optional", "default": ""}, "limit": {"description": "Maximum number of returned objects. Defaults to None, with a maximum limit of 500.", "type": "int, optional", "default": ""}, "name": {"description": "Text string to search at the beginning of the object name (minimum 3 characters). Defaults to None.", "type": "str, optional", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "places_list_by_radius_nearby_search", "arguments": "{\"lang\": \"en\", \"radius\": 2000, \"lon\": -74.0445, \"lat\": 40.6892, \"rate\": \"3h\"}"}}]}, "messages": [{"role": "user", "content": "What are the top-rated attractions within 2000 meters of the Statue of Liberty?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "places_list_by_radius_nearby_search", "arguments": "{\"lang\": \"en\", \"radius\": 2000, \"lon\": -74.0445, \"lat\": 40.6892, \"rate\": \"3h\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "have_a_chat_with_our_bot", "description": "Initiates a conversation with the Islam&AI Bot, utilizing chat history and an API key for authentication.", "parameters": {"question": {"description": "The question to pose to the Islam&AI Bot.", "type": "str", "default": "What is Islam?"}, "chathistory": {"description": "The chat history to be included in the conversation. Defaults to a predefined string about a dua.", "type": "str, optional", "default": "What is Dua to recite when you see a miraculous thing like Islam & AI? | There is no specific dua (supplication) mentioned in the Quran or Hadith that is to be recited when witnessing a miracle. However, Muslims are encouraged to constantly remember Allah and express their gratitude to Him for the blessings and miracles they witness in their lives. In general, it is recommended to say 'Subhan Allah' (Glory be to Allah) when witnessing something amazing or miraculous"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "have_a_chat_with_our_bot", "arguments": "{\"question\": \"What are the main teachings of Islam?\"}"}}, {"type": "function", "function": {"name": "have_a_chat_with_our_bot", "arguments": "{\"question\": \"What role did Prophet Muhammad play in spreading these teachings?\"}"}}]}, "messages": [{"role": "user", "content": "Ask the bot about the main teachings of Islam and then inquire about the role of Prophet Muhammad in spreading these teachings."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "have_a_chat_with_our_bot", "arguments": "{\"question\": \"What are the main teachings of Islam?\"}"}}, {"type": "function", "function": {"name": "have_a_chat_with_our_bot", "arguments": "{\"question\": \"What role did Prophet Muhammad play in spreading these teachings?\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "search_wikipedia", "description": "Searches Wikipedia and returns the top K summarized information along with similar items. Additionally, images and coordinates with map links are provided when available.", "parameters": {"q": {"description": "Query string to search for on Wikipedia.", "type": "str", "default": "Messi"}, "topk": {"description": "Number of top summarized items to return. Defaults to 3. Must be greater than 0.", "type": "int, optional", "default": "3"}}}}, {"type": "function", "function": {"name": "search", "description": "Performs a search query on the specified search engine using given parameters and returns the response as JSON or text.", "parameters": {"pageno": {"description": "The page number of the search results.", "type": "int", "default": "1"}, "country": {"description": "The country code for the search localization.", "type": "str", "default": "US"}, "lang": {"description": "The language code for the search localization.", "type": "str", "default": "en"}, "search": {"description": "The search string to query.", "type": "str", "default": "Hello"}, "perpage": {"description": "The number of results per page. Defaults to 10.", "type": "int, optional", "default": "10"}}}}, {"type": "function", "function": {"name": "get_d_tails_image", "description": "Fetch detailed information about a specific image using the Toolbench RapidAPI.", "parameters": {"image": {"description": "The identifier or name of the image to retrieve details for.", "type": "str", "default": "domaine-nc-api"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "search_wikipedia", "arguments": "{\"q\": \"Great Wall of China\", \"topk\": 2}"}}]}, "messages": [{"role": "user", "content": "Find the top 2 summarized information about the Great Wall of China along with similar items, images, and coordinates with map links from Wikipedia."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "search_wikipedia", "arguments": "{\"q\": \"Great Wall of China\", \"topk\": 2}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "is_palindrome", "description": "Checks if a string is a palindrome.", "parameters": {"text": {"description": "The input string.", "type": "str"}}}}, {"type": "function", "function": {"name": "generate_password", "description": "Generates a random password of specified length and character types.", "parameters": {"length": {"description": "The length of the password. Defaults to 12.", "type": "int, optional", "default": 12}, "include_special": {"description": "Whether to include special characters in the password. Defaults to True.", "type": "bool, optional", "default": true}}}}, {"type": "function", "function": {"name": "is_valid_parentheses", "description": "Checks if a string contains valid parentheses.", "parameters": {"s": {"description": "The input string.", "type": "str"}}}}, {"type": "function", "function": {"name": "merge_dictionaries", "description": "Merges two dictionaries into a single dictionary.", "parameters": {"dict1": {"description": "The first dictionary.", "type": "Dict"}, "dict2": {"description": "The second dictionary.", "type": "Dict"}}}}, {"type": "function", "function": {"name": "remove_duplicates", "description": "Removes duplicate elements from a list while preserving the order.", "parameters": {"lst": {"description": "The input list.", "type": "List"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "generate_password", "arguments": "{\"length\": 16, \"include_special\": true}"}}]}, "messages": [{"role": "user", "content": "Generate a password of length 16 including special characters."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "generate_password", "arguments": "{\"length\": 16, \"include_special\": true}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "by_location", "description": "Searches for homeless shelters based on provided geographical coordinates and radius.", "parameters": {"lat": {"description": "The latitude of the location to search nearby shelters.", "type": "str", "default": "47.630703"}, "radius": {"description": "The search radius in miles (maximum 10 miles).", "type": "str", "default": "1.4"}, "lng": {"description": "The longitude of the location to search nearby shelters.", "type": "str", "default": "-122.186370"}}}}, {"type": "function", "function": {"name": "brands_detail", "description": "Fetch detailed information about a brand using the provided brand ID.", "parameters": {"is_id": {"description": "The ID of the brand to fetch details for. This value should be obtained from the brands `id` field returned in the `/search` endpoint or the `brandId` field returned in the `/products/list` or `/products/detail` endpoints.", "type": "int", "default": "158155"}}}}, {"type": "function", "function": {"name": "consulta_cep", "description": "Fetches information about a given CEP (Postal Code) using the RapidAPI service.", "parameters": {"cep": {"description": "The Brazilian postal code (CEP) to be queried.", "type": "str", "default": "01452922"}}}}, {"type": "function", "function": {"name": "get_cci_by_number", "description": "Fetches the CCI (Control Correlation Identifier) and its definition based on a 6-digit CCI identification number using the specified RapidAPI key.", "parameters": {"cci": {"description": "A 6-digit CCI identification number.", "type": "str", "default": "000001"}}}}, {"type": "function", "function": {"name": "trending", "description": "Fetches trending YouTube videos for a specific category and country using the Toolbench RapidAPI.", "parameters": {"type": {"description": "The category of trending videos. Can be 'default', 'music', 'gaming', or 'movies'. Defaults to 'gaming'.", "type": "str, optional", "default": "gaming"}, "country": {"description": "The country code for which to retrieve trending videos, e.g., 'US', 'DE', 'JP'. Defaults to 'US'.", "type": "str, optional", "default": "US"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "brands_detail", "arguments": "{\"is_id\": 12345}"}}]}, "messages": [{"role": "user", "content": "Retrieve detailed information about the brand with ID 12345."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "brands_detail", "arguments": "{\"is_id\": 12345}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "loginuser", "description": "Logs in a user to the specified toolbench API by making a GET request to the login endpoint with the provided username and password.", "parameters": {"username": {"description": "The username for login.", "type": "str", "default": ""}, "password": {"description": "The password for login in clear text.", "type": "str", "default": ""}}}}, {"type": "function", "function": {"name": "label_template_brands", "description": "Returns the list of blank label sheet brands supported by Ecardify on the given date.", "parameters": {"format": {"description": "The paper size format, which can be either \"Letter\" (8.5 inch by 11 inch) or \"A4\" (210 mm by 297 mm).", "type": "str", "default": "a4"}}}}, {"type": "function", "function": {"name": "search", "description": "This function performs a search query using the Market Intelligence by Automata API, returning information about related companies based on the provided search terms.", "parameters": {"terms": {"description": "Search terms separated by commas, which are used to filter the companies. Example: 'cloud computing,enterprise,security'.", "type": "str", "default": ""}, "page": {"description": "Page number for paginated search results. Default is '0'. Example: '0', '1', '2', etc.", "type": "str, optional", "default": "0"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "label_template_brands", "arguments": "{\"format\": \"Letter\"}"}}, {"type": "function", "function": {"name": "loginuser", "arguments": "{\"username\": \"jane_doe\", \"password\": \"secured_pass123\"}"}}]}, "messages": [{"role": "user", "content": "What are the blank label sheet brands supported by Ecardify for the Letter format? Also, login to the specified toolbench API with the username 'jane_doe' and password 'secured_pass123'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "label_template_brands", "arguments": "{\"format\": \"Letter\"}"}}, {"type": "function", "function": {"name": "loginuser", "arguments": "{\"username\": \"jane_doe\", \"password\": \"secured_pass123\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "spac_top_10_rankings", "description": "Fetches the top 10 SPAC (Special Purpose Acquisition Company) rankings based on specified criteria such as gainers, losers, and volume leaders for a given period and equity type.", "parameters": {"sortby": {"description": "Criteria to sort the rankings by. Can be 'gainers', 'losers', or 'volume'.", "type": "str", "default": "gainers"}, "period": {"description": "Time period to consider for the rankings. Can be 'daily', 'weekly', or 'monthly'.", "type": "str", "default": "daily"}, "type": {"description": "Type of SPAC equity. Can be 'common', 'unit', or 'warrant'.", "type": "str", "default": "common"}}}}, {"type": "function", "function": {"name": "get_5_year_historical_quarterly_prices", "description": "Fetches the 5-year historical quarterly stock prices for a given ticker.", "parameters": {"ticker": {"description": "The stock ticker symbol to retrieve historical data for.", "type": "str", "default": "AAPL"}}}}, {"type": "function", "function": {"name": "ln", "description": "Returns the natural logarithm (LN) transforms of all data points for a given financial instrument using the Twelve Data API.", "parameters": {"symbol": {"description": "The financial instrument symbol, which can be an equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`, etc.).", "type": "str", "default": "AAPL"}, "interval": {"description": "The interval between two consecutive points in the time series. Supported intervals: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1min"}, "outputsize": {"description": "The number of data points to retrieve. The default value is `30` when no date parameters are set; otherwise, it is set to the maximum available.", "type": "int, optional", "default": 30}, "format": {"description": "The output format of the data. Supported values are `CSV` and `JSON`. The default value is `JSON`.", "type": "str, optional", "default": "json"}, "series_type": {"description": "The type of data series to retrieve. Supported values are `open`, `high`, `low`, and `close`. The default value is `close`.", "type": "str, optional", "default": "close"}}}}, {"type": "function", "function": {"name": "maxindex", "description": "Fetches the index of the highest value over a specified period (MAXINDEX) using the Twelve Data API.", "parameters": {"interval": {"description": "Interval between two consecutive points in the time series. Supported values: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1min"}, "symbol": {"description": "Instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).", "type": "str", "default": "AAPL"}, "time_period": {"description": "The number of data points to consider. Defaults to 9.", "type": "int, optional", "default": 9}, "series_type": {"description": "Type of series data to retrieve. Supported values: `open`, `high`, `low`, `close`. Defaults to 'close'.", "type": "str, optional", "default": "close"}, "outputsize": {"description": "The amount of data to retrieve. Default is 30 if no date parameters are set, otherwise it is set to maximum.", "type": "int, optional", "default": 30}, "format": {"description": "The format to receive the data in. Supported values: `CSV`, `JSON`. Defaults to 'json'.", "type": "str, optional", "default": "json"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "ln", "arguments": "{\"symbol\": \"BTC/USD\", \"interval\": \"1day\", \"outputsize\": 30, \"series_type\": \"close\"}"}}, {"type": "function", "function": {"name": "maxindex", "arguments": "{\"interval\": \"1day\", \"symbol\": \"BTC/USD\", \"time_period\": 30, \"series_type\": \"close\"}"}}]}, "messages": [{"role": "user", "content": "I need the natural logarithm of the closing prices for Bitcoin (BTC/USD) over the last 30 days, and the index of the highest value for the same period."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "ln", "arguments": "{\"symbol\": \"BTC/USD\", \"interval\": \"1day\", \"outputsize\": 30, \"series_type\": \"close\"}"}}, {"type": "function", "function": {"name": "maxindex", "arguments": "{\"interval\": \"1day\", \"symbol\": \"BTC/USD\", \"time_period\": 30, \"series_type\": \"close\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "dice_roll_probability", "description": "Calculates the probability of rolling a specific sum with a given number of dice, each having a certain number of faces.", "parameters": {"target_sum": {"description": "The target sum to calculate the probability for.", "type": "int", "default": 6}, "num_dice": {"description": "The number of dice being rolled.", "type": "int", "default": 6}, "num_faces": {"description": "The number of faces on each die. Defaults to 6.", "type": "int, optional"}}}}, {"type": "function", "function": {"name": "least_common_multiple", "description": "Computes the least common multiple (LCM) of two positive integers.", "parameters": {"a": {"description": "The first positive integer.", "type": "int"}, "b": {"description": "The second positive integer.", "type": "int"}}}}, {"type": "function", "function": {"name": "min_meeting_rooms", "description": "Finds the minimum number of meeting rooms required to accommodate all meetings.", "parameters": {"intervals": {"description": "A list of meeting time intervals, where each interval is represented as [start_time, end_time].", "type": "List[List[int]]"}}}}, {"type": "function", "function": {"name": "numerical_derivative", "description": "Estimates the derivative of a function at a given point using the central difference formula.", "parameters": {"function": {"description": "The function to calculate the derivative of.", "type": "Callable[[float], float]"}, "x": {"description": "The point at which to estimate the derivative.", "type": "float"}}}}, {"type": "function", "function": {"name": "density", "description": "Calculates the density of an object given its mass and volume.", "parameters": {"mass": {"description": "The mass of the object.", "type": "float"}, "volume": {"description": "The volume of the object.", "type": "float"}}}}, {"type": "function", "function": {"name": "note_duration", "description": "Calculates the duration between two musical notes based on their frequencies and the tempo.", "parameters": {"freq1": {"description": "The frequency of the first note in Hz.", "type": "int", "default": 120}, "freq2": {"description": "The frequency of the second note in Hz.", "type": "int", "default": 120}, "bpm": {"description": "The tempo of the music in beats per minute. Defaults to 120.", "type": "int, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "numerical_derivative", "arguments": "{\"function\": \"lambda x: x ** 2\", \"x\": 3}"}}]}, "messages": [{"role": "user", "content": "Estimate the derivative of x^2 at x=3."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "numerical_derivative", "arguments": "{\"function\": \"lambda x: x ** 2\", \"x\": 3}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "stock_get_five_yr_avg_div_yield", "description": "Fetches the five-year average dividend yield for a given stock symbol and region.", "parameters": {"symbol": {"description": "The stock ticker symbol (e.g., 'AAPL' for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "The region of the stock market. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'. Default is 'US'.", "type": "str, optional", "default": "US"}}}}, {"type": "function", "function": {"name": "historical_rates", "description": "Fetches historical currency or metal rates for a given date.", "parameters": {"date": {"description": "The date for which to retrieve historical rates, in the format YYYY-MM-DD.", "type": "str", "default": "2022-01-20"}, "symbols": {"description": "A comma-separated list of currency codes or metal codes to limit the output.", "type": "str", "default": "XAU"}, "base": {"description": "The three-letter currency code or metal code of the preferred base currency.", "type": "str", "default": "USD"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "stock_get_five_yr_avg_div_yield", "arguments": "{\"symbol\": \"AAPL\"}"}}]}, "messages": [{"role": "user", "content": "Get the five-year average dividend yield for Apple Inc. (AAPL) listed on the US stock market."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "stock_get_five_yr_avg_div_yield", "arguments": "{\"symbol\": \"AAPL\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "min_meeting_rooms", "description": "Finds the minimum number of meeting rooms required to accommodate all meetings.", "parameters": {"intervals": {"description": "A list of meeting time intervals, where each interval is represented as [start_time, end_time].", "type": "List[List[int]]"}}}}, {"type": "function", "function": {"name": "future_investment_value", "description": "Calculates the future value of an investment based on the present value, annual interest rate, and number of years.", "parameters": {"present_value": {"description": "The present value of the investment.", "type": "float"}, "annual_interest_rate": {"description": "The annual interest rate as a decimal (e.g., 0.05 for 5%).", "type": "float"}, "years": {"description": "The number of years the investment will grow.", "type": "int"}}}}, {"type": "function", "function": {"name": "dice_roll_probability", "description": "Calculates the probability of rolling a specific sum with a given number of dice, each having a certain number of faces.", "parameters": {"target_sum": {"description": "The target sum to calculate the probability for.", "type": "int", "default": 6}, "num_dice": {"description": "The number of dice being rolled.", "type": "int", "default": 6}, "num_faces": {"description": "The number of faces on each die. Defaults to 6.", "type": "int, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "min_meeting_rooms", "arguments": "{\"intervals\": [[13, 14.5], [14, 15.5], [15, 16.5]]}"}}]}, "messages": [{"role": "user", "content": "How many meeting rooms are required for meetings starting at 13:00, 14:00, 15:00, and ending at 14:30, 15:30, 16:30?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "min_meeting_rooms", "arguments": "{\"intervals\": [[13, 14.5], [14, 15.5], [15, 16.5]]}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "search_web", "description": "Performs a text search on the web using the Google Search JSON API and returns search results in JSON format.", "parameters": {"q": {"description": "The search query.", "type": "str", "default": "facebook"}, "num": {"description": "The number of search results to return. Valid values range from 1 to 20, inclusive. Defaults to 10.", "type": "int, optional", "default": "10"}, "start": {"description": "The index of the first result to return. Defaults to 0.", "type": "int, optional", "default": "0"}, "gl": {"description": "A two-letter country code to boost search results whose country of origin matches the parameter value. Defaults to 'US'.", "type": "str, optional", "default": "US"}, "lr": {"description": "Restricts the search to documents written in a particular language. Defaults to 'lang_en'.", "type": "str, optional", "default": "lang_en"}}}}, {"type": "function", "function": {"name": "suggestqueries", "description": "Fetches suggestions based on the given query using the specified RapidAPI key.", "parameters": {"query": {"description": "The search query for which suggestions are to be fetched.", "type": "str", "default": "How to"}}}}, {"type": "function", "function": {"name": "web_search", "description": "Performs a web search using the specified query and optional parameters.", "parameters": {"query": {"description": "The search query to be executed. Examples include 'ronaldo site:instagram.com', 'twitter filetype:pdf', and 'inurl:market'.", "type": "str", "default": "Leo Messi"}, "related_keywords": {"description": "If specified, includes related keywords in the search results. This may increase API latency. Default is None.", "type": "str, optional", "default": ""}, "limit": {"description": "The maximum number of search results to return. The maximum recommended value is 300. Default is 10.", "type": "int, optional", "default": "10"}}}}, {"type": "function", "function": {"name": "autosuggest", "description": "Fetches and returns keyword autosuggestions from the RapidAPI service.", "parameters": {"q": {"description": "The keyword to search for related suggestions. Default is 'rabbit'.", "type": "str", "default": "rabbit"}}}}, {"type": "function", "function": {"name": "image_search", "description": "Searches for images using the specified query parameters and returns the results.", "parameters": {"q": {"description": "The search query.", "type": "str", "default": "Word Cup"}, "start": {"description": "The index of the first result to return. Defaults to '0'.", "type": "str", "default": "0"}, "num": {"description": "The number of search results to return. Valid values are integers between 1 and 20, inclusive. Defaults to 10.", "type": "int", "default": "10"}, "gl": {"description": "A two-letter country code to boost search results from that country. Defaults to 'us'.", "type": "str", "default": "us"}, "lr": {"description": "Restricts the search to documents written in a particular language. Defaults to 'lang_en'.", "type": "str", "default": "lang_en"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "search_web", "arguments": "{\"q\": \"climate change\", \"num\": 15, \"gl\": \"AU\", \"lr\": \"lang_en\"}"}}]}, "messages": [{"role": "user", "content": "Find the top 15 search results for 'climate change' in English, limited to Australia."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "search_web", "arguments": "{\"q\": \"climate change\", \"num\": 15, \"gl\": \"AU\", \"lr\": \"lang_en\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "stock_v2_get_financial_details", "description": "Retrieves financial details for a given stock using the Morningstar API.", "parameters": {"performanceid": {"description": "The performance ID value obtained from the /auto-complete, /get-summary, or /get-movers endpoints.", "type": "str", "default": "0P0000OQN8"}, "datatype": {"description": "The data frequency. One of the following: 'A' for Annual or 'Q' for Quarterly. Defaults to 'A'.", "type": "str, optional", "default": "A"}, "reporttype": {"description": "The report type. One of the following: 'R' for Restated or 'A' for As originally reported. Defaults to 'A'.", "type": "str, optional", "default": "A"}, "type": {"description": "The data frequency. One of the following: 'A' for Annual or 'Q' for Quarterly. Defaults to 'A'.", "type": "str, optional", "default": "incomeStatement"}}}}, {"type": "function", "function": {"name": "latest_exchange_rates", "description": "Fetches the latest exchange rate data using the provided parameters.", "parameters": {"resolution": {"description": "The frequency of updates for the exchange rates. Possible values are '1m' for minute, '1h' for hourly, and '1d' for daily updates.", "type": "str, optional", "default": ""}, "currencies": {"description": "A comma-separated list of currency codes (e.g., 'USD,EUR,AUD,GBP') to get exchange rates for. If not provided, rates for all available currencies are returned.", "type": "str, optional", "default": ""}, "base": {"description": "The base currency for the exchange rates. Defaults to 'USD'.", "type": "str, optional", "default": "USD"}}}}, {"type": "function", "function": {"name": "recommendations", "description": "Fetches analyst recommendations for a given stock symbol, optionally filtered by exchange and country.", "parameters": {"symbol": {"description": "The stock symbol to get recommendations for.", "type": "str", "default": ""}, "exchange": {"description": "Filter recommendations by exchange name or mic code.", "type": "str, optional", "default": ""}, "country": {"description": "Filter recommendations by country name or alpha code.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "getevents", "description": "Fetches data about events from the Kalshi trading API.", "parameters": {"series_ticker": {"description": "Series ticker to retrieve contracts for.", "type": "str, optional", "default": ""}, "status": {"description": "Restricts the events to those with certain statuses. Accepted values are: 'open', 'closed', 'settled'.", "type": "str, optional", "default": ""}, "cursor": {"description": "Pointer to the next page of records in the pagination. If provided, it should be the cursor string from a previous request.", "type": "str, optional", "default": ""}, "limit": {"description": "Number of results per page. Defaults to 100 if not specified.", "type": "int, optional", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "latest_exchange_rates", "arguments": "{\"resolution\": \"1d\", \"currencies\": \"EUR,JPY,GBP\", \"base\": \"USD\"}"}}]}, "messages": [{"role": "user", "content": "Fetch the latest exchange rates with a daily resolution for EUR, JPY, and GBP against the USD."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "latest_exchange_rates", "arguments": "{\"resolution\": \"1d\", \"currencies\": \"EUR,JPY,GBP\", \"base\": \"USD\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "eventlineups", "description": "Fetches the lineups for a specific E-Sports event using the provided event ID and RapidAPI key.", "parameters": {"is_id": {"description": "The ID of the E-Sports event for which the lineups are to be retrieved.", "type": "int", "default": 10945127}}}}, {"type": "function", "function": {"name": "get_clips", "description": "Fetch the latest 50 clips of a specified Twitch channel.", "parameters": {"name": {"description": "The name of the Twitch channel to fetch clips from.", "type": "str", "default": "jakubloveshorror"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_clips", "arguments": "{\"name\": \"TwitchGuru\"}"}}, {"type": "function", "function": {"name": "eventlineups", "arguments": "{\"is_id\": 98765}"}}]}, "messages": [{"role": "user", "content": "Can you provide the latest clips from 'TwitchGuru' and the lineups for event ID 98765?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_clips", "arguments": "{\"name\": \"TwitchGuru\"}"}}, {"type": "function", "function": {"name": "eventlineups", "arguments": "{\"is_id\": 98765}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "rising_popular_posts", "description": "Fetches rising popular posts from a specified Reddit API endpoint.", "parameters": {"cursor": {"description": "A string to paginate through results. Defaults to None.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "song_info", "description": "Retrieve basic information about a song from a given track URL using the SoundCloud API.", "parameters": {"track_url": {"description": "The URL of the track for which the information is to be retrieved.", "type": "str", "default": "https://soundcloud.com/user-977421934/the-phoenix"}}}}, {"type": "function", "function": {"name": "get_user_info_by_user_id", "description": "Fetch Instagram user information by user ID using the RapidAPI service.", "parameters": {"is_id": {"description": "The Instagram user ID for which the information is to be fetched.", "type": "int", "default": "18527"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "rising_popular_posts", "arguments": "{}"}}]}, "messages": [{"role": "user", "content": "Fetch the rising popular posts from Reddit, and if a JSON parsing error occurs, return the raw response text."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "rising_popular_posts", "arguments": "{}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "getuserbyname", "description": "Fetches user details by username from the specified API endpoint using the provided RapidAPI key.", "parameters": {"username": {"description": "The username of the user to fetch details for.", "type": "str", "default": ""}}}}, {"type": "function", "function": {"name": "house_prices_get_sales_history", "description": "Retrieve the sales history for a given property using the Zoopla API.", "parameters": {"property_id": {"description": "The identifier for the property for which to retrieve the sales history.", "type": "int", "default": "27175510"}}}}, {"type": "function", "function": {"name": "properties_detail", "description": "Retrieves detailed information about a property using the Idealista API.", "parameters": {"propertycode": {"description": "The unique code of the property to retrieve details for, as obtained from the properties list endpoint.", "type": "int", "default": "19899037"}, "country": {"description": "The country code to use for the API request. One of the following: 'it', 'es', 'pt'. Defaults to 'it'.", "type": "str, optional", "default": "it"}, "language": {"description": "The language code to use for the API response. One of the following: 'en', 'es', 'it', 'pt', 'de', 'fr', 'ro', 'ru', 'pl', 'sv', 'fi', 'nb', 'nl'. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}}, {"type": "function", "function": {"name": "read_a_link_or_token_by_its_id", "description": "Fetches the content of a link or token by its ID using the Token2Go API.", "parameters": {"is_id": {"description": "The ID of the link or token to be fetched.", "type": "str", "default": ""}, "t": {"description": "The type of content to fetch (either 'link' or 'token').", "type": "str", "default": "link"}}}}, {"type": "function", "function": {"name": "og", "description": "Fetches all the OpenGraph and Meta tags from a given website URL using the provided API key.", "parameters": {"url": {"description": "The website URL to fetch the OpenGraph and Meta tags from. Defaults to 'https://protomol.explorarc.com/'.", "type": "str", "default": "https://protomol.explorarc.com/"}}}}, {"type": "function", "function": {"name": "schools_list", "description": "Fetches a list of schools around a specified geographical location.", "parameters": {"lat": {"description": "The latitude of the geographical location.", "type": "int", "default": "-37.79870933"}, "lon": {"description": "The longitude of the geographical location.", "type": "str", "default": "144.95324086"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "og", "arguments": "{\"url\": \"https://www.example1.com\"}"}}, {"type": "function", "function": {"name": "og", "arguments": "{\"url\": \"https://www.example2.com\"}"}}]}, "messages": [{"role": "user", "content": "Retrieve OpenGraph and Meta tags from URLs 'https://www.example1.com' and 'https://www.example2.com'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "og", "arguments": "{\"url\": \"https://www.example1.com\"}"}}, {"type": "function", "function": {"name": "og", "arguments": "{\"url\": \"https://www.example2.com\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "getlatestbysecuritiescode", "description": "Fetches the latest securities report data for a given company based on its securities code.", "parameters": {"securities_code": {"description": "The securities code representing the company.", "type": "int", "default": "7203"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getlatestbysecuritiescode", "arguments": "{\"securities_code\": 7203}"}}]}, "messages": [{"role": "user", "content": "Can you fetch the latest securities report data for Toyota Motor Corporation using its securities code?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "getlatestbysecuritiescode", "arguments": "{\"securities_code\": 7203}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "analyze_social_group_dynamics", "description": "Analyzes the social dynamics within a group based on the personality traits and group size.", "parameters": {"total": {"description": "The total group size.", "type": "int"}, "extroverts": {"description": "The number of extroverted members in the group.", "type": "int"}, "introverts": {"description": "The number of introverted members in the group.", "type": "int"}}}}, {"type": "function", "function": {"name": "get_ip_location", "description": "Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API.", "parameters": {"ip": {"description": "The IP address to locate.", "type": "str"}}}}, {"type": "function", "function": {"name": "is_hotel_available", "description": "Checks the availability of a hotel for a given date range.", "parameters": {"hotel": {"description": "The name of the hotel.", "type": "str"}, "city": {"description": "The city where the hotel is located.", "type": "str"}, "checkin": {"description": "The check-in date in the format \"YYYY-MM-DD\".", "type": "str"}, "checkout": {"description": "The check-out date in the format \"YYYY-MM-DD\".", "type": "str"}}}}, {"type": "function", "function": {"name": "calculate_calorie_intake", "description": "Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals.", "parameters": {"weight_kg": {"description": "Body weight in kilograms.", "type": "float"}, "height_cm": {"description": "Height in centimeters.", "type": "float"}, "age": {"description": "Age in years.", "type": "int"}, "sex": {"description": "Biological sex, either 'male' or 'female'.", "type": "str"}, "activity_level": {"description": "Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active).", "type": "int"}, "goal": {"description": "Fitness goal, either 'lose', 'maintain', or 'gain'.", "type": "str"}}}}, {"type": "function", "function": {"name": "is_leap_year", "description": "Checks if a year is a leap year.", "parameters": {"year": {"description": "The year to check.", "type": "int"}}}}, {"type": "function", "function": {"name": "get_city_from_zipcode", "description": "Retrieves the city name for a given ZIP code using the Ziptastic API.", "parameters": {"zipcode": {"description": "The ZIP code to look up.", "type": "str"}}}}, {"type": "function", "function": {"name": "project_investment_growth", "description": "Projects the growth of an investment over a specified number of years.", "parameters": {"principal": {"description": "The initial investment amount.", "type": "float", "default": true}, "annual_addition": {"description": "The amount added to the investment annually.", "type": "float", "default": true}, "years": {"description": "The number of years to project the investment growth.", "type": "int"}, "return_rate": {"description": "The annual return rate as a decimal (e.g., 0.07 for 7%).", "type": "float"}, "inflation": {"description": "A list of annual inflation rates as decimals.", "type": "List[float]"}, "inflation_adjusted": {"description": "Whether to adjust the final value for inflation. Defaults to True.", "type": "bool, optional"}}}}, {"type": "function", "function": {"name": "predict_forest_area", "description": "Predicts the change in forest area over a specified number of years.", "parameters": {"location": {"description": "The geographic location for the prediction.", "type": "str"}, "num_years": {"description": "The number of years into the future to make the prediction.", "type": "int"}, "include_humans": {"description": "Whether to include the impact of human activities in the prediction. Defaults to False.", "type": "bool, optional"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "analyze_social_group_dynamics", "arguments": "{\"total\": 20, \"extroverts\": 12, \"introverts\": 8}"}}, {"type": "function", "function": {"name": "get_ip_location", "arguments": "{\"ip\": \"8.8.8.8\"}"}}, {"type": "function", "function": {"name": "is_hotel_available", "arguments": "{\"hotel\": \"Queens Hotel\", \"city\": \"Berlin, Germany\", \"checkin\": \"2022-03-09\", \"checkout\": \"2022-03-14\"}"}}]}, "messages": [{"role": "user", "content": "Analyze the social dynamics of a group of 20 people with 12 extroverts and 8 introverts. Also, locate the IP '8.8.8.8' and determine if the 'Queens Hotel' in 'Berlin, Germany' is available from '2022-03-09' to '2022-03-14'."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "analyze_social_group_dynamics", "arguments": "{\"total\": 20, \"extroverts\": 12, \"introverts\": 8}"}}, {"type": "function", "function": {"name": "get_ip_location", "arguments": "{\"ip\": \"8.8.8.8\"}"}}, {"type": "function", "function": {"name": "is_hotel_available", "arguments": "{\"hotel\": \"Queens Hotel\", \"city\": \"Berlin, Germany\", \"checkin\": \"2022-03-09\", \"checkout\": \"2022-03-14\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "v3_auto_complete", "description": "Fetches auto-suggestions based on a given symbol or company name using the RapidAPI Fidelity Investments endpoint.", "parameters": {"q": {"description": "Symbol or company name for which to fetch auto-suggestions.", "type": "str", "default": "apple"}}}}, {"type": "function", "function": {"name": "fx", "description": "Converts a specified `amount` of currency from one type to another using the ForexGo API, with an optional historical date.", "parameters": {"amount": {"description": "The amount of currency to be converted.", "type": "int", "default": "10"}, "is_from": {"description": "The source currency code (e.g., 'USD', 'EUR').", "type": "str", "default": "EUR"}, "to": {"description": "The target currency code to convert to.", "type": "str", "default": "USD"}, "date": {"description": "The date for historical conversion rates in ISO format (YYYY-MM-DDTHH:mm:ss.sssZ). Defaults to None for real-time rates.", "type": "str, optional", "default": ""}}}}, {"type": "function", "function": {"name": "stock_get_five_yr_avg_div_yield", "description": "Fetches the five-year average dividend yield for a given stock symbol and region.", "parameters": {"symbol": {"description": "The stock ticker symbol (e.g., 'AAPL' for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "The region of the stock market. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'. Default is 'US'.", "type": "str, optional", "default": "US"}}}}, {"type": "function", "function": {"name": "get_country_info", "description": "Fetches country information based on specified criteria.", "parameters": {"value": {"description": "The value to query by, such as an ISO code (e.g., 'DE') or a country name (e.g., 'Germany'). Defaults to 'DE'.", "type": "str, optional", "default": "DE"}, "param": {"description": "The parameter type for the query, such as 'ISO' for ISO codes or 'countryName' for country names. Defaults to 'ISO'.", "type": "str, optional", "default": "ISO"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "v3_auto_complete", "arguments": "{\"q\": \"Microsoft\"}"}}, {"type": "function", "function": {"name": "stock_get_five_yr_avg_div_yield", "arguments": "{\"symbol\": \"MSFT\", \"region\": \"UK\"}"}}]}, "messages": [{"role": "user", "content": "What are the auto-suggestions for Microsoft and what is the five-year average dividend yield for its stock in the UK region?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "v3_auto_complete", "arguments": "{\"q\": \"Microsoft\"}"}}, {"type": "function", "function": {"name": "stock_get_five_yr_avg_div_yield", "arguments": "{\"symbol\": \"MSFT\", \"region\": \"UK\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "generate", "description": "Generate a face with given optional parameters for ethnicity, gender, and age.", "parameters": {"ethnicity": {"description": "Ethnic phenotype for the face. Options include 'european', 'african', 'west_asian', 'south_asian', 'east_asian', 'southeast_asian', and 'latin_american'. Defaults to 'european'.", "type": "str, optional", "default": "european"}, "gender": {"description": "Gender of the face. Options include 'male' and 'female'. Defaults to 'female'.", "type": "str, optional", "default": "female"}, "age": {"description": "Age group of the face. Options include '10s', '20s', '30s', '40s', '50s', and '60s'. Defaults to '20s'.", "type": "str, optional", "default": "20s"}}}}, {"type": "function", "function": {"name": "get_an_answer_to_your_question", "description": "Fetches an answer to an Islamic question using the Islam&AI bot from the provided API.", "parameters": {"question": {"description": "The Islamic question to be answered.", "type": "str", "default": "What is Islam?"}}}}, {"type": "function", "function": {"name": "get_a_conversation_turn", "description": "Fetch a specific conversation turn by its ID and return its details.", "parameters": {"is_id": {"description": "The ID of the conversation turn to fetch.", "type": "int", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_an_answer_to_your_question", "arguments": "{\"question\": \"What does Islam say about the importance of family?\"}"}}]}, "messages": [{"role": "user", "content": "What does Islam say about the importance of family?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "get_an_answer_to_your_question", "arguments": "{\"question\": \"What does Islam say about the importance of family?\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "ski_weather_api", "description": "Fetches ski weather forecasts from the World Weather Online API for a specified location.", "parameters": {"q": {"description": "The location query (e.g., city name, latitude/longitude).", "type": "str", "default": "45.45,6.7"}, "tp": {"description": "Time period for the weather forecast (e.g., '3 hourly'). Default is None.", "type": "str, optional", "default": ""}, "lang": {"description": "The language code for the weather forecast (default is 'en' for English).", "type": "str, optional", "default": "en"}, "format": {"description": "The response format, such as 'json' or 'xml'. Default is None.", "type": "str, optional", "default": ""}, "num_of_days": {"description": "The number of days for the weather forecast, with a maximum of 7 days. Default is 1.", "type": "int, optional", "default": "1"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "ski_weather_api", "arguments": "{\"q\": \"Park City, Utah\", \"tp\": \"3 hourly\", \"num_of_days\": 4, \"lang\": \"en\"}"}}]}, "messages": [{"role": "user", "content": "What is the 3-hourly ski weather forecast for Park City, Utah for the next 4 days in English?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "ski_weather_api", "arguments": "{\"q\": \"Park City, Utah\", \"tp\": \"3 hourly\", \"num_of_days\": 4, \"lang\": \"en\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "single_dog_breed", "description": "Fetches details of a single dog breed from the DogBreedDB API.", "parameters": {"is_id": {"description": "The ID of the dog breed to fetch details for.", "type": "int", "default": "47"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "single_dog_breed", "arguments": "{\"is_id\": 202}"}}, {"type": "function", "function": {"name": "single_dog_breed", "arguments": "{\"is_id\": 303}"}}]}, "messages": [{"role": "user", "content": "Fetch the details of the dog breed with ID 202 and the dog breed with ID 303."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "single_dog_breed", "arguments": "{\"is_id\": 202}"}}, {"type": "function", "function": {"name": "single_dog_breed", "arguments": "{\"is_id\": 303}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "calculate_electric_field", "description": "Calculate the electric field produced by a charge at a certain distance.", "parameters": {"charge": {"description": "Charge in coulombs producing the electric field.", "type": "int", "default": 8.854e-12}, "distance": {"description": "Distance from the charge in meters where the field is being measured.", "type": "int", "default": 8.854e-12}, "permitivity": {"description": "Permitivity of the space where field is being calculated, default is 8.854e-12.", "type": "float"}}}}, {"type": "function", "function": {"name": "find_next_greater_element", "description": "Finds the next greater element for each element in a list.", "parameters": {"nums": {"description": "The list of numbers.", "type": "List[int]"}}}}, {"type": "function", "function": {"name": "prime_factorization", "description": "Computes the prime factorization of a positive integer.", "parameters": {"number": {"description": "The positive integer to factorize.", "type": "int"}}}}, {"type": "function", "function": {"name": "calculate_distance", "description": "Calculates the Euclidean distance between two points in n-dimensional space.", "parameters": {"point1": {"description": "The coordinates of the first point.", "type": "List[float]"}, "point2": {"description": "The coordinates of the second point.", "type": "List[float]"}}}}, {"type": "function", "function": {"name": "is_power", "description": "Checks if a number is a power of a given base.", "parameters": {"num": {"description": "The number to check.", "type": "int"}, "base": {"description": "The base to check against.", "type": "int"}}}}, {"type": "function", "function": {"name": "matrix_multiply", "description": "Multiplies two matrices.", "parameters": {"matrix_a": {"description": "The first matrix.", "type": "List[List[float]]"}, "matrix_b": {"description": "The second matrix.", "type": "List[List[float]]"}}}}, {"type": "function", "function": {"name": "density", "description": "Calculates the density of an object given its mass and volume.", "parameters": {"mass": {"description": "The mass of the object.", "type": "float"}, "volume": {"description": "The volume of the object.", "type": "float"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "is_power", "arguments": "{\"num\": 81, \"base\": 3}"}}, {"type": "function", "function": {"name": "calculate_electric_field", "arguments": "{\"charge\": 9, \"distance\": 4}"}}]}, "messages": [{"role": "user", "content": "Check if 81 is a power of 3 and also calculate the electric field produced by a charge of 9 coulombs at a distance of 4 meters."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "is_power", "arguments": "{\"num\": 81, \"base\": 3}"}}, {"type": "function", "function": {"name": "calculate_electric_field", "arguments": "{\"charge\": 9, \"distance\": 4}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "availability", "description": "Checks if a given URL is archived and currently accessible in the Wayback Machine.", "parameters": {"url": {"description": "The URL to check for availability in the Wayback Machine.", "type": "str", "default": "http://mashape.com"}, "timestamp": {"description": "The timestamp to look up in Wayback. If not specified, the most recent available capture is returned. The format of the timestamp is 1-14 digits (YYYYMMDDhhmmss). Defaults to '20090101'.", "type": "str, optional", "default": "20090101"}, "callback": {"description": "An optional callback to produce a JSONP response. Defaults to None.", "type": "str, optional", "default": ""}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "availability", "arguments": "{\"url\": \"https://www.nytimes.com\", \"timestamp\": \"20120704\"}"}}]}, "messages": [{"role": "user", "content": "Is 'https://www.nytimes.com' accessible in the Wayback Machine on July 4, 2012?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "availability", "arguments": "{\"url\": \"https://www.nytimes.com\", \"timestamp\": \"20120704\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "news_source", "description": "Fetch the latest news stories for a given news source in chronological order.", "parameters": {"source_id": {"description": "The identifier of the news source for which to retrieve the latest news stories.", "type": "str", "default": "bbc"}}}}, {"type": "function", "function": {"name": "get_specific_climate_change_news", "description": "Fetch specific climate change news from a given newspaper.", "parameters": {"newspaperid": {"description": "The ID of the newspaper from which to fetch climate change news.", "type": "str", "default": "guardian"}}}}, {"type": "function", "function": {"name": "title_v2_get_business", "description": "Retrieves box office information for a given movie title from the online movie database using the provided API key.", "parameters": {"tconst": {"description": "The identifier for the movie title, starting with 'tt'. This value can be obtained from the `/title/auto-complete` or `/title/find` endpoints.", "type": "str", "default": "tt0796366"}}}}, {"type": "function", "function": {"name": "get_individual_articles", "description": "Retrieves individual articles from a specified newspaper using the RapidAPI service.", "parameters": {"newspaperid": {"description": "The unique identifier for the newspaper from which to retrieve the articles.", "type": "str", "default": "thetimes"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "title_v2_get_business", "arguments": "{\"tconst\": \"tt0133093\"}"}}]}, "messages": [{"role": "user", "content": "What are the box office details for the movie 'tt0133093' from the online movie database?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "title_v2_get_business", "arguments": "{\"tconst\": \"tt0133093\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "get_all_data_on_an_establishment_by_restaurant", "description": "Fetches all data on an establishment by restaurant name using the Wyre Data API.", "parameters": {"restaurant": {"description": "The name or identifier of the restaurant.", "type": "str", "default": "Shovels Inn"}}}}, {"type": "function", "function": {"name": "code_postal_par_code", "description": "Fetches information associated with a given postal code in New Caledonia using the RapidAPI service.", "parameters": {"code": {"description": "The postal code for which to retrieve information.", "type": "str", "default": "98827"}}}}, {"type": "function", "function": {"name": "reverse_geocode", "description": "Performs reverse geocoding in Ghana by providing latitude and longitude coordinates. Returns the name of the city where the location is situated.", "parameters": {"lon": {"description": "The longitude of the location.", "type": "str", "default": "-0.1870"}, "lat": {"description": "The latitude of the location.", "type": "str", "default": "5.6037"}}}}, {"type": "function", "function": {"name": "v1_iplookup", "description": "Performs an IP address lookup using the API Ninjas IP Lookup API.", "parameters": {"address": {"description": "The IP address to query. Must be in the format A.B.C.D (e.g., 73.9.149.180).", "type": "str", "default": "24.48.0.3"}}}}, {"type": "function", "function": {"name": "v1_worldtime", "description": "Fetches the current date and time from the API Ninjas World Time API for a specified location.", "parameters": {"timezone": {"description": "Timezone of the desired location (e.g., 'Europe/London').", "type": "str, optional", "default": ""}, "lon": {"description": "Longitude of the desired location.", "type": "str, optional", "default": ""}, "lat": {"description": "Latitude of the desired location.", "type": "str, optional", "default": ""}, "state": {"description": "US state name or 2-letter abbreviation (for United States cities only).", "type": "str, optional", "default": ""}, "country": {"description": "Country name or 2-letter country code.", "type": "str, optional", "default": ""}, "city": {"description": "City name.", "type": "str, optional, default 'London'", "default": "London"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "v1_iplookup", "arguments": "{\"address\": \"1.1.1.1\"}"}}, {"type": "function", "function": {"name": "v1_worldtime", "arguments": "{\"city\": \"Beijing\"}"}}]}, "messages": [{"role": "user", "content": "Lookup details for IP address '1.1.1.1' and the current time in Beijing."}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "v1_iplookup", "arguments": "{\"address\": \"1.1.1.1\"}"}}, {"type": "function", "function": {"name": "v1_worldtime", "arguments": "{\"city\": \"Beijing\"}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "eventdetails", "description": "Fetch information about a Mixed Martial Arts (MMA) event based on its ID.", "parameters": {"is_id": {"description": "The ID of the event to get information about.", "type": "int", "default": "11257051"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "eventdetails", "arguments": "{\"is_id\": 34567}"}}, {"type": "function", "function": {"name": "eventdetails", "arguments": "{\"is_id\": 89012}"}}]}, "messages": [{"role": "user", "content": "What are the details of the MMA events numbered 34567 and 89012?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "eventdetails", "arguments": "{\"is_id\": 34567}"}}, {"type": "function", "function": {"name": "eventdetails", "arguments": "{\"is_id\": 89012}"}}]}]}
{"tools": [{"type": "function", "function": {"name": "uniquestageimage", "description": "Retrieves the image for a specific Motorsport unique stage using the provided stage ID.", "parameters": {"is_id": {"description": "The unique stage ID for which to retrieve the image.", "type": "int", "default": 40}}}}, {"type": "function", "function": {"name": "trainers_win_rate", "description": "Fetches trainers' win rate statistics from the past specified number of days.", "parameters": {"last_days": {"description": "The number of past days to consider for the statistics. Defaults to 7 days if not specified.", "type": "int", "default": "7"}}}}, {"type": "function", "function": {"name": "constructors_standings", "description": "Retrieve constructor standings for a specified F1 championship year.", "parameters": {"year": {"description": "The year of the F1 championship to retrieve standings for. Defaults to 2005.", "type": "int, optional", "default": "2005"}}}}], "ground_truth": {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "uniquestageimage", "arguments": "{\"is_id\": 12345}"}}, {"type": "function", "function": {"name": "constructors_standings", "arguments": "{\"year\": 2017}"}}]}, "messages": [{"role": "user", "content": "Could you get me the image for stage ID 12345? Also, what are the constructors' standings for 2017?"}, {"role": "assistant", "tool_calls": [{"type": "function", "function": {"name": "uniquestageimage", "arguments": "{\"is_id\": 12345}"}}, {"type": "function", "function": {"name": "constructors_standings", "arguments": "{\"year\": 2017}"}}]}]}
